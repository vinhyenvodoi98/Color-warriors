{"id":"2e76daaa3bc3a6434b2122d3c240d13f","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"contracts/BoardGame.sol":{"content":"// SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.0;\nimport { PlaceStruct } from \"./helpers/Struct.sol\";\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ncontract BoardGame is Ownable {\n    using Counters for Counters.Counter;\n    Counters.Counter private gameId;\n    mapping(uint256 => string[10][10]) public boards;\n    mapping(uint256 => mapping(address => uint8[2])) public userLocation;\n    mapping(uint256 => uint256) public startTime;\n    mapping(uint256 => mapping(address => string)) public userColor;\n    mapping(uint256 => mapping(string => uint256)) public colorCount;\n\n    uint256 PLAYTIME = 420; // 420s Each game has 7 minutes\n    string RED=\"#ef4444\";\n    string YELLOW=\"#fde047\";\n    string BLUE=\"#3b82f6\";\n\n    event Placed(uint256 gameId, address user, uint256 x, uint256 y, string color);\n\n    function place(uint256 _gameId, PlaceStruct calldata input) external {\n        require(stringCompare(input.color, RED) || stringCompare(input.color, YELLOW) || stringCompare(input.color, BLUE), \"This color is not allowed\");\n        require(startTime[_gameId] + PLAYTIME > block.number, \"The game is not ready to play\");\n        boards[_gameId][input.x][input.y] = input.color;\n        userLocation[_gameId][msg.sender][0]= input.x;\n        userLocation[_gameId][msg.sender][1]= input.y;\n        userColor[_gameId][msg.sender] = input.color;\n        colorCount[_gameId][input.color] += 1;\n        emit Placed(_gameId, msg.sender, input.x, input.y, input.color);\n    }\n\n    function changeColor(uint256 _gameId, string memory _color) external {\n        require(stringCompare(_color, RED) || stringCompare(_color, YELLOW) || stringCompare(_color, BLUE), \"This color is not allowed\");\n        require(startTime[_gameId] + PLAYTIME > block.number, \"The game is not ready to play\");\n        require(!stringCompare(userColor[_gameId][msg.sender], \"\"), \"User has no color yet\");\n        boards[_gameId][userLocation[_gameId][msg.sender][0]][userLocation[_gameId][msg.sender][1]] = _color;\n        colorCount[_gameId][_color] += 1;\n        colorCount[_gameId][userColor[_gameId][msg.sender]] -= 1;\n        emit Placed(_gameId, msg.sender, userLocation[_gameId][msg.sender][0], userLocation[_gameId][msg.sender][1], _color);\n    }\n\n    function getWinningColor(uint256 _gameId) public view returns (string memory) {\n        if(colorCount[_gameId][RED] < colorCount[_gameId][YELLOW]) { // Red < Yellow\n            if(colorCount[_gameId][RED] < colorCount[_gameId][BLUE]) { // Red < Blue\n                return RED;\n            } else if(colorCount[_gameId][RED] > colorCount[_gameId][BLUE]){ // Red > Blue\n                return BLUE;\n            } else {\n                return \"no_one\";\n            }\n        } else if(colorCount[_gameId][RED] > colorCount[_gameId][YELLOW]) { // Red > Yellow\n            if(colorCount[_gameId][YELLOW] < colorCount[_gameId][BLUE]) { // Yellow < Blue\n                return YELLOW;\n            } else if(colorCount[_gameId][YELLOW] > colorCount[_gameId][BLUE]){ // Yellow > Blue\n                return BLUE;\n            } else {\n                return \"no_one\";\n            }\n        } else { // Red == Yellow\n            if(colorCount[_gameId][RED] <= colorCount[_gameId][BLUE]) { // Red < BLUE or Red == BLUE\n                return \"no_one\";\n            } else {\n                return BLUE;\n            }\n        }\n    }\n\n    function isUserWin(uint256 _gameId) external view returns(bool) {\n        if(stringCompare(userColor[_gameId][msg.sender], getWinningColor(_gameId))){\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function stringCompare(string memory _string1, string memory _string2) public pure returns(bool) {\n        return keccak256(abi.encodePacked(_string1)) == keccak256(abi.encodePacked(_string2));\n    }\n\n    function newGame() external {\n        startTime[gameId.current()] = block.number;\n        gameId.increment();\n    }\n\n    function getBoard(uint256 _gameId) external view returns (string[10][10] memory) {\n        return boards[_gameId];\n    }\n}\n"},"contracts/helpers/Struct.sol":{"content":"// SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.0;\n\n// @param x coordinates\n// @param y coordinates\n// @param color the color that will place\nstruct PlaceStruct {\n  uint8 x;\n  uint8 y;\n  string color;\n}\n"}},"settings":{"optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}},"libraries":{}}},"output":{"errors":[],"version":"0.8.17","long_version":"0.8.17+commit.8df45f5f.Darwin.appleclang","zk_version":"1.4.1","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[142],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":143,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,142],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"}},"@openzeppelin/contracts/utils/Context.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[142]},"id":143,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"126:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":142,"linearizedBaseContracts":[142],"name":"Context","nameLocation":"641:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":123,"nodeType":"Block","src":"717:34:1","statements":[{"expression":{"expression":{"id":120,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:1","memberName":"sender","nodeType":"MemberAccess","src":"734:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":119,"id":122,"nodeType":"Return","src":"727:17:1"}]},"id":124,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:1","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"674:2:1"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":124,"src":"708:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:1"},"scope":142,"src":"655:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":132,"nodeType":"Block","src":"824:32:1","statements":[{"expression":{"expression":{"id":129,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:1","memberName":"data","nodeType":"MemberAccess","src":"841:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":128,"id":131,"nodeType":"Return","src":"834:15:1"}]},"id":133,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:1","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"774:2:1"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":133,"src":"808:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":126,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:1"},"scope":142,"src":"757:99:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":140,"nodeType":"Block","src":"934:25:1","statements":[{"expression":{"hexValue":"30","id":138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":137,"id":139,"nodeType":"Return","src":"944:8:1"}]},"id":141,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:1","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[],"src":"891:2:1"},"returnParameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"925:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:1"},"scope":142,"src":"862:97:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":143,"src":"623:338:1","usedErrors":[]}],"src":"101:861:1"}},"@openzeppelin/contracts/utils/Counters.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[216]},"id":217,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":144,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"112:311:2","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":216,"linearizedBaseContracts":[216],"name":"Counters","nameLocation":"432:8:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":148,"members":[{"constant":false,"id":147,"mutability":"mutable","name":"_value","nameLocation":"794:6:2","nodeType":"VariableDeclaration","scope":148,"src":"786:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":146,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:2","nodeType":"StructDefinition","scope":216,"src":"447:374:2","visibility":"public"},{"body":{"id":159,"nodeType":"Block","src":"901:38:2","statements":[{"expression":{"expression":{"id":156,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"918:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$148_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:2","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":147,"src":"918:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":155,"id":158,"nodeType":"Return","src":"911:21:2"}]},"id":160,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:2","nodeType":"FunctionDefinition","parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"counter","nameLocation":"860:7:2","nodeType":"VariableDeclaration","scope":160,"src":"844:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$148_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":150,"nodeType":"UserDefinedTypeName","pathNode":{"id":149,"name":"Counter","nameLocations":["844:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":148,"src":"844:7:2"},"referencedDeclaration":148,"src":"844:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$148_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:2"},"returnParameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":160,"src":"892:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":153,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:2"},"scope":216,"src":"827:112:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":173,"nodeType":"Block","src":"998:70:2","statements":[{"id":172,"nodeType":"UncheckedBlock","src":"1008:54:2","statements":[{"expression":{"id":170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":166,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"1032:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$148_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:2","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":147,"src":"1032:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":171,"nodeType":"ExpressionStatement","src":"1032:19:2"}]}]},"id":174,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:2","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"mutability":"mutable","name":"counter","nameLocation":"980:7:2","nodeType":"VariableDeclaration","scope":174,"src":"964:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$148_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":162,"nodeType":"UserDefinedTypeName","pathNode":{"id":161,"name":"Counter","nameLocations":["964:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":148,"src":"964:7:2"},"referencedDeclaration":148,"src":"964:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$148_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:2"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[],"src":"998:0:2"},"scope":216,"src":"945:123:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":201,"nodeType":"Block","src":"1127:176:2","statements":[{"assignments":[181],"declarations":[{"constant":false,"id":181,"mutability":"mutable","name":"value","nameLocation":"1145:5:2","nodeType":"VariableDeclaration","scope":201,"src":"1137:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":180,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":184,"initialValue":{"expression":{"id":182,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"1153:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$148_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:2","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":147,"src":"1153:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"1185:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":185,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"ExpressionStatement","src":"1177:49:2"},{"id":200,"nodeType":"UncheckedBlock","src":"1236:61:2","statements":[{"expression":{"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":192,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"1260:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$148_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":194,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:2","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":147,"src":"1260:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"1277:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":199,"nodeType":"ExpressionStatement","src":"1260:26:2"}]}]},"id":202,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:2","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"counter","nameLocation":"1109:7:2","nodeType":"VariableDeclaration","scope":202,"src":"1093:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$148_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":176,"nodeType":"UserDefinedTypeName","pathNode":{"id":175,"name":"Counter","nameLocations":["1093:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":148,"src":"1093:7:2"},"referencedDeclaration":148,"src":"1093:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$148_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:2"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"1127:0:2"},"scope":216,"src":"1074:229:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":214,"nodeType":"Block","src":"1358:35:2","statements":[{"expression":{"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":208,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":205,"src":"1368:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$148_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:2","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":147,"src":"1368:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":213,"nodeType":"ExpressionStatement","src":"1368:18:2"}]},"id":215,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:2","nodeType":"FunctionDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"counter","nameLocation":"1340:7:2","nodeType":"VariableDeclaration","scope":215,"src":"1324:23:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$148_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":204,"nodeType":"UserDefinedTypeName","pathNode":{"id":203,"name":"Counter","nameLocations":["1324:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":148,"src":"1324:7:2"},"referencedDeclaration":148,"src":"1324:7:2","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$148_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:2"},"returnParameters":{"id":207,"nodeType":"ParameterList","parameters":[],"src":"1358:0:2"},"scope":216,"src":"1309:84:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":217,"src":"424:971:2","usedErrors":[]}],"src":"87:1309:2"}},"contracts/BoardGame.sol":{"id":3,"ast":{"absolutePath":"contracts/BoardGame.sol","exportedSymbols":{"BoardGame":[721],"Context":[142],"Counters":[216],"Ownable":[112],"PlaceStruct":[730]},"id":722,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":218,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"38:23:3"},{"absolutePath":"contracts/helpers/Struct.sol","file":"./helpers/Struct.sol","id":220,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":722,"sourceUnit":731,"src":"62:51:3","symbolAliases":[{"foreign":{"id":219,"name":"PlaceStruct","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"71:11:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":221,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":722,"sourceUnit":113,"src":"115:52:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"@openzeppelin/contracts/utils/Counters.sol","id":222,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":722,"sourceUnit":217,"src":"168:52:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":223,"name":"Ownable","nameLocations":["244:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"244:7:3"},"id":224,"nodeType":"InheritanceSpecifier","src":"244:7:3"}],"canonicalName":"BoardGame","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":721,"linearizedBaseContracts":[721,112,142],"name":"BoardGame","nameLocation":"231:9:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":228,"libraryName":{"id":225,"name":"Counters","nameLocations":["264:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":216,"src":"264:8:3"},"nodeType":"UsingForDirective","src":"258:36:3","typeName":{"id":227,"nodeType":"UserDefinedTypeName","pathNode":{"id":226,"name":"Counters.Counter","nameLocations":["277:8:3","286:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":148,"src":"277:16:3"},"referencedDeclaration":148,"src":"277:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$148_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":231,"mutability":"mutable","name":"gameId","nameLocation":"324:6:3","nodeType":"VariableDeclaration","scope":721,"src":"299:31:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$148_storage","typeString":"struct Counters.Counter"},"typeName":{"id":230,"nodeType":"UserDefinedTypeName","pathNode":{"id":229,"name":"Counters.Counter","nameLocations":["299:8:3","308:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":148,"src":"299:16:3"},"referencedDeclaration":148,"src":"299:16:3","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$148_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"constant":false,"functionSelector":"a4d92e7f","id":239,"mutability":"mutable","name":"boards","nameLocation":"378:6:3","nodeType":"VariableDeclaration","scope":721,"src":"336:48:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_array$_t_string_storage_$10_storage_$10_storage_$","typeString":"mapping(uint256 => string[10][10])"},"typeName":{"id":238,"keyType":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"344:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"336:34:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_array$_t_string_storage_$10_storage_$10_storage_$","typeString":"mapping(uint256 => string[10][10])"},"valueType":{"baseType":{"baseType":{"id":233,"name":"string","nodeType":"ElementaryTypeName","src":"355:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":235,"length":{"hexValue":"3130","id":234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"362:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"ArrayTypeName","src":"355:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$10_storage_ptr","typeString":"string[10]"}},"id":237,"length":{"hexValue":"3130","id":236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"366:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"ArrayTypeName","src":"355:14:3","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$10_storage_$10_storage_ptr","typeString":"string[10][10]"}}},"visibility":"public"},{"constant":false,"functionSelector":"8eafc0cf","id":247,"mutability":"mutable","name":"userLocation","nameLocation":"446:12:3","nodeType":"VariableDeclaration","scope":721,"src":"390:68:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_uint8_$2_storage_$_$","typeString":"mapping(uint256 => mapping(address => uint8[2]))"},"typeName":{"id":246,"keyType":{"id":240,"name":"uint256","nodeType":"ElementaryTypeName","src":"398:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"390:48:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_uint8_$2_storage_$_$","typeString":"mapping(uint256 => mapping(address => uint8[2]))"},"valueType":{"id":245,"keyType":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"417:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"409:28:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint8_$2_storage_$","typeString":"mapping(address => uint8[2])"},"valueType":{"baseType":{"id":242,"name":"uint8","nodeType":"ElementaryTypeName","src":"428:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":244,"length":{"hexValue":"32","id":243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"434:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"428:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_storage_ptr","typeString":"uint8[2]"}}}},"visibility":"public"},{"constant":false,"functionSelector":"3ec4c968","id":251,"mutability":"mutable","name":"startTime","nameLocation":"499:9:3","nodeType":"VariableDeclaration","scope":721,"src":"464:44:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":250,"keyType":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"464:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueType":{"id":249,"name":"uint256","nodeType":"ElementaryTypeName","src":"483:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"34989e5e","id":257,"mutability":"mutable","name":"userColor","nameLocation":"568:9:3","nodeType":"VariableDeclaration","scope":721,"src":"514:63:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_string_storage_$_$","typeString":"mapping(uint256 => mapping(address => string))"},"typeName":{"id":256,"keyType":{"id":252,"name":"uint256","nodeType":"ElementaryTypeName","src":"522:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"514:46:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_string_storage_$_$","typeString":"mapping(uint256 => mapping(address => string))"},"valueType":{"id":255,"keyType":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"541:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"533:26:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string)"},"valueType":{"id":254,"name":"string","nodeType":"ElementaryTypeName","src":"552:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}}},"visibility":"public"},{"constant":false,"functionSelector":"3418a562","id":263,"mutability":"mutable","name":"colorCount","nameLocation":"637:10:3","nodeType":"VariableDeclaration","scope":721,"src":"583:64:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string => uint256))"},"typeName":{"id":262,"keyType":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"591:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"583:46:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string => uint256))"},"valueType":{"id":261,"keyType":{"id":259,"name":"string","nodeType":"ElementaryTypeName","src":"610:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"602:26:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"valueType":{"id":260,"name":"uint256","nodeType":"ElementaryTypeName","src":"620:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"id":266,"mutability":"mutable","name":"PLAYTIME","nameLocation":"662:8:3","nodeType":"VariableDeclaration","scope":721,"src":"654:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":264,"name":"uint256","nodeType":"ElementaryTypeName","src":"654:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343230","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"673:3:3","typeDescriptions":{"typeIdentifier":"t_rational_420_by_1","typeString":"int_const 420"},"value":"420"},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"RED","nameLocation":"721:3:3","nodeType":"VariableDeclaration","scope":721,"src":"714:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":267,"name":"string","nodeType":"ElementaryTypeName","src":"714:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"23656634343434","id":268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"725:9:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_50b397cde8fab5177b7c16709fea41a662b1d126155b88df5c6c0bc81eaff36b","typeString":"literal_string \"#ef4444\""},"value":"#ef4444"},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"YELLOW","nameLocation":"747:6:3","nodeType":"VariableDeclaration","scope":721,"src":"740:23:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":270,"name":"string","nodeType":"ElementaryTypeName","src":"740:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"23666465303437","id":271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"754:9:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_8c40ced8f378bfbdb43667134e3e0bdaee7ab9f475b015a449a0e908515bc8aa","typeString":"literal_string \"#fde047\""},"value":"#fde047"},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"BLUE","nameLocation":"776:4:3","nodeType":"VariableDeclaration","scope":721,"src":"769:21:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":273,"name":"string","nodeType":"ElementaryTypeName","src":"769:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"23336238326636","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"781:9:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6493fd6706204ca45bea01aa45ca1b7347c138a6e78ae6794fbd0f56f8e42c6","typeString":"literal_string \"#3b82f6\""},"value":"#3b82f6"},"visibility":"internal"},{"anonymous":false,"eventSelector":"c17d627c7a58c5192775c63a0af7b8372b5f072181120e20a79db460f6d2b638","id":287,"name":"Placed","nameLocation":"803:6:3","nodeType":"EventDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"indexed":false,"mutability":"mutable","name":"gameId","nameLocation":"818:6:3","nodeType":"VariableDeclaration","scope":287,"src":"810:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"810:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":279,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"834:4:3","nodeType":"VariableDeclaration","scope":287,"src":"826:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":281,"indexed":false,"mutability":"mutable","name":"x","nameLocation":"848:1:3","nodeType":"VariableDeclaration","scope":287,"src":"840:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":283,"indexed":false,"mutability":"mutable","name":"y","nameLocation":"859:1:3","nodeType":"VariableDeclaration","scope":287,"src":"851:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"851:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":285,"indexed":false,"mutability":"mutable","name":"color","nameLocation":"869:5:3","nodeType":"VariableDeclaration","scope":287,"src":"862:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":284,"name":"string","nodeType":"ElementaryTypeName","src":"862:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"809:66:3"},"src":"797:79:3"},{"body":{"id":396,"nodeType":"Block","src":"951:597:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":297,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"983:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_PlaceStruct_$730_calldata_ptr","typeString":"struct PlaceStruct calldata"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"989:5:3","memberName":"color","nodeType":"MemberAccess","referencedDeclaration":729,"src":"983:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":299,"name":"RED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"996:3:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":296,"name":"stringCompare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"969:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory,string memory) pure returns (bool)"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"969:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"expression":{"id":302,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"1018:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_PlaceStruct_$730_calldata_ptr","typeString":"struct PlaceStruct calldata"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1024:5:3","memberName":"color","nodeType":"MemberAccess","referencedDeclaration":729,"src":"1018:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":304,"name":"YELLOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"1031:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":301,"name":"stringCompare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"1004:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory,string memory) pure returns (bool)"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1004:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"969:69:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"expression":{"id":308,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"1056:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_PlaceStruct_$730_calldata_ptr","typeString":"struct PlaceStruct calldata"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1062:5:3","memberName":"color","nodeType":"MemberAccess","referencedDeclaration":729,"src":"1056:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":310,"name":"BLUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"1069:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":307,"name":"stringCompare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"1042:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory,string memory) pure returns (bool)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1042:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"969:105:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468697320636f6c6f72206973206e6f7420616c6c6f776564","id":313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1076:27:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_57dd5ed132fde00ad132d2d78ea06fd21b73aca87f8810d124e014ec11138eee","typeString":"literal_string \"This color is not allowed\""},"value":"This color is not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_57dd5ed132fde00ad132d2d78ea06fd21b73aca87f8810d124e014ec11138eee","typeString":"literal_string \"This color is not allowed\""}],"id":295,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"961:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"961:143:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":315,"nodeType":"ExpressionStatement","src":"961:143:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":317,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"1122:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":319,"indexExpression":{"id":318,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1132:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1122:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":320,"name":"PLAYTIME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"1143:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1122:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":322,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1154:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1160:6:3","memberName":"number","nodeType":"MemberAccess","src":"1154:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1122:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468652067616d65206973206e6f7420726561647920746f20706c6179","id":325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1168:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d503d3263fe355208e8fa9ac4f6c8eb8cefa1b527571a77ec513dab4b5a054de","typeString":"literal_string \"The game is not ready to play\""},"value":"The game is not ready to play"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d503d3263fe355208e8fa9ac4f6c8eb8cefa1b527571a77ec513dab4b5a054de","typeString":"literal_string \"The game is not ready to play\""}],"id":316,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1114:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1114:86:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":327,"nodeType":"ExpressionStatement","src":"1114:86:3"},{"expression":{"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":328,"name":"boards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"1210:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_array$_t_string_storage_$10_storage_$10_storage_$","typeString":"mapping(uint256 => string storage ref[10] storage ref[10] storage ref)"}},"id":334,"indexExpression":{"id":329,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1217:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1210:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$10_storage_$10_storage","typeString":"string storage ref[10] storage ref[10] storage ref"}},"id":335,"indexExpression":{"expression":{"id":330,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"1226:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_PlaceStruct_$730_calldata_ptr","typeString":"struct PlaceStruct calldata"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1232:1:3","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":725,"src":"1226:7:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1210:24:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$10_storage","typeString":"string storage ref[10] storage ref"}},"id":336,"indexExpression":{"expression":{"id":332,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"1235:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_PlaceStruct_$730_calldata_ptr","typeString":"struct PlaceStruct calldata"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1241:1:3","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":727,"src":"1235:7:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1210:33:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":337,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"1246:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_PlaceStruct_$730_calldata_ptr","typeString":"struct PlaceStruct calldata"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1252:5:3","memberName":"color","nodeType":"MemberAccess","referencedDeclaration":729,"src":"1246:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"1210:47:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":340,"nodeType":"ExpressionStatement","src":"1210:47:3"},{"expression":{"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":341,"name":"userLocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"1267:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_uint8_$2_storage_$_$","typeString":"mapping(uint256 => mapping(address => uint8[2] storage ref))"}},"id":346,"indexExpression":{"id":342,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1280:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1267:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint8_$2_storage_$","typeString":"mapping(address => uint8[2] storage ref)"}},"id":347,"indexExpression":{"expression":{"id":343,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1289:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1293:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1289:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1267:33:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_storage","typeString":"uint8[2] storage ref"}},"id":348,"indexExpression":{"hexValue":"30","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1301:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1267:36:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":349,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"1305:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_PlaceStruct_$730_calldata_ptr","typeString":"struct PlaceStruct calldata"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1311:1:3","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":725,"src":"1305:7:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1267:45:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":352,"nodeType":"ExpressionStatement","src":"1267:45:3"},{"expression":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":353,"name":"userLocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"1322:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_uint8_$2_storage_$_$","typeString":"mapping(uint256 => mapping(address => uint8[2] storage ref))"}},"id":358,"indexExpression":{"id":354,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1335:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1322:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint8_$2_storage_$","typeString":"mapping(address => uint8[2] storage ref)"}},"id":359,"indexExpression":{"expression":{"id":355,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1344:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1348:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1344:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1322:33:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_storage","typeString":"uint8[2] storage ref"}},"id":360,"indexExpression":{"hexValue":"31","id":357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1356:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1322:36:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":361,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"1360:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_PlaceStruct_$730_calldata_ptr","typeString":"struct PlaceStruct calldata"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1366:1:3","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":727,"src":"1360:7:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1322:45:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":364,"nodeType":"ExpressionStatement","src":"1322:45:3"},{"expression":{"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":365,"name":"userColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1377:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_string_storage_$_$","typeString":"mapping(uint256 => mapping(address => string storage ref))"}},"id":369,"indexExpression":{"id":366,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1387:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1377:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string storage ref)"}},"id":370,"indexExpression":{"expression":{"id":367,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1396:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1400:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1396:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1377:30:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":371,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"1410:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_PlaceStruct_$730_calldata_ptr","typeString":"struct PlaceStruct calldata"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1416:5:3","memberName":"color","nodeType":"MemberAccess","referencedDeclaration":729,"src":"1410:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"1377:44:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":374,"nodeType":"ExpressionStatement","src":"1377:44:3"},{"expression":{"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":375,"name":"colorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"1431:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string memory => uint256))"}},"id":379,"indexExpression":{"id":376,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1442:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1431:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":380,"indexExpression":{"expression":{"id":377,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"1451:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_PlaceStruct_$730_calldata_ptr","typeString":"struct PlaceStruct calldata"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1457:5:3","memberName":"color","nodeType":"MemberAccess","referencedDeclaration":729,"src":"1451:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1431:32:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1467:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1431:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":383,"nodeType":"ExpressionStatement","src":"1431:37:3"},{"eventCall":{"arguments":[{"id":385,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1490:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":386,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1499:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1503:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1499:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":388,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"1511:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_PlaceStruct_$730_calldata_ptr","typeString":"struct PlaceStruct calldata"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1517:1:3","memberName":"x","nodeType":"MemberAccess","referencedDeclaration":725,"src":"1511:7:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"expression":{"id":390,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"1520:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_PlaceStruct_$730_calldata_ptr","typeString":"struct PlaceStruct calldata"}},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1526:1:3","memberName":"y","nodeType":"MemberAccess","referencedDeclaration":727,"src":"1520:7:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"expression":{"id":392,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"1529:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_PlaceStruct_$730_calldata_ptr","typeString":"struct PlaceStruct calldata"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:5:3","memberName":"color","nodeType":"MemberAccess","referencedDeclaration":729,"src":"1529:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":384,"name":"Placed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"1483:6:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256,uint256,string memory)"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1483:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":395,"nodeType":"EmitStatement","src":"1478:63:3"}]},"functionSelector":"ec20ec58","id":397,"implemented":true,"kind":"function","modifiers":[],"name":"place","nameLocation":"891:5:3","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"_gameId","nameLocation":"905:7:3","nodeType":"VariableDeclaration","scope":397,"src":"897:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"input","nameLocation":"935:5:3","nodeType":"VariableDeclaration","scope":397,"src":"914:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PlaceStruct_$730_calldata_ptr","typeString":"struct PlaceStruct"},"typeName":{"id":291,"nodeType":"UserDefinedTypeName","pathNode":{"id":290,"name":"PlaceStruct","nameLocations":["914:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":730,"src":"914:11:3"},"referencedDeclaration":730,"src":"914:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_PlaceStruct_$730_storage_ptr","typeString":"struct PlaceStruct"}},"visibility":"internal"}],"src":"896:45:3"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[],"src":"951:0:3"},"scope":721,"src":"882:666:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":516,"nodeType":"Block","src":"1623:679:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":406,"name":"_color","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"1655:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":407,"name":"RED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1663:3:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":405,"name":"stringCompare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"1641:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory,string memory) pure returns (bool)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1641:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":410,"name":"_color","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"1685:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":411,"name":"YELLOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"1693:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":409,"name":"stringCompare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"1671:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory,string memory) pure returns (bool)"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1671:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1641:59:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":415,"name":"_color","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"1718:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":416,"name":"BLUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"1726:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":414,"name":"stringCompare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"1704:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory,string memory) pure returns (bool)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1704:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1641:90:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468697320636f6c6f72206973206e6f7420616c6c6f776564","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1733:27:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_57dd5ed132fde00ad132d2d78ea06fd21b73aca87f8810d124e014ec11138eee","typeString":"literal_string \"This color is not allowed\""},"value":"This color is not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_57dd5ed132fde00ad132d2d78ea06fd21b73aca87f8810d124e014ec11138eee","typeString":"literal_string \"This color is not allowed\""}],"id":404,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1633:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1633:128:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"ExpressionStatement","src":"1633:128:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":423,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"1779:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":425,"indexExpression":{"id":424,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"1789:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1779:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":426,"name":"PLAYTIME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"1800:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1779:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":428,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1811:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1817:6:3","memberName":"number","nodeType":"MemberAccess","src":"1811:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1779:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5468652067616d65206973206e6f7420726561647920746f20706c6179","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1825:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d503d3263fe355208e8fa9ac4f6c8eb8cefa1b527571a77ec513dab4b5a054de","typeString":"literal_string \"The game is not ready to play\""},"value":"The game is not ready to play"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d503d3263fe355208e8fa9ac4f6c8eb8cefa1b527571a77ec513dab4b5a054de","typeString":"literal_string \"The game is not ready to play\""}],"id":422,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1771:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1771:86:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":433,"nodeType":"ExpressionStatement","src":"1771:86:3"},{"expression":{"arguments":[{"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1875:50:3","subExpression":{"arguments":[{"baseExpression":{"baseExpression":{"id":436,"name":"userColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"1890:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_string_storage_$_$","typeString":"mapping(uint256 => mapping(address => string storage ref))"}},"id":438,"indexExpression":{"id":437,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"1900:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1890:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string storage ref)"}},"id":441,"indexExpression":{"expression":{"id":439,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1909:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1913:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1909:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1890:30:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"","id":442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1922:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":435,"name":"stringCompare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"1876:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory,string memory) pure returns (bool)"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1876:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5573657220686173206e6f20636f6c6f7220796574","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1927:23:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_88000e64ede79597cf7ac2055177b36bf989c7deb342e084ac9f0fce6a2885bb","typeString":"literal_string \"User has no color yet\""},"value":"User has no color yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_88000e64ede79597cf7ac2055177b36bf989c7deb342e084ac9f0fce6a2885bb","typeString":"literal_string \"User has no color yet\""}],"id":434,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1867:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1867:84:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":447,"nodeType":"ExpressionStatement","src":"1867:84:3"},{"expression":{"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":448,"name":"boards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"1961:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_array$_t_string_storage_$10_storage_$10_storage_$","typeString":"mapping(uint256 => string storage ref[10] storage ref[10] storage ref)"}},"id":466,"indexExpression":{"id":449,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"1968:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1961:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$10_storage_$10_storage","typeString":"string storage ref[10] storage ref[10] storage ref"}},"id":467,"indexExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":450,"name":"userLocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"1977:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_uint8_$2_storage_$_$","typeString":"mapping(uint256 => mapping(address => uint8[2] storage ref))"}},"id":452,"indexExpression":{"id":451,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"1990:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1977:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint8_$2_storage_$","typeString":"mapping(address => uint8[2] storage ref)"}},"id":455,"indexExpression":{"expression":{"id":453,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1999:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2003:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1999:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1977:33:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_storage","typeString":"uint8[2] storage ref"}},"id":457,"indexExpression":{"hexValue":"30","id":456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2011:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1977:36:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1961:53:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$10_storage","typeString":"string storage ref[10] storage ref"}},"id":468,"indexExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":458,"name":"userLocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"2015:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_uint8_$2_storage_$_$","typeString":"mapping(uint256 => mapping(address => uint8[2] storage ref))"}},"id":460,"indexExpression":{"id":459,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2028:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2015:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint8_$2_storage_$","typeString":"mapping(address => uint8[2] storage ref)"}},"id":463,"indexExpression":{"expression":{"id":461,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2037:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2041:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2037:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2015:33:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_storage","typeString":"uint8[2] storage ref"}},"id":465,"indexExpression":{"hexValue":"31","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2049:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2015:36:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1961:91:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":469,"name":"_color","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2055:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1961:100:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":471,"nodeType":"ExpressionStatement","src":"1961:100:3"},{"expression":{"id":478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":472,"name":"colorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2071:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string memory => uint256))"}},"id":475,"indexExpression":{"id":473,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2082:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2071:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":476,"indexExpression":{"id":474,"name":"_color","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2091:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2071:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2102:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2071:32:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":479,"nodeType":"ExpressionStatement","src":"2071:32:3"},{"expression":{"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":480,"name":"colorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2113:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string memory => uint256))"}},"id":488,"indexExpression":{"id":481,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2124:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2113:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":489,"indexExpression":{"baseExpression":{"baseExpression":{"id":482,"name":"userColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"2133:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_string_storage_$_$","typeString":"mapping(uint256 => mapping(address => string storage ref))"}},"id":484,"indexExpression":{"id":483,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2143:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2133:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string storage ref)"}},"id":487,"indexExpression":{"expression":{"id":485,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2152:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2156:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2152:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2133:30:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2113:51:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2168:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2113:56:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":492,"nodeType":"ExpressionStatement","src":"2113:56:3"},{"eventCall":{"arguments":[{"id":494,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2191:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":495,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2200:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2204:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2200:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"baseExpression":{"baseExpression":{"id":497,"name":"userLocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"2212:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_uint8_$2_storage_$_$","typeString":"mapping(uint256 => mapping(address => uint8[2] storage ref))"}},"id":499,"indexExpression":{"id":498,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2225:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2212:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint8_$2_storage_$","typeString":"mapping(address => uint8[2] storage ref)"}},"id":502,"indexExpression":{"expression":{"id":500,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2234:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2238:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2234:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2212:33:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_storage","typeString":"uint8[2] storage ref"}},"id":504,"indexExpression":{"hexValue":"30","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2246:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2212:36:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"baseExpression":{"baseExpression":{"baseExpression":{"id":505,"name":"userLocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"2250:12:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_uint8_$2_storage_$_$","typeString":"mapping(uint256 => mapping(address => uint8[2] storage ref))"}},"id":507,"indexExpression":{"id":506,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"2263:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2250:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint8_$2_storage_$","typeString":"mapping(address => uint8[2] storage ref)"}},"id":510,"indexExpression":{"expression":{"id":508,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2272:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2276:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2272:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2250:33:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint8_$2_storage","typeString":"uint8[2] storage ref"}},"id":512,"indexExpression":{"hexValue":"31","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2284:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2250:36:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":513,"name":"_color","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"2288:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":493,"name":"Placed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"2184:6:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256,uint256,string memory)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2184:111:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"EmitStatement","src":"2179:116:3"}]},"functionSelector":"cf68d97e","id":517,"implemented":true,"kind":"function","modifiers":[],"name":"changeColor","nameLocation":"1563:11:3","nodeType":"FunctionDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"_gameId","nameLocation":"1583:7:3","nodeType":"VariableDeclaration","scope":517,"src":"1575:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1575:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"_color","nameLocation":"1606:6:3","nodeType":"VariableDeclaration","scope":517,"src":"1592:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":400,"name":"string","nodeType":"ElementaryTypeName","src":"1592:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1574:39:3"},"returnParameters":{"id":403,"nodeType":"ParameterList","parameters":[],"src":"1623:0:3"},"scope":721,"src":"1554:748:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":635,"nodeType":"Block","src":"2386:1043:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":524,"name":"colorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2399:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string memory => uint256))"}},"id":526,"indexExpression":{"id":525,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2410:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2399:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":528,"indexExpression":{"id":527,"name":"RED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"2419:3:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2399:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"baseExpression":{"id":529,"name":"colorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2426:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string memory => uint256))"}},"id":531,"indexExpression":{"id":530,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2437:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2426:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":533,"indexExpression":{"id":532,"name":"YELLOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2446:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2426:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2399:54:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":569,"name":"colorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2792:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string memory => uint256))"}},"id":571,"indexExpression":{"id":570,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2803:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2792:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":573,"indexExpression":{"id":572,"name":"RED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"2812:3:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2792:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"baseExpression":{"id":574,"name":"colorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2819:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string memory => uint256))"}},"id":576,"indexExpression":{"id":575,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2830:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2819:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":578,"indexExpression":{"id":577,"name":"YELLOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2839:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2819:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2792:54:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":632,"nodeType":"Block","src":"3197:226:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":614,"name":"colorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3231:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string memory => uint256))"}},"id":616,"indexExpression":{"id":615,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"3242:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3231:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":618,"indexExpression":{"id":617,"name":"RED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"3251:3:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3231:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"baseExpression":{"baseExpression":{"id":619,"name":"colorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3259:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string memory => uint256))"}},"id":621,"indexExpression":{"id":620,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"3270:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3259:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":623,"indexExpression":{"id":622,"name":"BLUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"3279:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3259:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3231:53:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":630,"nodeType":"Block","src":"3369:44:3","statements":[{"expression":{"id":628,"name":"BLUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"3394:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":523,"id":629,"nodeType":"Return","src":"3387:11:3"}]},"id":631,"nodeType":"IfStatement","src":"3228:185:3","trueBody":{"id":627,"nodeType":"Block","src":"3286:77:3","statements":[{"expression":{"hexValue":"6e6f5f6f6e65","id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3340:8:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_33b419bd74698af67fe2a20b92da1b0a9a931bccd6338763a62e4b5bdfd6a4a4","typeString":"literal_string \"no_one\""},"value":"no_one"},"functionReturnParameters":523,"id":626,"nodeType":"Return","src":"3333:15:3"}]}}]},"id":633,"nodeType":"IfStatement","src":"2789:634:3","trueBody":{"id":613,"nodeType":"Block","src":"2848:343:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":580,"name":"colorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2881:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string memory => uint256))"}},"id":582,"indexExpression":{"id":581,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2892:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2881:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":584,"indexExpression":{"id":583,"name":"YELLOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2901:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2881:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"baseExpression":{"id":585,"name":"colorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2911:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string memory => uint256))"}},"id":587,"indexExpression":{"id":586,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2922:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2911:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":589,"indexExpression":{"id":588,"name":"BLUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"2931:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2911:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2881:55:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":594,"name":"colorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3010:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string memory => uint256))"}},"id":596,"indexExpression":{"id":595,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"3021:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3010:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":598,"indexExpression":{"id":597,"name":"YELLOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"3030:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3010:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"baseExpression":{"id":599,"name":"colorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"3040:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string memory => uint256))"}},"id":601,"indexExpression":{"id":600,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"3051:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3040:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":603,"indexExpression":{"id":602,"name":"BLUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"3060:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3040:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3010:55:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":610,"nodeType":"Block","src":"3133:48:3","statements":[{"expression":{"hexValue":"6e6f5f6f6e65","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3158:8:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_33b419bd74698af67fe2a20b92da1b0a9a931bccd6338763a62e4b5bdfd6a4a4","typeString":"literal_string \"no_one\""},"value":"no_one"},"functionReturnParameters":523,"id":609,"nodeType":"Return","src":"3151:15:3"}]},"id":611,"nodeType":"IfStatement","src":"3007:174:3","trueBody":{"id":607,"nodeType":"Block","src":"3066:61:3","statements":[{"expression":{"id":605,"name":"BLUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"3108:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":523,"id":606,"nodeType":"Return","src":"3101:11:3"}]}},"id":612,"nodeType":"IfStatement","src":"2878:303:3","trueBody":{"id":593,"nodeType":"Block","src":"2938:63:3","statements":[{"expression":{"id":591,"name":"YELLOW","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2980:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":523,"id":592,"nodeType":"Return","src":"2973:13:3"}]}}]}},"id":634,"nodeType":"IfStatement","src":"2396:1027:3","trueBody":{"id":568,"nodeType":"Block","src":"2455:328:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":535,"name":"colorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2488:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string memory => uint256))"}},"id":537,"indexExpression":{"id":536,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2499:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2488:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":539,"indexExpression":{"id":538,"name":"RED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"2508:3:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2488:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"baseExpression":{"id":540,"name":"colorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2515:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string memory => uint256))"}},"id":542,"indexExpression":{"id":541,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2526:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2515:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":544,"indexExpression":{"id":543,"name":"BLUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"2535:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2515:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2488:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":549,"name":"colorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2608:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string memory => uint256))"}},"id":551,"indexExpression":{"id":550,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2619:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2608:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":553,"indexExpression":{"id":552,"name":"RED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"2628:3:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2608:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"baseExpression":{"id":554,"name":"colorCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"2635:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(string memory => uint256))"}},"id":556,"indexExpression":{"id":555,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"2646:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2635:19:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":558,"indexExpression":{"id":557,"name":"BLUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"2655:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2635:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2608:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":565,"nodeType":"Block","src":"2725:48:3","statements":[{"expression":{"hexValue":"6e6f5f6f6e65","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2750:8:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_33b419bd74698af67fe2a20b92da1b0a9a931bccd6338763a62e4b5bdfd6a4a4","typeString":"literal_string \"no_one\""},"value":"no_one"},"functionReturnParameters":523,"id":564,"nodeType":"Return","src":"2743:15:3"}]},"id":566,"nodeType":"IfStatement","src":"2605:168:3","trueBody":{"id":562,"nodeType":"Block","src":"2661:58:3","statements":[{"expression":{"id":560,"name":"BLUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":275,"src":"2700:4:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":523,"id":561,"nodeType":"Return","src":"2693:11:3"}]}},"id":567,"nodeType":"IfStatement","src":"2485:288:3","trueBody":{"id":548,"nodeType":"Block","src":"2542:57:3","statements":[{"expression":{"id":546,"name":"RED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"2581:3:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":523,"id":547,"nodeType":"Return","src":"2574:10:3"}]}}]}}]},"functionSelector":"af7bbfe8","id":636,"implemented":true,"kind":"function","modifiers":[],"name":"getWinningColor","nameLocation":"2317:15:3","nodeType":"FunctionDefinition","parameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"_gameId","nameLocation":"2341:7:3","nodeType":"VariableDeclaration","scope":636,"src":"2333:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":518,"name":"uint256","nodeType":"ElementaryTypeName","src":"2333:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2332:17:3"},"returnParameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":636,"src":"2371:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":521,"name":"string","nodeType":"ElementaryTypeName","src":"2371:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2370:15:3"},"scope":721,"src":"2308:1121:3","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":661,"nodeType":"Block","src":"3499:170:3","statements":[{"condition":{"arguments":[{"baseExpression":{"baseExpression":{"id":644,"name":"userColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3526:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_string_storage_$_$","typeString":"mapping(uint256 => mapping(address => string storage ref))"}},"id":646,"indexExpression":{"id":645,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"3536:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3526:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_string_storage_$","typeString":"mapping(address => string storage ref)"}},"id":649,"indexExpression":{"expression":{"id":647,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3545:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3549:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3545:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3526:30:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[{"id":651,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":638,"src":"3574:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":650,"name":"getWinningColor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"3558:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3558:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":643,"name":"stringCompare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"3512:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$","typeString":"function (string memory,string memory) pure returns (bool)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3512:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":659,"nodeType":"Block","src":"3626:37:3","statements":[{"expression":{"hexValue":"66616c7365","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3647:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":642,"id":658,"nodeType":"Return","src":"3640:12:3"}]},"id":660,"nodeType":"IfStatement","src":"3509:154:3","trueBody":{"id":656,"nodeType":"Block","src":"3584:36:3","statements":[{"expression":{"hexValue":"74727565","id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3605:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":642,"id":655,"nodeType":"Return","src":"3598:11:3"}]}}]},"functionSelector":"abda0efe","id":662,"implemented":true,"kind":"function","modifiers":[],"name":"isUserWin","nameLocation":"3444:9:3","nodeType":"FunctionDefinition","parameters":{"id":639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":638,"mutability":"mutable","name":"_gameId","nameLocation":"3462:7:3","nodeType":"VariableDeclaration","scope":662,"src":"3454:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":637,"name":"uint256","nodeType":"ElementaryTypeName","src":"3454:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3453:17:3"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":662,"src":"3493:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":640,"name":"bool","nodeType":"ElementaryTypeName","src":"3493:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3492:6:3"},"scope":721,"src":"3435:234:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":685,"nodeType":"Block","src":"3772:102:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":674,"name":"_string1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3816:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":672,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3799:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3803:12:3","memberName":"encodePacked","nodeType":"MemberAccess","src":"3799:16:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3799:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":671,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3789:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3789:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":680,"name":"_string2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"3857:8:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":678,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3840:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3844:12:3","memberName":"encodePacked","nodeType":"MemberAccess","src":"3840:16:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3840:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":677,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3830:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3830:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3789:78:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":670,"id":684,"nodeType":"Return","src":"3782:85:3"}]},"functionSelector":"60353db9","id":686,"implemented":true,"kind":"function","modifiers":[],"name":"stringCompare","nameLocation":"3684:13:3","nodeType":"FunctionDefinition","parameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"_string1","nameLocation":"3712:8:3","nodeType":"VariableDeclaration","scope":686,"src":"3698:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":663,"name":"string","nodeType":"ElementaryTypeName","src":"3698:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"_string2","nameLocation":"3736:8:3","nodeType":"VariableDeclaration","scope":686,"src":"3722:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":665,"name":"string","nodeType":"ElementaryTypeName","src":"3722:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3697:48:3"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"3766:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":668,"name":"bool","nodeType":"ElementaryTypeName","src":"3766:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3765:6:3"},"scope":721,"src":"3675:199:3","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":703,"nodeType":"Block","src":"3908:87:3","statements":[{"expression":{"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":689,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"3918:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":693,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":690,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"3928:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$148_storage","typeString":"struct Counters.Counter storage ref"}},"id":691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3935:7:3","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":160,"src":"3928:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$148_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$148_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3928:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3918:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":694,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3948:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3954:6:3","memberName":"number","nodeType":"MemberAccess","src":"3948:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3918:42:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":697,"nodeType":"ExpressionStatement","src":"3918:42:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":698,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"3970:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$148_storage","typeString":"struct Counters.Counter storage ref"}},"id":700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3977:9:3","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":174,"src":"3970:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$148_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$148_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3970:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":702,"nodeType":"ExpressionStatement","src":"3970:18:3"}]},"functionSelector":"7d03f5f3","id":704,"implemented":true,"kind":"function","modifiers":[],"name":"newGame","nameLocation":"3889:7:3","nodeType":"FunctionDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"3896:2:3"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[],"src":"3908:0:3"},"scope":721,"src":"3880:115:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":719,"nodeType":"Block","src":"4082:39:3","statements":[{"expression":{"baseExpression":{"id":715,"name":"boards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"4099:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_array$_t_string_storage_$10_storage_$10_storage_$","typeString":"mapping(uint256 => string storage ref[10] storage ref[10] storage ref)"}},"id":717,"indexExpression":{"id":716,"name":"_gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"4106:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4099:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$10_storage_$10_storage","typeString":"string storage ref[10] storage ref[10] storage ref"}},"functionReturnParameters":714,"id":718,"nodeType":"Return","src":"4092:22:3"}]},"functionSelector":"45e09e54","id":720,"implemented":true,"kind":"function","modifiers":[],"name":"getBoard","nameLocation":"4010:8:3","nodeType":"FunctionDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"_gameId","nameLocation":"4027:7:3","nodeType":"VariableDeclaration","scope":720,"src":"4019:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":705,"name":"uint256","nodeType":"ElementaryTypeName","src":"4019:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4018:17:3"},"returnParameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":720,"src":"4059:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$10_memory_ptr_$10_memory_ptr","typeString":"string[10][10]"},"typeName":{"baseType":{"baseType":{"id":708,"name":"string","nodeType":"ElementaryTypeName","src":"4059:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":710,"length":{"hexValue":"3130","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4066:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"ArrayTypeName","src":"4059:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$10_storage_ptr","typeString":"string[10]"}},"id":712,"length":{"hexValue":"3130","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4070:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"ArrayTypeName","src":"4059:14:3","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$10_storage_$10_storage_ptr","typeString":"string[10][10]"}},"visibility":"internal"}],"src":"4058:23:3"},"scope":721,"src":"4001:120:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":722,"src":"222:3901:3","usedErrors":[]}],"src":"38:4086:3"}},"contracts/helpers/Struct.sol":{"id":4,"ast":{"absolutePath":"contracts/helpers/Struct.sol","exportedSymbols":{"PlaceStruct":[730]},"id":731,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":723,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"38:23:4"},{"canonicalName":"PlaceStruct","id":730,"members":[{"constant":false,"id":725,"mutability":"mutable","name":"x","nameLocation":"182:1:4","nodeType":"VariableDeclaration","scope":730,"src":"176:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":724,"name":"uint8","nodeType":"ElementaryTypeName","src":"176:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":727,"mutability":"mutable","name":"y","nameLocation":"193:1:4","nodeType":"VariableDeclaration","scope":730,"src":"187:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":726,"name":"uint8","nodeType":"ElementaryTypeName","src":"187:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"color","nameLocation":"205:5:4","nodeType":"VariableDeclaration","scope":730,"src":"198:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":728,"name":"string","nodeType":"ElementaryTypeName","src":"198:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"PlaceStruct","nameLocation":"160:11:4","nodeType":"StructDefinition","scope":731,"src":"153:60:4","visibility":"public"}],"src":"38:176:4"}}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"irOptimized":""}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":null,"bytecode":null,"methodIdentifiers":{}},"irOptimized":""}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}","solc_version":"0.8.17","solc_zkvm_edition":null,"zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":null},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"Counters.sol:Counters\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n","bytecode":{"object":"00000001012001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000101004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000004779c9ce50ca8ef133959bd96049d5689ada014c1558aef403a9240af48cc84a"},"methodIdentifiers":{}},"irOptimized":"/// @use-src 2:\"@openzeppelin/contracts/utils/Counters.sol\"\nobject \"Counters_216\" {\n    code {\n        {\n            /// @src 2:424:1395  \"library Counters {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"Counters_216_deployed\")\n            codecopy(_1, dataoffset(\"Counters_216_deployed\"), _2)\n            setimmutable(_1, \"library_deploy_address\", address())\n            return(_1, _2)\n        }\n    }\n    /// @use-src 2:\"@openzeppelin/contracts/utils/Counters.sol\"\n    object \"Counters_216_deployed\" {\n        code {\n            {\n                /// @src 2:424:1395  \"library Counters {...\"\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122067f32d20a62b3ae87d5edfce1a86f99da6950af4ad21f11743e7fee69399872c64736f6c63430008110033\"\n    }\n}\n","hash":"01000007918cb989f7b7163a9333a6c627d883c73c085a0c62e9fba623fefe5a","factoryDependencies":{}}},"contracts/BoardGame.sol":{"BoardGame":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"x","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"y","type":"uint256"},{"indexed":false,"internalType":"string","name":"color","type":"string"}],"name":"Placed","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"boards","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_gameId","type":"uint256"},{"internalType":"string","name":"_color","type":"string"}],"name":"changeColor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"string","name":"","type":"string"}],"name":"colorCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_gameId","type":"uint256"}],"name":"getBoard","outputs":[{"internalType":"string[10][10]","name":"","type":"string[10][10]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_gameId","type":"uint256"}],"name":"getWinningColor","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_gameId","type":"uint256"}],"name":"isUserWin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"newGame","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_gameId","type":"uint256"},{"components":[{"internalType":"uint8","name":"x","type":"uint8"},{"internalType":"uint8","name":"y","type":"uint8"},{"internalType":"string","name":"color","type":"string"}],"internalType":"struct PlaceStruct","name":"input","type":"tuple"}],"name":"place","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"startTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_string1","type":"string"},{"internalType":"string","name":"_string2","type":"string"}],"name":"stringCompare","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"userColor","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userLocation","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"}],"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"y\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"color\",\"type\":\"string\"}],\"name\":\"Placed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"boards\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_color\",\"type\":\"string\"}],\"name\":\"changeColor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"colorCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameId\",\"type\":\"uint256\"}],\"name\":\"getBoard\",\"outputs\":[{\"internalType\":\"string[10][10]\",\"name\":\"\",\"type\":\"string[10][10]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameId\",\"type\":\"uint256\"}],\"name\":\"getWinningColor\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameId\",\"type\":\"uint256\"}],\"name\":\"isUserWin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gameId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"x\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"y\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"color\",\"type\":\"string\"}],\"internalType\":\"struct PlaceStruct\",\"name\":\"input\",\"type\":\"tuple\"}],\"name\":\"place\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_string1\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_string2\",\"type\":\"string\"}],\"name\":\"stringCompare\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userColor\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userLocation\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BoardGame.sol\":\"BoardGame\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"contracts/BoardGame.sol\":{\"keccak256\":\"0xf0500adebd768dfbc0fa59f93642164ee8aa0f74c9718091c64c747b57192cf7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://74c9c3093fb18668c73ea1f4be191681bf073b31fbb446c025003a41743cfa43\",\"dweb:/ipfs/Qmf8ieUS4pVThPsmVek85FsqSHBUJ5HiHK6v9i5qhVmAos\"]},\"contracts/helpers/Struct.sol\":{\"keccak256\":\"0x7256b7fd8753d2aded021a7d04363e92973afea168ddb8f8de7032e44c757c3b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://fbb29eaa285d87f50888e0f73eeac8045d0dacd51f4e9dd98ab385b21a45a134\",\"dweb:/ipfs/QmURpbsjg7mPV6Q5DhhnMkvcLbFRsD9yvu9Qi6SA5ZsND3\"]}},\"version\":1}","solc_version":"0.8.17","solc_zkvm_edition":null,"zk_version":"1.4.1"},"storageLayout":{"storage":[{"astId":7,"contract":"contracts/BoardGame.sol:BoardGame","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":231,"contract":"contracts/BoardGame.sol:BoardGame","label":"gameId","offset":0,"slot":"1","type":"t_struct(Counter)148_storage"},{"astId":239,"contract":"contracts/BoardGame.sol:BoardGame","label":"boards","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_array(t_array(t_string_storage)10_storage)10_storage)"},{"astId":247,"contract":"contracts/BoardGame.sol:BoardGame","label":"userLocation","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint8)2_storage))"},{"astId":251,"contract":"contracts/BoardGame.sol:BoardGame","label":"startTime","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_uint256)"},{"astId":257,"contract":"contracts/BoardGame.sol:BoardGame","label":"userColor","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_mapping(t_address,t_string_storage))"},{"astId":263,"contract":"contracts/BoardGame.sol:BoardGame","label":"colorCount","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256))"},{"astId":266,"contract":"contracts/BoardGame.sol:BoardGame","label":"PLAYTIME","offset":0,"slot":"7","type":"t_uint256"},{"astId":269,"contract":"contracts/BoardGame.sol:BoardGame","label":"RED","offset":0,"slot":"8","type":"t_string_storage"},{"astId":272,"contract":"contracts/BoardGame.sol:BoardGame","label":"YELLOW","offset":0,"slot":"9","type":"t_string_storage"},{"astId":275,"contract":"contracts/BoardGame.sol:BoardGame","label":"BLUE","offset":0,"slot":"10","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_array(t_string_storage)10_storage)10_storage":{"base":"t_array(t_string_storage)10_storage","encoding":"inplace","label":"string[10][10]","numberOfBytes":"3200"},"t_array(t_string_storage)10_storage":{"base":"t_string_storage","encoding":"inplace","label":"string[10]","numberOfBytes":"320"},"t_array(t_uint8)2_storage":{"base":"t_uint8","encoding":"inplace","label":"uint8[2]","numberOfBytes":"32"},"t_mapping(t_address,t_array(t_uint8)2_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint8[2])","numberOfBytes":"32","value":"t_array(t_uint8)2_storage"},"t_mapping(t_address,t_string_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_string_memory_ptr,t_uint256)":{"encoding":"mapping","key":"t_string_memory_ptr","label":"mapping(string => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_array(t_array(t_string_storage)10_storage)10_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string[10][10])","numberOfBytes":"32","value":"t_array(t_array(t_string_storage)10_storage)10_storage"},"t_mapping(t_uint256,t_mapping(t_address,t_array(t_uint8)2_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint8[2]))","numberOfBytes":"32","value":"t_mapping(t_address,t_array(t_uint8)2_storage)"},"t_mapping(t_uint256,t_mapping(t_address,t_string_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => string))","numberOfBytes":"32","value":"t_mapping(t_address,t_string_storage)"},"t_mapping(t_uint256,t_mapping(t_string_memory_ptr,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(string => uint256))","numberOfBytes":"32","value":"t_mapping(t_string_memory_ptr,t_uint256)"},"t_mapping(t_uint256,t_uint256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_memory_ptr":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)148_storage":{"encoding":"inplace","label":"struct Counters.Counter","members":[{"astId":147,"contract":"contracts/BoardGame.sol:BoardGame","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"evm":{"legacyAssembly":null,"assembly":"\t.text\n\t.file\t\"BoardGame.sol:BoardGame\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[11]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_10[0], r2, r4\n\tjump.le\t@.BB0_24\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.gt\t@.BB0_39\n\tsub.s!\t@CPI0_17[0], r2, r4\n\tjump.gt\t@.BB0_37\n\tsub.s!\t@CPI0_20[0], r2, r4\n\tjump.eq\t@.BB0_107\n\tsub.s!\t@CPI0_21[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t100, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI0_3[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[10]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[10], r0, r2\n\tsub.s!\t1, r2, r2\n\tjump.gt\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r3\n\tshr.s\t5, r3, r2\n\tadd\tr1, r2, r1\n\tsload\tr1, r1\n\tshl.s\t3, r3, r2\n\tand\t248, r2, r2\n\tshr\tr1, r2, r1\n\tand\t255, r1, r1\n\tjump\t@.BB0_117\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r2\n\tand\t@CPI0_1[0], r2, r1\n\tcontext.caller\tr6\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\t@CPI0_2[0], r1, r1\n\tand\t@CPI0_3[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_4[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\t420, r0, r1\n\tadd\t7, r0, r2\n\tsstore\tr2, r1\n\tadd\t8, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_5\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_10\n\tadd\tr3, r0, stack-[10]\n\tadd\tr4, r0, stack-[11]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tadd\tstack-[11], r0, r4\n\tjump.ge\t@.BB0_10\n.BB0_12:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_12\n.BB0_10:\n\tadd\t@CPI0_6[0], r0, r1\n\tsstore\tr4, r1\n\tadd\t9, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_5\n\tsub.s!\t31, r3, r1\n\tjump.le\t@.BB0_15\n\tadd\tr3, r0, stack-[10]\n\tadd\tr4, r0, stack-[11]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tadd\tstack-[11], r0, r4\n\tjump.ge\t@.BB0_15\n.BB0_17:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_17\n.BB0_15:\n\tadd\t@CPI0_7[0], r0, r1\n\tsstore\tr4, r1\n\tadd\t10, r0, r4\n\tsload\tr4, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.eq\t@.BB0_16\n.BB0_5:\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_55[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_24:\n\tsub.s!\t@CPI0_22[0], r2, r4\n\tjump.le\t@.BB0_25\n\tsub.s!\t@CPI0_23[0], r2, r4\n\tjump.gt\t@.BB0_31\n\tsub.s!\t@CPI0_26[0], r2, r4\n\tjump.eq\t@.BB0_53\n\tsub.s!\t@CPI0_27[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r4\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_35[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_2\n\tadd\t4, r4, r5\n\tptr.add\tr1, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_35[0], r2, r6\n\tjump.gt\t@.BB0_58\n\tadd\t31, r2, r6\n\tsub.s\t32, r0, r7\n\tand\tr6, r7, r6\n\tadd\t63, r6, r6\n\tand\tr6, r7, r6\n\tsub.s!\t@CPI0_37[0], r6, r7\n\tjump.gt\t@.BB0_58\n\tadd\t36, r4, r4\n\tadd\t128, r6, r6\n\tst.1\t64, r6\n\tst.1\t128, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r3, r4\n\tjump.gt\t@.BB0_2\n\tadd\t32, r5, r4\n\tptr.add\tr1, r4, r4\n\tand\t31, r2, r5\n\tshr.s!\t5, r2, r6\n\tjump.eq\t@.BB0_382\n\tadd\tr0, r0, r7\n.BB0_96:\n\tshl.s\t5, r7, r8\n\tptr.add\tr4, r8, r9\n\tld\tr9, r9\n\tadd\t160, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_96\n.BB0_382:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_98\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tshl.s\t3, r5, r5\n\tadd\t160, r6, r6\n\tld.1\tr6, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB0_98:\n\tadd\t160, r2, r2\n\tst.1\tr2, r0\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_35[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\t4, r1, r1\n\tadd\tr3, r0, r2\n\tnear_call\tr0, @abi_decode_string, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tadd\t128, r0, r1\n\tnear_call\tr0, @fun_stringCompare, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tjump\t@.BB0_117\n.BB0_39:\n\tsub.s!\t@CPI0_12[0], r2, r4\n\tjump.gt\t@.BB0_42\n\tsub.s!\t@CPI0_15[0], r2, r4\n\tjump.eq\t@.BB0_153\n\tsub.s!\t@CPI0_16[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r4\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_35[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tadd\t35, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_2\n\tadd\t4, r4, r5\n\tptr.add\tr1, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_35[0], r2, r6\n\tjump.gt\t@.BB0_58\n\tadd\t31, r2, r6\n\tsub.s\t32, r0, r8\n\tand\tr6, r8, r6\n\tadd\t63, r6, r6\n\tand\tr6, r8, r6\n\tsub.s!\t@CPI0_37[0], r6, r7\n\tjump.gt\t@.BB0_58\n\tadd\tr8, r0, stack-[10]\n\tadd\t36, r4, r4\n\tadd\t128, r6, r6\n\tst.1\t64, r6\n\tst.1\t128, r2\n\tadd\tr2, r4, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t32, r5, r3\n\tptr.add\tr1, r3, r1\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r4\n\tjump.eq\t@.BB0_383\n\tadd\tr0, r0, r5\n.BB0_165:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t160, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_165\n.BB0_383:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_167\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r3, r3\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_167:\n\tadd\t160, r2, r1\n\tst.1\tr1, r0\n\tadd\t8, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r2\n\tand\t127, r2, r1\n\tadd.ne\tr2, r0, r1\n\tsub.s!\t31, r1, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr4, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_5\n\tld.1\t64, r2\n\tst.1.inc\tr2, r1, r3\n\tsub!\tr6, r0, r6\n\tadd\tstack-[10], r0, r8\n\tjump.eq\t@.BB0_171\n\tst.1\t0, r5\n\tsub!\tr1, r0, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB0_169\n\tadd\t@CPI0_38[0], r0, r5\n\tadd\tr0, r0, r4\n.BB0_174:\n\tadd\tr3, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r6\n\tjump.lt\t@.BB0_174\n\tjump\t@.BB0_169\n.BB0_25:\n\tsub.s!\t@CPI0_28[0], r2, r4\n\tjump.eq\t@.BB0_44\n\tsub.s!\t@CPI0_29[0], r2, r4\n\tjump.eq\t@.BB0_46\n\tsub.s!\t@CPI0_30[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_58[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_31:\n\tsub.s!\t@CPI0_24[0], r2, r1\n\tjump.eq\t@.BB0_100\n\tsub.s!\t@CPI0_25[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[11]\n\tsload\tr1, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[10]\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r2\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r2\n\tsload\tr2, r1\n\tadd\t1, r1, r1\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_37:\n\tsub.s!\t@CPI0_18[0], r2, r4\n\tjump.eq\t@.BB0_119\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tstack-[11], r0, r1\n\tnear_call\tr0, @fun_getWinningColor, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r8\n\tsload\tr8, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r6\n\tadd.ne\tr4, r0, r6\n\tsub.s!\t31, r6, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tadd\tr1, r0, r7\n\tand!\t1, r4, r1\n\tjump.ne\t@.BB0_5\n\tld.1\t64, r5\n\tst.1.inc\tr5, r6, r9\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB0_135\n\tadd\tr6, r0, stack-[7]\n\tadd\tr5, r0, stack-[8]\n\tadd\tr9, r0, stack-[9]\n\tadd\tr7, r0, stack-[11]\n\tst.1\t0, r8\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r6\n\tsub!\tr6, r0, r2\n\tadd\tr0, r0, r2\n\tadd\tstack-[11], r0, r7\n\tadd\tstack-[9], r0, r9\n\tadd\tstack-[8], r0, r5\n\tjump.eq\t@.BB0_133\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_139:\n\tadd\tr9, r2, r3\n\tsload\tr1, r4\n\tst.1\tr3, r4\n\tadd\t1, r1, r1\n\tadd\t32, r2, r2\n\tsub!\tr2, r6, r3\n\tjump.lt\t@.BB0_139\n\tjump\t@.BB0_133\n.BB0_42:\n\tsub.s!\t@CPI0_13[0], r2, r4\n\tjump.eq\t@.BB0_272\n\tsub.s!\t@CPI0_14[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_3[0], r1, r6\n\tsub.s!\t@CPI0_3[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_102\n\tsub!\tr6, r0, r2\n\tjump.ne\t@.BB0_381\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t38, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_32[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_33[0], r0, r1\n\tst.1\t228, r1\n\tadd\t@CPI0_34[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_53:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t448, r0, r4\n\tadd\t96, r0, r2\n\tadd\tr0, r0, r3\n.BB0_61:\n\tadd\t320, r4, r5\n\tst.1\t64, r5\n\tadd\tr0, r0, r5\n.BB0_62:\n\tadd\tr5, r4, r6\n\tst.1\tr6, r2\n\tsub.s!\t288, r5, r6\n\tadd\t32, r5, r5\n\tjump.lt\t@.BB0_62\n\tadd\t128, r3, r5\n\tst.1\tr5, r4\n\tsub.s!\t287, r3, r4\n\tjump.gt\t@.BB0_56\n\tadd\t32, r3, r3\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_61[0], r4, r5\n\tjump.le\t@.BB0_61\n\tjump\t@.BB0_58\n.BB0_100:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r2\n\tcontext.caller\tr5\n\tsub!\tr2, r5, r2\n\tjump.ne\t@.BB0_102\n\tand\t@CPI0_1[0], r1, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_4[0], r0, r4\n\tadd\tr0, r0, r6\n.BB0_271:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_46:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI0_3[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_125\n.BB0_107:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_58[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_153:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tnear_call\tr0, @fun_getWinningColor, @DEFAULT_UNWIND\n\tjump\t@.BB0_126\n.BB0_119:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t100, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[10]\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r2\n\tsub.s!\t9, r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[10], r0, r2\n\tsub.s!\t9, r2, r2\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[11], r0, r2\n\tmul\t10, r2, r2, r3\n\tadd\tstack-[10], r2, r2\n\tld\tr1, r1\n\tadd\tr2, r1, r1\n.BB0_125:\n\tnear_call\tr0, @copy_array_from_storage_to_memory_string, @DEFAULT_UNWIND\n.BB0_126:\n\tadd\t32, r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[11]\n\tst.1.inc\tr3, r2, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[11], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_272:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r4\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[10]\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI0_35[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tsub.s\tstack-[11], r3, r5\n\tadd\t@CPI0_36[0], r0, r2\n\tsub.s!\t100, r5, r4\n\tadd\tr0, r0, r4\n\tadd.lt\tr2, r0, r4\n\tand\t@CPI0_36[0], r5, r6\n\tsub!\tr6, r0, r7\n\tadd\tr0, r0, r7\n\tadd.gt\tr2, r0, r7\n\tsub.s!\t@CPI0_36[0], r6, r6\n\tadd.ne\tr4, r0, r7\n\tsub!\tr7, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[11], r0, r4\n\tadd\t68, r4, stack-[9]\n\tptr.add.s\tstack-[9], r1, r4\n\tld\tr4, r4\n\tsub.s\t35, r5, r5\n\tsub!\tr4, r5, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr2, r0, r6\n\tand\t@CPI0_36[0], r5, r5\n\tand\t@CPI0_36[0], r4, r7\n\tsub!\tr7, r5, r8\n\tadd.ge\tr0, r0, r2\n\txor\tr7, r5, r5\n\tsub.s!\t@CPI0_36[0], r5, r5\n\tadd.ne\tr6, r0, r2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[11], r0, r2\n\tadd\t4, r2, stack-[8]\n\tadd\tstack-[8], r4, r4\n\tptr.add\tr1, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_35[0], r2, r5\n\tjump.gt\t@.BB0_2\n\tsub\tr3, r2, r5\n\tadd\t32, r4, r4\n\tadd\t@CPI0_36[0], r0, r6\n\tsub!\tr4, r5, r7\n\tadd\tr0, r0, r7\n\tadd.gt\tr6, r0, r7\n\tand\t@CPI0_36[0], r5, r5\n\tand\t@CPI0_36[0], r4, r8\n\tsub!\tr8, r5, r9\n\tadd.ge\tr0, r0, r6\n\txor\tr8, r5, r5\n\tsub.s!\t@CPI0_36[0], r5, r5\n\tadd.ne\tr7, r0, r6\n\tsub!\tr6, r0, r5\n\tjump.ne\t@.BB0_2\n\tadd\t31, r2, r5\n\tsub.s\t32, r0, r7\n\tand\tr5, r7, r5\n\tadd\t63, r5, r5\n\tand\tr5, r7, r5\n\tsub.s!\t@CPI0_37[0], r5, r6\n\tjump.gt\t@.BB0_58\n\tadd\tr7, r0, stack-[7]\n\tadd\t128, r5, r5\n\tst.1\t64, r5\n\tst.1\t128, r2\n\tadd\tr2, r4, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB0_2\n\tptr.add\tr1, r4, r1\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r4\n\tjump.eq\t@.BB0_388\n\tadd\tr0, r0, r5\n.BB0_283:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t160, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_283\n.BB0_388:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_285\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r3, r3\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_285:\n\tadd\t160, r2, r1\n\tst.1\tr1, r0\n\tadd\t8, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r2\n\tand\t127, r2, r1\n\tadd.ne\tr2, r0, r1\n\tsub.s!\t31, r1, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr4, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_5\n\tld.1\t64, r2\n\tst.1.inc\tr2, r1, r3\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB0_289\n\tst.1\t0, r5\n\tsub!\tr1, r0, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB0_287\n\tadd\t@CPI0_38[0], r0, r5\n\tadd\tr0, r0, r4\n.BB0_292:\n\tadd\tr3, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r6\n\tjump.lt\t@.BB0_292\n\tjump\t@.BB0_287\n.BB0_44:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_uint256t_string, @DEFAULT_UNWIND\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[10]\n\tadd\tstack-[11], r0, r1\n\tld.1.inc\tr1, r3, r1\n\tadd\tr3, r0, stack-[9]\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[11]\n\tnear_call\tr0, @copy_memory_to_memory_with_cleanup, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r2\n\tadd\tstack-[11], r0, r1\n\tadd\tr2, r1, r4\n\tadd\tstack-[10], r0, r3\n\tst.1\tr4, r3\n\tadd\t32, r2, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsload\tr1, r1\n.BB0_117:\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n.BB0_118:\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_57[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_16:\n\tsub.s!\t31, r3, r1\n\tjump.le\t@.BB0_20\n\tadd\tr3, r0, stack-[10]\n\tadd\tr4, r0, stack-[11]\n\tst.1\t0, r4\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[10], r0, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr1, r2, r3\n\tadd\tstack-[11], r0, r4\n\tjump.ge\t@.BB0_20\n.BB0_21:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr1, r2, r3\n\tjump.lt\t@.BB0_21\n.BB0_20:\n\tadd\t@CPI0_8[0], r0, r1\n\tsstore\tr4, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_9[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_102:\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_59[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_60[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_56:\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\t@CPI0_62[0], r2, r2\n\tjump.lt\t@.BB0_59\n.BB0_58:\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_55[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_59:\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\tstack-[3], r0, r1\n\tadd\t320, r1, r3\n\tst.1\t64, r3\n\tadd\tr0, r0, stack-[2]\n\tadd\tr1, r0, stack-[1]\n.BB0_65:\n\tadd\tr3, r0, stack-[4]\n\tsub.s!\t@CPI0_61[0], r3, r1\n\tjump.gt\t@.BB0_58\n\tadd\tstack-[4], r0, r2\n\tadd\t320, r2, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r5\n\tadd\tstack-[5], r0, r6\n\tadd\tr2, r0, r7\n.BB0_67:\n\tsload\tr6, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_5\n\tld.1\t64, r8\n\tst.1.inc\tr8, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_71\n\tadd\tr3, r0, stack-[6]\n\tadd\tr4, r0, stack-[7]\n\tadd\tr8, r0, stack-[8]\n\tadd\tr7, r0, stack-[9]\n\tadd\tr5, r0, stack-[11]\n\tadd\tr6, r0, stack-[10]\n\tst.1\t0, r6\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r9\n\tsub!\tr9, r0, r2\n\tadd\tstack-[11], r0, r5\n\tadd\tstack-[9], r0, r7\n\tjump.eq\t@.BB0_74\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[10], r0, r6\n\tadd\tstack-[8], r0, r8\n\tadd\tstack-[6], r0, r10\n.BB0_76:\n\tadd\tr10, r1, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_76\n\tjump\t@.BB0_69\n.BB0_71:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_69\n.BB0_74:\n\tadd\tr0, r0, r1\n\tadd\tstack-[10], r0, r6\n\tadd\tstack-[8], r0, r8\n.BB0_69:\n\tadd\t63, r1, r2\n\tsub.s\t32, r0, r1\n\tand\tr2, r1, r3\n\tadd\tr3, r8, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_35[0], r2, r4\n\tjump.gt\t@.BB0_58\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_58\n\tst.1\t64, r2\n\tst.1.inc\tr7, r8, r7\n\tsub.s!\t9, r5, r2\n\tadd\t1, r5, r5\n\tadd\t1, r6, r6\n\tjump.lt\t@.BB0_67\n\tadd\tstack-[4], r0, r2\n\tadd\tstack-[1], r0, r3\n\tst.1.inc\tr3, r2, r3\n\tadd\tr3, r0, stack-[1]\n\tadd\tstack-[2], r0, r3\n\tsub.s!\t8, r3, r2\n\tadd\t1, r3, stack-[2]\n\tadd\tstack-[5], r0, r2\n\tadd\t10, r2, stack-[5]\n\tld.1\t64, r3\n\tjump.le\t@.BB0_65\n\tadd\t32, r0, r2\n\tst.1\tr3, r2\n\tadd\t352, r3, r4\n\tadd\tr0, r0, r2\n\tadd\tr3, r0, r14\n\tjump\t@.BB0_81\n.BB0_86:\n\tsub.s!\t8, r2, r4\n\tadd\t1, r2, r2\n\tadd\tr8, r0, r4\n\tjump.gt\t@.BB0_79\n.BB0_81:\n\tsub\tr4, r14, r5\n\tsub.s\t32, r5, r5\n\tadd\t32, r3, r3\n\tst.1\tr3, r5\n\tadd\t320, r4, r8\n\tadd\tstack-[3], r0, r6\n\tld.1.inc\tr6, r5, r6\n\tadd\tr6, r0, stack-[3]\n\tadd\tr0, r0, r6\n\tadd\tr4, r0, r7\n\tjump\t@.BB0_82\n.BB0_85:\n\tadd\t31, r9, r10\n\tand\tr10, r1, r10\n\tadd\tr9, r8, r9\n\tst.1\tr9, r0\n\tadd\tr10, r8, r8\n\tsub.s!\t9, r6, r9\n\tadd\t1, r6, r6\n\tjump.ge\t@.BB0_86\n.BB0_82:\n\tsub\tr8, r4, r9\n\tst.1.inc\tr7, r9, r7\n\tld.1.inc\tr5, r9, r5\n\tld.1.inc\tr9, r9, r10\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr9, r0, r11\n\tjump.eq\t@.BB0_85\n\tadd\tr0, r0, r11\n.BB0_84:\n\tadd\tr11, r8, r12\n\tadd\tr10, r11, r13\n\tld.1\tr13, r13\n\tst.1\tr12, r13\n\tadd\t32, r11, r11\n\tsub!\tr11, r9, r12\n\tjump.lt\t@.BB0_84\n\tjump\t@.BB0_85\n.BB0_381:\n\tand\t@CPI0_1[0], r1, r1\n\tor\tr1, r6, r1\n\tsstore\tr0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_4[0], r0, r4\n\tjump\t@.BB0_271\n.BB0_135:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\tr9, r1\n\tsub!\tr6, r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n.BB0_133:\n\tadd\t63, r2, r1\n\tsub.s\t32, r0, r8\n\tand\tr1, r8, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_35[0], r1, r3\n\tjump.gt\t@.BB0_58\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_58\n\tst.1\t64, r1\n\tadd\t32, r1, r2\n\tld.1\tr5, r3\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_143\n\tadd\tr0, r0, r4\n.BB0_142:\n\tadd\tr4, r2, r5\n\tadd\tr9, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_142\n.BB0_143:\n\tadd\tr3, r2, r4\n\tst.1\tr4, r0\n\tst.1\tr1, r3\n\tadd\t63, r3, r3\n\tand\tr3, r8, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_35[0], r3, r5\n\tjump.gt\t@.BB0_58\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_58\n\tadd\tr8, r0, stack-[10]\n\tadd\tr7, r0, stack-[11]\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tstack-[11], r0, r5\n\tld.1\tr5, r1\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_149\n\tadd\t32, r5, r4\n\tadd\tr0, r0, r5\n.BB0_148:\n\tadd\tr5, r3, r6\n\tadd\tr4, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB0_148\n.BB0_149:\n\tadd\tr1, r3, r4\n\tst.1\tr4, r0\n\tst.1\tr2, r1\n\tadd\t63, r1, r1\n\tand\tstack-[10], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_35[0], r1, r5\n\tjump.gt\t@.BB0_58\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_58\n\tst.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsub!\tstack-[9], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tsub.s!\t@CPI0_0[0], r2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tjump\t@.BB0_118\n.BB0_171:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr3, r4\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n.BB0_169:\n\tadd\t63, r4, r1\n\tand\tr1, r8, r3\n\tadd\tr3, r2, r1\n\tsub!\tr1, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_35[0], r1, r4\n\tjump.gt\t@.BB0_58\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_58\n\tst.1\t64, r1\n\tadd\t128, r0, r1\n\tnear_call\tr0, @fun_stringCompare, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_196\n\tadd\t9, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r2\n\tand\t127, r2, r1\n\tadd.ne\tr2, r0, r1\n\tsub.s!\t31, r1, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr4, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_5\n\tld.1\t64, r2\n\tst.1.inc\tr2, r1, r3\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB0_180\n\tst.1\t0, r5\n\tsub!\tr1, r0, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB0_178\n\tadd\t@CPI0_39[0], r0, r5\n\tadd\tr0, r0, r4\n.BB0_183:\n\tadd\tr3, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r6\n\tjump.lt\t@.BB0_183\n\tjump\t@.BB0_178\n.BB0_289:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr3, r4\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n.BB0_287:\n\tadd\t63, r4, r1\n\tand\tstack-[7], r1, r3\n\tadd\tr3, r2, r1\n\tsub!\tr1, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_35[0], r1, r4\n\tjump.gt\t@.BB0_58\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_58\n\tst.1\t64, r1\n\tadd\t128, r0, r1\n\tnear_call\tr0, @fun_stringCompare, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_332\n\tadd\tstack[@calldatasize], r0, r4\n\tsub.s\tstack-[11], r4, r1\n\tsub.s\t35, r1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\tstack-[9], r3, r1\n\tld\tr1, r1\n\tadd\t@CPI0_36[0], r0, r5\n\tsub!\tr1, r2, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_36[0], r2, r2\n\tand\t@CPI0_36[0], r1, r7\n\tsub!\tr7, r2, r8\n\tadd.ge\tr0, r0, r5\n\txor\tr7, r2, r2\n\tsub.s!\t@CPI0_36[0], r2, r2\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[8], r1, r1\n\tptr.add\tr3, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_35[0], r2, r5\n\tjump.gt\t@.BB0_2\n\tsub\tr4, r2, r5\n\tadd\t32, r1, r6\n\tadd\t@CPI0_36[0], r0, r1\n\tsub!\tr6, r5, r7\n\tadd\tr0, r0, r7\n\tadd.gt\tr1, r0, r7\n\tand\t@CPI0_36[0], r5, r5\n\tand\t@CPI0_36[0], r6, r8\n\tsub!\tr8, r5, r9\n\tadd.ge\tr0, r0, r1\n\txor\tr8, r5, r5\n\tsub.s!\t@CPI0_36[0], r5, r5\n\tadd.ne\tr7, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t31, r2, r1\n\tand\tstack-[7], r1, r1\n\tadd\t63, r1, r1\n\tand\tstack-[7], r1, r5\n\tld.1\t64, r1\n\tadd\tr1, r5, r5\n\tsub!\tr5, r1, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_35[0], r5, r8\n\tjump.gt\t@.BB0_58\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_58\n\tst.1\t64, r5\n\tst.1.inc\tr1, r2, r5\n\tadd\tr2, r6, r7\n\tsub!\tr7, r4, r4\n\tjump.gt\t@.BB0_2\n\tptr.add\tr3, r6, r4\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r6\n\tjump.eq\t@.BB0_385\n\tadd\tr0, r0, r7\n.BB0_302:\n\tshl.s\t5, r7, r8\n\tadd\tr5, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_302\n.BB0_385:\n\tsub!\tr3, r0, r7\n\tjump.eq\t@.BB0_304\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr5, r6, r6\n\tshl.s\t3, r3, r3\n\tld.1\tr6, r7\n\tshl\tr7, r3, r7\n\tshr\tr7, r3, r7\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r7, r3\n\tst.1\tr6, r3\n.BB0_304:\n\tadd\tr5, r2, r2\n\tst.1\tr2, r0\n\tadd\t9, r0, r6\n\tsload\tr6, r5\n\tand!\t1, r5, r7\n\tshr.s\t1, r5, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr5, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_5\n\tld.1\t64, r2\n\tst.1.inc\tr2, r3, r4\n\tsub!\tr7, r0, r7\n\tjump.eq\t@.BB0_308\n\tst.1\t0, r6\n\tsub!\tr3, r0, r5\n\tadd\tr0, r0, r5\n\tjump.eq\t@.BB0_306\n\tadd\t@CPI0_39[0], r0, r6\n\tadd\tr0, r0, r5\n.BB0_311:\n\tadd\tr4, r5, r7\n\tsload\tr6, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r7\n\tjump.lt\t@.BB0_311\n\tjump\t@.BB0_306\n.BB0_79:\n\tsub\tr8, r14, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r14, r3\n\tadd.ge\tr2, r0, r14\n\tshl.s\t64, r14, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_180:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr3, r4\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n.BB0_178:\n\tadd\t63, r4, r1\n\tand\tstack-[10], r1, r3\n\tadd\tr3, r2, r1\n\tsub!\tr1, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_35[0], r1, r4\n\tjump.gt\t@.BB0_58\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_58\n\tst.1\t64, r1\n\tadd\t128, r0, r1\n\tnear_call\tr0, @fun_stringCompare, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_196\n\tadd\t10, r0, r5\n\tsload\tr5, r4\n\tand!\t1, r4, r6\n\tshr.s\t1, r4, r2\n\tand\t127, r2, r1\n\tadd.ne\tr2, r0, r1\n\tsub.s!\t31, r1, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr4, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_5\n\tld.1\t64, r2\n\tst.1.inc\tr2, r1, r3\n\tsub!\tr6, r0, r6\n\tjump.eq\t@.BB0_189\n\tst.1\t0, r5\n\tsub!\tr1, r0, r4\n\tadd\tr0, r0, r4\n\tjump.eq\t@.BB0_187\n\tadd\t@CPI0_40[0], r0, r5\n\tadd\tr0, r0, r4\n.BB0_192:\n\tadd\tr3, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r6\n\tjump.lt\t@.BB0_192\n\tjump\t@.BB0_187\n.BB0_189:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr3, r4\n\tsub!\tr1, r0, r1\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n.BB0_187:\n\tadd\t63, r4, r1\n\tand\tstack-[10], r1, r3\n\tadd\tr3, r2, r1\n\tsub!\tr1, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_35[0], r1, r4\n\tjump.gt\t@.BB0_58\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_58\n\tst.1\t64, r1\n\tadd\t128, r0, r1\n\tnear_call\tr0, @fun_stringCompare, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_196\n.BB0_194:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_56[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t25, r0, r3\n\tjump\t@.BB0_195\n.BB0_196:\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t7, r0, r2\n\tsload\tr2, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr2, r1, stack-[9]\n\tsub!\tstack-[9], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t1, r1, r1\n\tjump.ne\t@.BB0_199\n.BB0_198:\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_55[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_199:\n\tadd\t@CPI0_42[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_43[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_200\n\tld\tr1, r1\n\tsub!\tstack-[9], r1, r1\n\tjump.le\t@.BB0_202\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[8]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r5\n\tadd.ne\tr4, r0, r5\n\tadd\tr5, r0, stack-[7]\n\tsub.s!\t31, r5, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\txor\tr2, r4, r4\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_5\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[6]\n\tadd\tstack-[7], r0, r5\n\tst.1.inc\tr4, r5, r4\n\tadd\tr4, r0, stack-[5]\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_209\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tr0, r0, r2\n\tadd\tstack-[5], r0, r6\n\tjump.eq\t@.BB0_207\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_213:\n\tadd\tr6, r2, r3\n\tsload\tr1, r4\n\tst.1\tr3, r4\n\tadd\t1, r1, r1\n\tadd\t32, r2, r2\n\tsub!\tr2, r5, r3\n\tjump.lt\t@.BB0_213\n\tjump\t@.BB0_207\n.BB0_209:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\tr2, r1\n\tsub!\tstack-[7], r0, r1\n\tadd\t32, r0, r2\n\tadd.eq\t0, r0, r2\n.BB0_207:\n\tadd\t63, r2, r1\n\tand\tstack-[10], r1, r1\n\tadd\tstack-[6], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_35[0], r2, r3\n\tjump.gt\t@.BB0_58\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_58\n\tst.1\t64, r2\n\tsub.s!\t@CPI0_52[0], r2, r1\n\tjump.gt\t@.BB0_58\n\tadd\t32, r2, r1\n\tst.1\t64, r1\n\tst.1\tr2, r0\n\tadd\tstack-[6], r0, r1\n\tnear_call\tr0, @fun_stringCompare, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_216\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand\t255, r1, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t10, r1, r1\n\tjump.ge\t@.BB0_221\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tshr.s\t8, r1, r1\n\tand\t255, r1, r1\n\tsub.s!\t9, r1, r2\n\tjump.gt\t@.BB0_221\n\tld.1\t128, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\t@CPI0_35[0], r2, r2\n\tjump.gt\t@.BB0_58\n\tadd\tstack-[5], r0, r2\n\tmul\t10, r2, r2, r3\n\tadd\tstack-[7], r2, r2\n\tadd\tr2, r1, r1\n\tadd\tr1, r0, stack-[7]\n\tsload\tr1, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tadd\tr3, r0, stack-[5]\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr1, r2, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_5\n\tadd\tstack-[5], r0, r1\n\tsub.s!\t32, r1, r1\n\tjump.lt\t@.BB0_232\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[4], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r3\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r3\n\tadd\tstack-[5], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr3, r1, r1\n\tadd\tr3, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.ge\t@.BB0_232\n.BB0_231:\n\tsstore\tr2, r0\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_231\n.BB0_232:\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t31, r1, r1\n\tjump.le\t@.BB0_247\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[4], r0, r3\n\tand!\tstack-[10], r3, r3\n\tld\tr1, r1\n\tjump.ne\t@.BB0_242\n\tadd\t32, r0, r2\n\tjump\t@.BB0_244\n.BB0_308:\n\tsub.s\t256, r0, r6\n\tand\tr5, r6, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r0, r3\n\tadd\t32, r0, r5\n\tadd.eq\t0, r0, r5\n.BB0_306:\n\tadd\t63, r5, r3\n\tand\tstack-[7], r3, r4\n\tadd\tr4, r2, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_35[0], r3, r5\n\tjump.gt\t@.BB0_58\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_58\n\tst.1\t64, r3\n\tnear_call\tr0, @fun_stringCompare, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_332\n\tadd\tstack[@calldatasize], r0, r4\n\tsub.s\tstack-[11], r4, r1\n\tsub.s\t35, r1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\tstack-[9], r3, r1\n\tld\tr1, r1\n\tadd\t@CPI0_36[0], r0, r5\n\tsub!\tr1, r2, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_36[0], r2, r2\n\tand\t@CPI0_36[0], r1, r7\n\tsub!\tr7, r2, r8\n\tadd.ge\tr0, r0, r5\n\txor\tr7, r2, r2\n\tsub.s!\t@CPI0_36[0], r2, r2\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[8], r1, r1\n\tptr.add\tr3, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_35[0], r2, r5\n\tjump.gt\t@.BB0_2\n\tsub\tr4, r2, r5\n\tadd\t32, r1, r6\n\tadd\t@CPI0_36[0], r0, r1\n\tsub!\tr6, r5, r7\n\tadd\tr0, r0, r7\n\tadd.gt\tr1, r0, r7\n\tand\t@CPI0_36[0], r5, r5\n\tand\t@CPI0_36[0], r6, r8\n\tsub!\tr8, r5, r9\n\tadd.ge\tr0, r0, r1\n\txor\tr8, r5, r5\n\tsub.s!\t@CPI0_36[0], r5, r5\n\tadd.ne\tr7, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t31, r2, r1\n\tand\tstack-[7], r1, r1\n\tadd\t63, r1, r1\n\tand\tstack-[7], r1, r5\n\tld.1\t64, r1\n\tadd\tr1, r5, r5\n\tsub!\tr5, r1, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_35[0], r5, r8\n\tjump.gt\t@.BB0_58\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_58\n\tst.1\t64, r5\n\tst.1.inc\tr1, r2, r5\n\tadd\tr2, r6, r7\n\tsub!\tr7, r4, r4\n\tjump.gt\t@.BB0_2\n\tptr.add\tr3, r6, r4\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r6\n\tjump.eq\t@.BB0_384\n\tadd\tr0, r0, r7\n.BB0_321:\n\tshl.s\t5, r7, r8\n\tadd\tr5, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_321\n.BB0_384:\n\tsub!\tr3, r0, r7\n\tjump.eq\t@.BB0_323\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr5, r6, r6\n\tshl.s\t3, r3, r3\n\tld.1\tr6, r7\n\tshl\tr7, r3, r7\n\tshr\tr7, r3, r7\n\tld\tr4, r4\n\tsub\t256, r3, r3\n\tshr\tr4, r3, r4\n\tshl\tr4, r3, r3\n\tor\tr3, r7, r3\n\tst.1\tr6, r3\n.BB0_323:\n\tadd\tr5, r2, r2\n\tst.1\tr2, r0\n\tadd\t10, r0, r6\n\tsload\tr6, r5\n\tand!\t1, r5, r7\n\tshr.s\t1, r5, r2\n\tand\t127, r2, r3\n\tadd.ne\tr2, r0, r3\n\tsub.s!\t31, r3, r2\n\tadd\t0, r0, r2\n\tadd.gt\t1, r0, r2\n\txor\tr5, r2, r2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_5\n\tld.1\t64, r2\n\tst.1.inc\tr2, r3, r4\n\tsub!\tr7, r0, r7\n\tjump.eq\t@.BB0_327\n\tst.1\t0, r6\n\tsub!\tr3, r0, r5\n\tadd\tr0, r0, r5\n\tjump.eq\t@.BB0_325\n\tadd\t@CPI0_40[0], r0, r6\n\tadd\tr0, r0, r5\n.BB0_330:\n\tadd\tr4, r5, r7\n\tsload\tr6, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r7\n\tjump.lt\t@.BB0_330\n\tjump\t@.BB0_325\n.BB0_216:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_53[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t21, r0, r3\n\tjump\t@.BB0_195\n.BB0_327:\n\tsub.s\t256, r0, r6\n\tand\tr5, r6, r5\n\tst.1\tr4, r5\n\tsub!\tr3, r0, r3\n\tadd\t32, r0, r5\n\tadd.eq\t0, r0, r5\n.BB0_325:\n\tadd\t63, r5, r3\n\tand\tstack-[7], r3, r4\n\tadd\tr4, r2, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_35[0], r3, r5\n\tjump.gt\t@.BB0_58\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_58\n\tst.1\t64, r3\n\tnear_call\tr0, @fun_stringCompare, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_194\n.BB0_332:\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\t7, r0, r2\n\tsload\tr2, r2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr2, r1, stack-[6]\n\tsub!\tstack-[6], r2, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_198\n\tadd\t@CPI0_42[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_43[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_200\n\tld\tr1, r1\n\tsub!\tstack-[6], r1, r1\n\tjump.le\t@.BB0_202\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\tstack-[11], r1, r2\n\tsub.s\t35, r2, r4\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\tstack-[9], r2, r3\n\tld\tr3, r3\n\tadd\t@CPI0_36[0], r0, r5\n\tsub!\tr3, r4, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_36[0], r4, r4\n\tand\t@CPI0_36[0], r3, r7\n\tsub!\tr7, r4, r8\n\tadd.ge\tr0, r0, r5\n\txor\tr7, r4, r4\n\tsub.s!\t@CPI0_36[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[8], r3, r3\n\tptr.add\tr2, r3, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\t@CPI0_35[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tsub.s\tstack-[6], r1, r1\n\tadd\t32, r3, r4\n\tadd\t@CPI0_36[0], r0, r2\n\tsub!\tr4, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI0_36[0], r1, r1\n\tadd\tr4, r0, stack-[5]\n\tand\t@CPI0_36[0], r4, r4\n\tsub!\tr4, r1, r5\n\tadd.ge\tr0, r0, r2\n\txor\tr4, r1, r1\n\tsub.s!\t@CPI0_36[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t2, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r2\n\tsub.s\t64, r2, stack-[4]\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\tstack-[4], r3, r2\n\tld\tr1, r1\n\tld\tr2, r2\n\tsub.s!\t255, r2, r4\n\tjump.gt\t@.BB0_2\n\tsub.s!\t9, r2, r4\n\tjump.le\t@.BB0_342\n.BB0_221:\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_55[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_200:\n\trevert\n.BB0_202:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_50[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t29, r0, r3\n.BB0_195:\n\tst.1\tr2, r3\n\tadd\t@CPI0_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_51[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_342:\n\tadd\tstack-[4], r0, r4\n\tadd\t32, r4, stack-[3]\n\tptr.add.s\tstack-[3], r3, r3\n\tld\tr3, r3\n\tsub.s!\t255, r3, r4\n\tjump.le\t@.BB0_343\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_343:\n\tsub.s!\t9, r3, r4\n\tjump.gt\t@.BB0_221\n\tmul\t10, r2, r2, r4\n\tadd\tr2, r1, r1\n\tadd\tr1, r3, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[6], r0, r3\n\tnear_call\tr0, @copy_byte_array_to_storage_from_string_calldata_to_string, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t255, r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t3, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\tstack-[6], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[3], r0, r1\n\tptr.add\tstack[@ptr_calldata], r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tsub.s!\t255, r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_44[0], r2, r2\n\tadd\tstack-[6], r0, r3\n\tshl.s\t8, r3, r3\n\tand\t65280, r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s\tstack-[11], r1, r2\n\tsub.s\t35, r2, r4\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\tstack-[9], r2, r3\n\tld\tr3, r3\n\tadd\t@CPI0_36[0], r0, r5\n\tsub!\tr3, r4, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_36[0], r4, r4\n\tand\t@CPI0_36[0], r3, r7\n\tsub!\tr7, r4, r8\n\tadd.ge\tr0, r0, r5\n\txor\tr7, r4, r4\n\tsub.s!\t@CPI0_36[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[8], r3, r3\n\tptr.add\tr2, r3, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\t@CPI0_35[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tsub.s\tstack-[6], r1, r1\n\tadd\t32, r3, r4\n\tadd\t@CPI0_36[0], r0, r2\n\tsub!\tr4, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI0_36[0], r1, r1\n\tadd\tr4, r0, stack-[5]\n\tand\t@CPI0_36[0], r4, r4\n\tsub!\tr4, r1, r5\n\tadd.ge\tr0, r0, r2\n\txor\tr4, r1, r1\n\tsub.s!\t@CPI0_36[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tadd\tstack-[6], r0, r3\n\tnear_call\tr0, @copy_byte_array_to_storage_from_string_calldata_to_string, @DEFAULT_UNWIND\n\tadd\tstack-[10], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack[@calldatasize], r0, r4\n\tsub.s\tstack-[11], r4, r2\n\tsub.s\t35, r2, r2\n\tptr.add\tstack[@ptr_calldata], r0, r3\n\tptr.add.s\tstack-[9], r3, r5\n\tld\tr5, r5\n\tadd\t@CPI0_36[0], r0, r6\n\tsub!\tr5, r2, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_36[0], r2, r2\n\tand\t@CPI0_36[0], r5, r8\n\tsub!\tr8, r2, r9\n\tadd.ge\tr0, r0, r6\n\txor\tr8, r2, r2\n\tsub.s!\t@CPI0_36[0], r2, r2\n\tadd.ne\tr7, r0, r6\n\tld\tr1, r2\n\tsub!\tr6, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[8], r5, r5\n\tptr.add\tr3, r5, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_35[0], r1, r6\n\tjump.gt\t@.BB0_2\n\tsub\tr4, r1, r6\n\tadd\t32, r5, r4\n\tadd\t@CPI0_36[0], r0, r5\n\tsub!\tr4, r6, r7\n\tadd\tr0, r0, r7\n\tadd.gt\tr5, r0, r7\n\tand\t@CPI0_36[0], r6, r6\n\tand\t@CPI0_36[0], r4, r8\n\tsub!\tr8, r6, r9\n\tadd.ge\tr0, r0, r5\n\txor\tr8, r6, r6\n\tsub.s!\t@CPI0_36[0], r6, r6\n\tadd.ne\tr7, r0, r5\n\tsub!\tr5, r0, r5\n\tjump.ne\t@.BB0_2\n\tptr.add\tr3, r4, r4\n\tld.1\t64, r3\n\tand\t31, r1, r5\n\tshr.s!\t5, r1, r6\n\tjump.eq\t@.BB0_387\n\tadd\tr0, r0, r7\n.BB0_361:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_361\n.BB0_387:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_363\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r7\n\tshl\tr7, r5, r7\n\tshr\tr7, r5, r7\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB0_363:\n\tadd\tr3, r1, r4\n\tst.1\tr4, r2\n\tadd\t@CPI0_45[0], r0, r2\n\tsub.s!\t@CPI0_45[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB0_198\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\tstack-[4], r2, r1\n\tld\tr1, r4\n\tsub.s!\t255, r4, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\tstack-[3], r2, r1\n\tld\tr1, r5\n\tsub.s!\t255, r5, r1\n\tjump.gt\t@.BB0_2\n\tptr.add.s\tstack-[9], r2, r1\n\tadd\tstack[@calldatasize], r0, r3\n\tsub.s\tstack-[11], r3, r6\n\tsub.s\t35, r6, r6\n\tld\tr1, r1\n\tadd\t@CPI0_36[0], r0, r7\n\tsub!\tr1, r6, r8\n\tadd\tr0, r0, r8\n\tadd.ge\tr7, r0, r8\n\tand\t@CPI0_36[0], r6, r6\n\tand\t@CPI0_36[0], r1, r9\n\tsub!\tr9, r6, r10\n\tadd.ge\tr0, r0, r7\n\txor\tr9, r6, r6\n\tsub.s!\t@CPI0_36[0], r6, r6\n\tadd.ne\tr8, r0, r7\n\tsub!\tr7, r0, r6\n\tjump.ne\t@.BB0_2\n\tadd\tstack-[8], r1, r6\n\tptr.add\tr2, r6, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_35[0], r1, r7\n\tjump.gt\t@.BB0_2\n\tsub\tr3, r1, r3\n\tadd\t32, r6, r6\n\tadd\t@CPI0_36[0], r0, r7\n\tsub!\tr6, r3, r8\n\tadd\tr0, r0, r8\n\tadd.gt\tr7, r0, r8\n\tand\t@CPI0_36[0], r3, r3\n\tand\t@CPI0_36[0], r6, r9\n\tsub!\tr9, r3, r10\n\tadd.ge\tr0, r0, r7\n\txor\tr9, r3, r3\n\tsub.s!\t@CPI0_36[0], r3, r3\n\tadd.ne\tr8, r0, r7\n\tsub!\tr7, r0, r3\n\tjump.ne\t@.BB0_2\n\tld.1\t64, r3\n\tadd\t128, r3, r7\n\tadd\t160, r0, r8\n\tst.1\tr7, r8\n\tadd\t96, r3, r7\n\tst.1\tr7, r5\n\tadd\t64, r3, r5\n\tst.1\tr5, r4\n\tadd\t32, r3, r4\n\tadd\tstack-[2], r0, r5\n\tst.1\tr4, r5\n\tadd\tstack-[10], r0, r4\n\tst.1\tr3, r4\n\tadd\t160, r3, r4\n\tst.1\tr4, r1\n\tptr.add\tr2, r6, r5\n\tand\t31, r1, r4\n\tadd\t192, r3, r2\n\tshr.s!\t5, r1, r6\n\tjump.eq\t@.BB0_386\n\tadd\tr0, r0, r7\n.BB0_372:\n\tshl.s\t5, r7, r8\n\tadd\tr2, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_372\n.BB0_386:\n\tsub!\tr4, r0, r7\n\tjump.eq\t@.BB0_374\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr2, r6, r6\n\tshl.s\t3, r4, r4\n\tld.1\tr6, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr5, r5\n\tsub\t256, r4, r4\n\tshr\tr5, r4, r5\n\tshl\tr5, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr6, r4\n.BB0_374:\n\tadd\t31, r1, r4\n\tand\tstack-[7], r4, r4\n\tshl.s\t96, r4, r5\n\tadd\t@CPI0_46[0], r5, r5\n\tadd\t@CPI0_47[0], r0, r6\n\tsub.s!\t@CPI0_48[0], r4, r4\n\tadd.ge\tr6, r0, r5\n\tadd\tr2, r1, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r2\n\tor\tr2, r5, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tadd\tr2, r1, r1\n\tjump\t@.BB0_270\n.BB0_247:\n\tsub!\tstack-[4], r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_249\n\tld.1\t160, r1\n.BB0_249:\n\tadd\tstack-[4], r0, r4\n\tshl.s\t3, r4, r2\n\tsub.s\t1, r0, r3\n\tshr\tr3, r2, r2\n\txor\tr2, r3, r2\n\tand\tr1, r2, r1\n\tshl.s\t1, r4, r2\n\tor\tr1, r2, r1\n\tjump\t@.BB0_233\n.BB0_242:\n\tadd\t32, r0, r2\n\tadd\tr0, r0, r4\n.BB0_243:\n\tadd\t128, r2, r5\n\tld.1\tr5, r5\n\tsstore\tr1, r5\n\tadd\t32, r2, r2\n\tadd\t1, r1, r1\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_243\n.BB0_244:\n\tsub.s!\tstack-[4], r3, r3\n\tjump.ge\t@.BB0_246\n\tadd\tstack-[4], r0, r3\n\tshl.s\t3, r3, r3\n\tand\t248, r3, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tadd\t128, r2, r2\n\tld.1\tr2, r2\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n.BB0_246:\n\tadd\tstack-[4], r0, r1\n\tshl.s\t1, r1, r1\n\tor\t1, r1, r1\n.BB0_233:\n\tadd\tstack-[7], r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r2\n\tld\tr1, r3\n\tld.1\t128, r1\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_237\n\tadd\tr0, r0, r4\n.BB0_236:\n\tadd\tr4, r2, r5\n\tadd\t160, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_236\n.BB0_237:\n\tadd\tr1, r2, r4\n\tst.1\tr4, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\t32, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.eq\t@.BB0_198\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[7], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r5\n\tand!\t1, r5, r2\n\tshr.s\t1, r5, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tadd\tr4, r0, stack-[9]\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tadd\tr5, r0, stack-[4]\n\txor\tr5, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_5\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[7]\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_258\n\tsub.s\t256, r0, r1\n\tand\tstack-[4], r1, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\tr2, r1\n.BB0_255:\n\tadd\tstack-[9], r0, r3\n\tadd\tstack-[7], r0, r4\n\tadd\tr3, r4, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_45[0], r0, r1\n\tsub.s!\t@CPI0_45[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd.ge\tr1, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\tr2, r1, r1\n\tadd\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_198\n\tsub.s\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[8], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_41[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[9], r0, r2\n\tand\t255, r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tld.1\t64, r1\n\tadd\t128, r1, r4\n\tadd\t160, r0, r5\n\tst.1\tr4, r5\n\tadd\t64, r1, r4\n\tst.1\tr4, r2\n\tadd\t32, r1, r2\n\tadd\tstack-[8], r0, r4\n\tst.1\tr2, r4\n\tshr.s\t8, r3, r2\n\tand\t255, r2, r2\n\tadd\t96, r1, r3\n\tst.1\tr3, r2\n\tadd\tstack-[11], r0, r2\n\tst.1\tr1, r2\n\tadd\t160, r1, r3\n\tld.1\t128, r2\n\tst.1\tr3, r2\n\tadd\t192, r1, r3\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB0_269\n\tadd\tr0, r0, r4\n.BB0_268:\n\tadd\tr4, r3, r5\n\tadd\t160, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_268\n.BB0_269:\n\tadd\tr2, r3, r3\n\tst.1\tr3, r0\n\tadd\t31, r2, r2\n\tand\tstack-[10], r2, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\t192, r2, r2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n.BB0_270:\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_49[0], r0, r4\n\tjump\t@.BB0_271\n.BB0_258:\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[4], r0, r2\n\tsub.s!\t2, r2, r2\n\tjump.lt\t@.BB0_255\n\tld\tr1, r1\n\tadd\tr0, r0, r2\n.BB0_261:\n\tadd\tstack-[7], r2, r3\n\tsload\tr1, r4\n\tst.1\tr3, r4\n\tadd\t1, r1, r1\n\tadd\t32, r2, r2\n\tsub.s!\tstack-[9], r2, r3\n\tjump.lt\t@.BB0_261\n\tjump\t@.BB0_255\n.func_end0:\n\nabi_decode_string:\n.func_begin1:\n\tadd\tr1, r0, r3\n\tadd\t31, r3, r1\n\tadd\t@CPI1_0[0], r0, r4\n\tsub!\tr1, r2, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI1_0[0], r2, r6\n\tand\t@CPI1_0[0], r1, r1\n\tsub!\tr1, r6, r7\n\tadd.le\tr0, r0, r4\n\txor\tr1, r6, r1\n\tsub.s!\t@CPI1_0[0], r1, r1\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r1\n\tjump.eq\t@.BB1_1\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tptr.add\tr5, r3, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI1_1[0], r4, r1\n\tjump.ge\t@.BB1_3\n\tadd\t31, r4, r1\n\tsub.s\t32, r0, r6\n\tand\tr1, r6, r1\n\tadd\t63, r1, r1\n\tand\tr1, r6, r6\n\tld.1\t64, r1\n\tadd\tr1, r6, r6\n\tsub!\tr6, r1, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI1_2[0], r6, r8\n\tjump.gt\t@.BB1_3\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB1_3\n\tadd\t32, r3, r7\n\tst.1\t64, r6\n\tst.1.inc\tr1, r4, r3\n\tadd\tr4, r7, r6\n\tsub!\tr6, r2, r2\n\tjump.gt\t@.BB1_1\n\tptr.add\tr5, r7, r5\n\tand\t31, r4, r2\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB1_12\n\tadd\tr0, r0, r7\n.BB1_9:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr5, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB1_9\n.BB1_12:\n\tsub!\tr2, r0, r7\n\tjump.eq\t@.BB1_11\n\tshl.s\t5, r6, r6\n\tptr.add\tr5, r6, r5\n\tadd\tr3, r6, r6\n\tshl.s\t3, r2, r2\n\tld.1\tr6, r7\n\tshl\tr7, r2, r7\n\tshr\tr7, r2, r7\n\tld\tr5, r5\n\tsub\t256, r2, r2\n\tshr\tr5, r2, r5\n\tshl\tr5, r2, r2\n\tor\tr2, r7, r2\n\tst.1\tr6, r2\n.BB1_11:\n\tadd\tr3, r4, r2\n\tst.1\tr2, r0\n\tret\n.BB1_3:\n\tadd\t@CPI1_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nabi_decode_uint256t_string:\n.func_begin2:\n\tadd\tr1, r0, r3\n\tadd\t@CPI2_0[0], r0, r1\n\tsub.s!\t67, r3, r2\n\tadd\tr0, r0, r2\n\tadd.gt\tr1, r0, r2\n\tand\t@CPI2_0[0], r3, r4\n\tsub!\tr4, r0, r5\n\tadd.ge\tr0, r0, r1\n\tsub.s!\t@CPI2_0[0], r4, r4\n\tadd.ne\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB2_1\n\tptr.add\tstack[@ptr_calldata], r0, r5\n\tptr.add.s\t36, r5, r1\n\tld\tr1, r6\n\tsub.s!\t@CPI2_1[0], r6, r1\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t4, r5, r1\n\tld\tr1, r1\n\tadd\t35, r6, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB2_1\n\tadd\t4, r6, r7\n\tptr.add\tr5, r7, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI2_2[0], r4, r2\n\tjump.ge\t@.BB2_5\n\tadd\t31, r4, r2\n\tsub.s\t32, r0, r8\n\tand\tr2, r8, r2\n\tadd\t63, r2, r2\n\tand\tr2, r8, r8\n\tld.1\t64, r2\n\tadd\tr2, r8, r8\n\tsub!\tr8, r2, r9\n\tadd\t0, r0, r9\n\tadd.lt\t1, r0, r9\n\tsub.s!\t@CPI2_1[0], r8, r10\n\tjump.gt\t@.BB2_5\n\tand!\t1, r9, r9\n\tjump.ne\t@.BB2_5\n\tadd\t36, r6, r9\n\tst.1\t64, r8\n\tst.1.inc\tr2, r4, r6\n\tadd\tr4, r9, r8\n\tsub!\tr8, r3, r3\n\tjump.gt\t@.BB2_1\n\tadd\t32, r7, r3\n\tptr.add\tr5, r3, r5\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r7\n\tjump.eq\t@.BB2_14\n\tadd\tr0, r0, r8\n.BB2_11:\n\tshl.s\t5, r8, r9\n\tadd\tr6, r9, r10\n\tptr.add\tr5, r9, r9\n\tld\tr9, r9\n\tst.1\tr10, r9\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB2_11\n.BB2_14:\n\tsub!\tr3, r0, r8\n\tjump.eq\t@.BB2_13\n\tshl.s\t5, r7, r7\n\tptr.add\tr5, r7, r5\n\tadd\tr6, r7, r7\n\tshl.s\t3, r3, r3\n\tld.1\tr7, r8\n\tshl\tr8, r3, r8\n\tshr\tr8, r3, r8\n\tld\tr5, r5\n\tsub\t256, r3, r3\n\tshr\tr5, r3, r5\n\tshl\tr5, r3, r3\n\tor\tr3, r8, r3\n\tst.1\tr7, r3\n.BB2_13:\n\tadd\tr6, r4, r3\n\tst.1\tr3, r0\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_5:\n\tadd\t@CPI2_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\ncopy_memory_to_memory_with_cleanup:\n.func_begin3:\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB3_3\n\tadd\tr0, r0, r4\n.BB3_2:\n\tadd\tr4, r2, r5\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB3_2\n.BB3_3:\n\tadd\tr3, r2, r1\n\tst.1\tr1, r0\n\tret\n.func_end3:\n\ncopy_array_from_storage_to_memory_string:\n.func_begin4:\n\tnop\tstack+=[3]\n\tsload\tr1, r2\n\tand!\t1, r2, r3\n\tshr.s\t1, r2, r4\n\tand\t127, r4, r6\n\tadd.ne\tr4, r0, r6\n\tsub.s!\t31, r6, r4\n\tadd\t0, r0, r4\n\tadd.gt\t1, r0, r4\n\tsub!\tr3, r4, r4\n\tjump.ne\t@.BB4_1\n\tld.1\t64, r5\n\tst.1.inc\tr5, r6, r4\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB4_8\n\tadd\tr4, r0, stack-[1]\n\tadd\tr6, r0, stack-[3]\n\tadd\tr5, r0, stack-[2]\n\tst.1\t0, r1\n\tadd\t@CPI4_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_10\n\tadd\tstack-[3], r0, r6\n\tsub!\tr6, r0, r2\n\tjump.eq\t@.BB4_12\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[2], r0, r5\n\tadd\tstack-[1], r0, r7\n.BB4_14:\n\tadd\tr7, r1, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r6, r3\n\tjump.lt\t@.BB4_14\n\tjump\t@.BB4_4\n.BB4_8:\n\tsub.s\t256, r0, r1\n\tand\tr2, r1, r1\n\tst.1\tr4, r1\n\tsub!\tr6, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB4_4\n.BB4_12:\n\tadd\tr0, r0, r1\n\tadd\tstack-[2], r0, r5\n.BB4_4:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r5, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI4_2[0], r1, r3\n\tjump.gt\t@.BB4_6\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_6\n\tst.1\t64, r1\n\tadd\tr5, r0, r1\n\tret\n.BB4_1:\n\tadd\t@CPI4_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_6:\n\tadd\t@CPI4_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_10:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nabi_encode_string:\n.func_begin5:\n\tld.1.inc\tr1, r3, r4\n\tst.1.inc\tr2, r3, r1\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB5_3\n\tadd\tr0, r0, r2\n.BB5_2:\n\tadd\tr2, r1, r5\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r2, r2\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB5_2\n.BB5_3:\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end5:\n\ncopy_byte_array_to_storage_from_string_calldata_to_string:\n.func_begin6:\n\tnop\tstack+=[4]\n\tadd\tr1, r0, r6\n\tsub.s!\t@CPI6_0[0], r3, r1\n\tjump.ge\t@.BB6_1\n\tsload\tr6, r1\n\tand!\t1, r1, r4\n\tshr.s\t1, r1, r1\n\tand\t127, r1, r5\n\tadd.ne\tr1, r0, r5\n\tsub.s!\t31, r5, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr4, r1, r1\n\tjump.ne\t@.BB6_4\n\tsub.s!\t32, r5, r1\n\tadd\tr6, r0, stack-[2]\n\tadd\tr3, r0, stack-[4]\n\tadd\tr2, r0, stack-[3]\n\tjump.lt\t@.BB6_11\n\tadd\tr5, r0, stack-[1]\n\tst.1\t0, r6\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_7\n\tadd\tstack-[4], r0, r3\n\tadd\t31, r3, r2\n\tshr.s\t5, r2, r2\n\tsub.s!\t32, r3, r4\n\tadd.lt\tr0, r0, r2\n\tld\tr1, r4\n\tadd\tstack-[1], r0, r1\n\tadd\t31, r1, r1\n\tshr.s\t5, r1, r1\n\tadd\tr4, r1, r1\n\tadd\tr4, r2, r5\n\tsub!\tr5, r1, r4\n\tadd\tstack-[2], r0, r6\n\tadd\tstack-[3], r0, r2\n\tjump.ge\t@.BB6_11\n.BB6_10:\n\tsstore\tr5, r0\n\tadd\t1, r5, r5\n\tsub!\tr5, r1, r4\n\tjump.lt\t@.BB6_10\n.BB6_11:\n\tsub.s!\t31, r3, r1\n\tjump.le\t@.BB6_20\n\tst.1\t0, r6\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_7\n\tsub.s\t32, r0, r2\n\tadd\tstack-[4], r0, r7\n\tand!\tr7, r2, r2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r8\n\tjump.eq\t@.BB6_14\n\tptr.add\tstack[@ptr_calldata], r0, r4\n\tadd\tr0, r0, r3\n\tadd\tstack-[2], r0, r6\n.BB6_16:\n\tadd\tr3, r8, r5\n\tptr.add\tr4, r5, r5\n\tld\tr5, r5\n\tsstore\tr1, r5\n\tadd\t1, r1, r1\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB6_16\n\tsub!\tr2, r7, r2\n\tjump.ge\t@.BB6_19\n.BB6_18:\n\tshl.s\t3, r7, r2\n\tand\t248, r2, r2\n\tsub.s\t1, r0, r4\n\tshr\tr4, r2, r2\n\txor\tr2, r4, r2\n\tadd\tr3, r8, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tld\tr3, r3\n\tand\tr3, r2, r2\n\tsstore\tr1, r2\n.BB6_19:\n\tshl.s\t1, r7, r1\n\tor\t1, r1, r1\n\tsstore\tr6, r1\n\tret\n.BB6_20:\n\tsub!\tr3, r0, r1\n\tjump.eq\t@.BB6_21\n\tshl.s\t3, r3, r1\n\tsub.s\t1, r0, r4\n\tshr\tr4, r1, r1\n\txor\tr1, r4, r1\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tld\tr2, r2\n\tand\tr2, r1, r1\n\tshl.s\t1, r3, r2\n\tor\tr1, r2, r1\n\tsstore\tr6, r1\n\tret\n.BB6_21:\n\tadd\tr0, r0, r1\n\tsstore\tr6, r1\n\tret\n.BB6_14:\n\tadd\tr0, r0, r3\n\tadd\tstack-[2], r0, r6\n\tsub!\tr2, r7, r2\n\tjump.lt\t@.BB6_18\n\tjump\t@.BB6_19\n.BB6_1:\n\tadd\t@CPI6_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_4:\n\tadd\t@CPI6_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB6_7:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nfun_getWinningColor:\n.func_begin7:\n\tnop\tstack+=[13]\n\tadd\tr1, r0, stack-[12]\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\t32, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tadd\t8, r0, r2\n\tadd\tr2, r0, stack-[10]\n\tsload\tr2, r2\n\tand!\t1, r2, r4\n\tadd\tr2, r0, stack-[6]\n\tshr.s\t1, r2, r2\n\tand\t127, r2, r7\n\tadd.ne\tr2, r0, r7\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsub.s!\t31, r7, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tadd\tr4, r0, stack-[11]\n\tsub!\tr4, r3, r3\n\tjump.ne\t@.BB7_165\n\tsub!\tstack-[11], r0, r3\n\tjump.eq\t@.BB7_6\n\tadd\tstack-[10], r0, r3\n\tst.1\t0, r3\n\tsub!\tr7, r0, r3\n\tjump.eq\t@.BB7_7\n\tadd\t@CPI7_2[0], r0, r3\n\tadd\tr0, r0, r4\n.BB7_5:\n\tadd\tr4, r2, r5\n\tsload\tr3, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tadd\t32, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB7_5\n\tjump\t@.BB7_7\n.BB7_6:\n\tsub.s\t256, r0, r3\n\tand\tstack-[6], r3, r3\n\tst.1\tr2, r3\n.BB7_7:\n\tadd\tr7, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI7_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\t@CPI7_3[0], r0, r2\n\tsub.s!\t@CPI7_3[0], r7, r3\n\tadd\tr7, r0, stack-[9]\n\tadd.lt\tr7, r0, r2\n\tshl.s\t96, r2, r2\n\tadd\t@CPI7_4[0], r2, stack-[8]\n\tor\tstack-[8], r1, r1\n\tor\t@CPI7_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tadd\t9, r0, r2\n\tadd\tr2, r0, stack-[5]\n\tsload\tr2, r4\n\tand!\t1, r4, r5\n\tshr.s\t1, r4, r2\n\tand\t127, r2, r7\n\tadd.ne\tr2, r0, r7\n\tld.1\t64, r2\n\tsub.s!\t31, r7, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tadd\tr4, r0, stack-[7]\n\txor\tr4, r3, r3\n\tld\tr1, r1\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB7_165\n\tsub!\tr5, r0, r3\n\tadd\tr5, r0, stack-[3]\n\tjump.eq\t@.BB7_14\n\tadd\tstack-[5], r0, r3\n\tst.1\t0, r3\n\tsub!\tr7, r0, r3\n\tjump.eq\t@.BB7_15\n\tadd\t@CPI7_6[0], r0, r3\n\tadd\tr0, r0, r4\n.BB7_13:\n\tadd\tr4, r2, r5\n\tsload\tr3, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tadd\t32, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB7_13\n\tjump\t@.BB7_15\n.BB7_14:\n\tsub.s\t256, r0, r3\n\tand\tstack-[7], r3, r3\n\tst.1\tr2, r3\n.BB7_15:\n\tadd\tr7, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI7_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI7_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI7_3[0], r0, r2\n\tsub.s!\t@CPI7_3[0], r7, r3\n\tadd\tr7, r0, stack-[1]\n\tadd.lt\tr7, r0, r2\n\tshl.s\t96, r2, r2\n\tadd\t@CPI7_4[0], r2, stack-[2]\n\tor\tstack-[2], r1, r1\n\tor\t@CPI7_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\t0, r2\n\tadd\tstack-[13], r0, r2\n\tst.1\t32, r2\n\tsub!\tstack-[4], r1, r1\n\tjump.ge\t@.BB7_22\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsub!\tstack-[11], r0, r3\n\tjump.eq\t@.BB7_27\n\tadd\tstack-[10], r0, r3\n\tst.1\t0, r3\n\tadd\tstack-[9], r0, r7\n\tsub!\tr7, r0, r3\n\tjump.eq\t@.BB7_28\n\tadd\t@CPI7_2[0], r0, r3\n\tadd\tr0, r0, r4\n.BB7_21:\n\tadd\tr4, r2, r5\n\tsload\tr3, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tadd\t32, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB7_21\n\tjump\t@.BB7_28\n.BB7_22:\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsub!\tstack-[11], r0, r3\n\tjump.eq\t@.BB7_35\n\tadd\tstack-[10], r0, r3\n\tst.1\t0, r3\n\tadd\tstack-[9], r0, r7\n\tsub!\tr7, r0, r3\n\tjump.eq\t@.BB7_36\n\tadd\t@CPI7_2[0], r0, r3\n\tadd\tr0, r0, r4\n.BB7_26:\n\tadd\tr4, r2, r5\n\tsload\tr3, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tadd\t32, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB7_26\n\tjump\t@.BB7_36\n.BB7_27:\n\tsub.s\t256, r0, r3\n\tand\tstack-[6], r3, r3\n\tst.1\tr2, r3\n\tadd\tstack-[9], r0, r7\n.BB7_28:\n\tadd\tr2, r7, r3\n\tst.1\tr3, r1\n\tadd\t@CPI7_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tor\tstack-[8], r1, r1\n\tor\t@CPI7_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tadd\t10, r0, r4\n\tsload\tr4, r5\n\tand!\t1, r5, r6\n\tshr.s\t1, r5, r2\n\tand\t127, r2, r7\n\tadd.ne\tr2, r0, r7\n\tld.1\t64, r2\n\tsub.s!\t31, r7, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr5, r3, r3\n\tld\tr1, r1\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB7_165\n\tsub!\tr6, r0, r3\n\tadd\tr4, r0, stack-[1]\n\tadd\tr5, r0, stack-[4]\n\tadd\tr6, r0, stack-[3]\n\tjump.eq\t@.BB7_48\n\tst.1\t0, r4\n\tsub!\tr7, r0, r3\n\tjump.eq\t@.BB7_49\n\tadd\t@CPI7_7[0], r0, r3\n\tadd\tr0, r0, r4\n.BB7_34:\n\tadd\tr4, r2, r5\n\tsload\tr3, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tadd\t32, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB7_34\n\tjump\t@.BB7_49\n.BB7_35:\n\tsub.s\t256, r0, r3\n\tand\tstack-[6], r3, r3\n\tst.1\tr2, r3\n\tadd\tstack-[9], r0, r7\n.BB7_36:\n\tadd\tr2, r7, r3\n\tst.1\tr3, r1\n\tadd\t@CPI7_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tor\tstack-[8], r1, r1\n\tor\t@CPI7_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsub!\tstack-[3], r0, r3\n\tjump.ne\t@.BB7_40\n\tsub.s\t256, r0, r3\n\tand\tstack-[7], r3, r3\n\tst.1\tr2, r3\n\tadd\tstack-[1], r0, r7\n\tjump\t@.BB7_43\n.BB7_40:\n\tadd\tstack-[5], r0, r3\n\tst.1\t0, r3\n\tadd\tstack-[7], r0, r3\n\tsub.s!\t2, r3, r3\n\tadd\tstack-[1], r0, r7\n\tjump.lt\t@.BB7_43\n\tadd\t@CPI7_6[0], r0, r3\n\tadd\tr0, r0, r4\n.BB7_42:\n\tadd\tr4, r2, r5\n\tsload\tr3, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tadd\t32, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB7_42\n.BB7_43:\n\tadd\tr2, r7, r3\n\tst.1\tr3, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI7_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI7_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\tstack-[2], r1, r1\n\tor\t@CPI7_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\t0, r2\n\tadd\tstack-[13], r0, r2\n\tst.1\t32, r2\n\tsub!\tstack-[4], r1, r1\n\tjump.le\t@.BB7_56\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsub!\tstack-[3], r0, r3\n\tjump.ne\t@.BB7_66\n\tsub.s\t256, r0, r3\n\tand\tstack-[7], r3, r3\n\tst.1\tr2, r3\n\tadd\tstack-[1], r0, r7\n\tjump\t@.BB7_69\n.BB7_48:\n\tsub.s\t256, r0, r3\n\tand\tr5, r3, r3\n\tst.1\tr2, r3\n.BB7_49:\n\tadd\tr7, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI7_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI7_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI7_3[0], r0, r2\n\tsub.s!\t@CPI7_3[0], r7, r3\n\tadd\tr7, r0, stack-[5]\n\tadd.lt\tr7, r0, r2\n\tshl.s\t96, r2, r2\n\tadd\t@CPI7_4[0], r2, stack-[2]\n\tor\tstack-[2], r1, r1\n\tor\t@CPI7_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tstack-[7], r1, r1\n\tjump.ge\t@.BB7_61\n\tadd\tstack-[10], r0, r1\n\tsload\tr1, r4\n\tand!\t1, r4, r5\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\txor\tr4, r1, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB7_165\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub!\tr5, r0, r5\n\tjump.eq\t@.BB7_84\n\tadd\tstack-[10], r0, r4\n\tst.1\t0, r4\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB7_143\n\tadd\t@CPI7_2[0], r0, r5\n\tadd\tr0, r0, r4\n.BB7_55:\n\tadd\tr3, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r6\n\tjump.lt\t@.BB7_55\n\tjump\t@.BB7_144\n.BB7_56:\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsub!\tstack-[11], r0, r3\n\tjump.eq\t@.BB7_76\n\tadd\tstack-[10], r0, r3\n\tst.1\t0, r3\n\tadd\tstack-[9], r0, r7\n\tsub!\tr7, r0, r3\n\tjump.eq\t@.BB7_77\n\tadd\t@CPI7_2[0], r0, r3\n\tadd\tr0, r0, r4\n.BB7_60:\n\tadd\tr4, r2, r5\n\tsload\tr3, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tadd\t32, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB7_60\n\tjump\t@.BB7_77\n.BB7_61:\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsub!\tstack-[11], r0, r3\n\tjump.eq\t@.BB7_85\n\tadd\tstack-[10], r0, r3\n\tst.1\t0, r3\n\tadd\tstack-[9], r0, r7\n\tsub!\tr7, r0, r3\n\tjump.eq\t@.BB7_86\n\tadd\t@CPI7_2[0], r0, r3\n\tadd\tr0, r0, r4\n.BB7_65:\n\tadd\tr4, r2, r5\n\tsload\tr3, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tadd\t32, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB7_65\n\tjump\t@.BB7_86\n.BB7_66:\n\tadd\tstack-[5], r0, r3\n\tst.1\t0, r3\n\tadd\tstack-[7], r0, r3\n\tsub.s!\t2, r3, r3\n\tadd\tstack-[1], r0, r7\n\tjump.lt\t@.BB7_69\n\tadd\t@CPI7_6[0], r0, r3\n\tadd\tr0, r0, r4\n.BB7_68:\n\tadd\tr4, r2, r5\n\tsload\tr3, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tadd\t32, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB7_68\n.BB7_69:\n\tadd\tr7, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI7_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tor\tstack-[2], r1, r1\n\tor\t@CPI7_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tadd\t10, r0, r4\n\tsload\tr4, r5\n\tand!\t1, r5, r6\n\tshr.s\t1, r5, r2\n\tand\t127, r2, r7\n\tadd.ne\tr2, r0, r7\n\tld.1\t64, r2\n\tsub.s!\t31, r7, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr5, r3, r3\n\tld\tr1, r1\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB7_165\n\tsub!\tr6, r0, r3\n\tadd\tr4, r0, stack-[9]\n\tadd\tr5, r0, stack-[6]\n\tadd\tr6, r0, stack-[10]\n\tjump.eq\t@.BB7_90\n\tst.1\t0, r4\n\tsub!\tr7, r0, r3\n\tjump.eq\t@.BB7_91\n\tadd\t@CPI7_7[0], r0, r3\n\tadd\tr0, r0, r4\n.BB7_75:\n\tadd\tr4, r2, r5\n\tsload\tr3, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tadd\t32, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB7_75\n\tjump\t@.BB7_91\n.BB7_76:\n\tsub.s\t256, r0, r3\n\tand\tstack-[6], r3, r3\n\tst.1\tr2, r3\n\tadd\tstack-[9], r0, r7\n.BB7_77:\n\tadd\tr2, r7, r3\n\tst.1\tr3, r1\n\tadd\t@CPI7_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tor\tstack-[8], r1, r1\n\tor\t@CPI7_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tadd\t10, r0, r7\n\tsload\tr7, r4\n\tand!\t1, r4, r5\n\tshr.s\t1, r4, r3\n\tand\t127, r3, r2\n\tadd.ne\tr3, r0, r2\n\tld.1\t64, r3\n\tsub.s!\t31, r2, r6\n\tadd\t0, r0, r6\n\tadd.gt\t1, r0, r6\n\txor\tr4, r6, r6\n\tld\tr1, r1\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB7_165\n\tsub!\tr5, r0, r5\n\tadd\tr7, r0, stack-[12]\n\tjump.eq\t@.BB7_98\n\tst.1\t0, r7\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB7_99\n\tadd\t@CPI7_7[0], r0, r4\n\tadd\tr0, r0, r5\n.BB7_83:\n\tadd\tr5, r3, r6\n\tsload\tr4, r7\n\tst.1\tr6, r7\n\tadd\t1, r4, r4\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB7_83\n\tjump\t@.BB7_99\n.BB7_84:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr3, r4\n\tsub!\tr2, r0, r2\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n\tjump\t@.BB7_144\n.BB7_85:\n\tsub.s\t256, r0, r3\n\tand\tstack-[6], r3, r3\n\tst.1\tr2, r3\n\tadd\tstack-[9], r0, r7\n.BB7_86:\n\tadd\tr2, r7, r3\n\tst.1\tr3, r1\n\tadd\t@CPI7_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tor\tstack-[8], r1, r1\n\tor\t@CPI7_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsub!\tstack-[3], r0, r3\n\tjump.ne\t@.BB7_106\n\tsub.s\t256, r0, r3\n\tand\tstack-[4], r3, r3\n\tst.1\tr2, r3\n\tadd\tstack-[5], r0, r7\n\tjump\t@.BB7_109\n.BB7_90:\n\tsub.s\t256, r0, r3\n\tand\tr5, r3, r3\n\tst.1\tr2, r3\n.BB7_91:\n\tadd\tr7, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI7_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI7_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI7_3[0], r0, r2\n\tsub.s!\t@CPI7_3[0], r7, r3\n\tadd\tr7, r0, stack-[8]\n\tadd.lt\tr7, r0, r2\n\tshl.s\t96, r2, r2\n\tadd\t@CPI7_4[0], r2, stack-[4]\n\tor\tstack-[4], r1, r1\n\tor\t@CPI7_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld\tr1, r1\n\tsload\tr1, r1\n\tsub!\tstack-[11], r1, r1\n\tjump.ge\t@.BB7_116\n\tadd\tstack-[5], r0, r1\n\tsload\tr1, r4\n\tand!\t1, r4, r5\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r2\n\tadd.ne\tr1, r0, r2\n\tsub.s!\t31, r2, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\txor\tr4, r1, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB7_165\n\tld.1\t64, r1\n\tst.1.inc\tr1, r2, r3\n\tsub!\tr5, r0, r5\n\tjump.eq\t@.BB7_122\n\tadd\tstack-[5], r0, r4\n\tst.1\t0, r4\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB7_148\n\tadd\t@CPI7_6[0], r0, r5\n\tadd\tr0, r0, r4\n.BB7_97:\n\tadd\tr3, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r6\n\tjump.lt\t@.BB7_97\n\tjump\t@.BB7_149\n.BB7_98:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr3, r4\n.BB7_99:\n\tadd\tr2, r3, r4\n\tst.1\tr4, r1\n\tadd\t@CPI7_3[0], r0, r1\n\tsub.s!\t@CPI7_3[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tadd\t@CPI7_0[0], r0, r1\n\tsub.s!\t@CPI7_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t96, r2, r2\n\tor\tr2, r3, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI7_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\tr2, r1, r1\n\tadd\t@CPI7_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB7_164\n\tld.1\t64, r1\n\tld\tr3, r2\n\tsload\tr2, r2\n\tsub!\tstack-[11], r2, r2\n\tadd\tstack-[12], r0, r6\n\tjump.le\t@.BB7_120\n\tsload\tr6, r4\n\tand!\t1, r4, r5\n\tshr.s\t1, r4, r3\n\tand\t127, r3, r2\n\tadd.ne\tr3, r0, r2\n\tsub.s!\t31, r2, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr4, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB7_165\n\tst.1.inc\tr1, r2, r3\n\tsub!\tr5, r0, r5\n\tjump.eq\t@.BB7_123\n\tst.1\t0, r6\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB7_152\n\tadd\t@CPI7_7[0], r0, r5\n\tadd\tr0, r0, r4\n.BB7_105:\n\tadd\tr3, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r6\n\tjump.lt\t@.BB7_105\n\tjump\t@.BB7_153\n.BB7_106:\n\tadd\tstack-[1], r0, r3\n\tst.1\t0, r3\n\tadd\tstack-[4], r0, r3\n\tsub.s!\t2, r3, r3\n\tadd\tstack-[5], r0, r7\n\tjump.lt\t@.BB7_109\n\tadd\t@CPI7_7[0], r0, r3\n\tadd\tr0, r0, r4\n.BB7_108:\n\tadd\tr4, r2, r5\n\tsload\tr3, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tadd\t32, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB7_108\n.BB7_109:\n\tadd\tr2, r7, r3\n\tst.1\tr3, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI7_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI7_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\tstack-[2], r1, r1\n\tor\t@CPI7_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB7_164\n\tld.1\t64, r1\n\tld\tr3, r2\n\tsload\tr2, r2\n\tsub!\tstack-[11], r2, r2\n\tjump.le\t@.BB7_119\n\tadd\tstack-[1], r0, r6\n\tsload\tr6, r4\n\tand!\t1, r4, r5\n\tshr.s\t1, r4, r3\n\tand\t127, r3, r2\n\tadd.ne\tr3, r0, r2\n\tsub.s!\t31, r2, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr4, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB7_165\n\tst.1.inc\tr1, r2, r3\n\tsub!\tr5, r0, r5\n\tjump.eq\t@.BB7_124\n\tst.1\t0, r6\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB7_156\n\tadd\t@CPI7_7[0], r0, r5\n\tadd\tr0, r0, r4\n.BB7_115:\n\tadd\tr3, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r6\n\tjump.lt\t@.BB7_115\n\tjump\t@.BB7_157\n.BB7_116:\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsub!\tstack-[3], r0, r3\n\tjump.ne\t@.BB7_125\n\tsub.s\t256, r0, r3\n\tand\tstack-[7], r3, r3\n\tst.1\tr2, r3\n\tadd\tstack-[1], r0, r7\n\tjump\t@.BB7_128\n.BB7_119:\n.BB7_120:\n\tsub.s!\t@CPI7_9[0], r1, r2\n\tjump.gt\t@.BB7_166\n.BB7_121:\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tadd\t32, r1, r2\n\tadd\t@CPI7_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tret\n.BB7_122:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr3, r4\n\tsub!\tr2, r0, r2\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n\tjump\t@.BB7_149\n.BB7_123:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr3, r4\n\tsub!\tr2, r0, r2\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n\tjump\t@.BB7_153\n.BB7_124:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr3, r4\n\tsub!\tr2, r0, r2\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n\tjump\t@.BB7_157\n.BB7_125:\n\tadd\tstack-[5], r0, r3\n\tst.1\t0, r3\n\tadd\tstack-[1], r0, r7\n\tsub!\tr7, r0, r3\n\tjump.eq\t@.BB7_128\n\tadd\t@CPI7_6[0], r0, r3\n\tadd\tr0, r0, r4\n.BB7_127:\n\tadd\tr4, r2, r5\n\tsload\tr3, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tadd\t32, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB7_127\n.BB7_128:\n\tadd\tr2, r7, r3\n\tst.1\tr3, r1\n\tadd\t@CPI7_0[0], r0, r4\n\tsub.s!\t@CPI7_0[0], r2, r1\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r1\n\tor\tstack-[2], r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI7_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\tstack-[12], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[13], r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI7_0[0], r1, r2\n\tadd.ge\t@CPI7_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_164\n\tld.1\t64, r2\n\tld\tr1, r1\n\tsub!\tstack-[10], r0, r3\n\tjump.ne\t@.BB7_132\n\tsub.s\t256, r0, r3\n\tand\tstack-[6], r3, r3\n\tst.1\tr2, r3\n\tadd\tstack-[8], r0, r7\n\tadd\tstack-[4], r0, r8\n\tjump\t@.BB7_135\n.BB7_132:\n\tadd\tstack-[9], r0, r3\n\tst.1\t0, r3\n\tadd\tstack-[6], r0, r3\n\tsub.s!\t2, r3, r3\n\tadd\tstack-[8], r0, r7\n\tadd\tstack-[4], r0, r8\n\tjump.lt\t@.BB7_135\n\tadd\t@CPI7_7[0], r0, r3\n\tadd\tr0, r0, r4\n.BB7_134:\n\tadd\tr4, r2, r5\n\tsload\tr3, r6\n\tst.1\tr5, r6\n\tadd\t1, r3, r3\n\tadd\t32, r4, r4\n\tsub!\tr4, r7, r5\n\tjump.lt\t@.BB7_134\n.BB7_135:\n\tadd\tr2, r7, r3\n\tst.1\tr3, r1\n\tadd\t@CPI7_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI7_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI7_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\tr1, r8, r1\n\tor\t@CPI7_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tptr.add\tr1, r0, r3\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB7_164\n\tld.1\t64, r1\n\tld\tr3, r2\n\tsload\tr2, r2\n\tsub!\tstack-[11], r2, r2\n\tjump.le\t@.BB7_142\n\tadd\tstack-[9], r0, r6\n\tsload\tr6, r4\n\tand!\t1, r4, r5\n\tshr.s\t1, r4, r3\n\tand\t127, r3, r2\n\tadd.ne\tr3, r0, r2\n\tsub.s!\t31, r2, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr4, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB7_165\n\tst.1.inc\tr1, r2, r3\n\tsub!\tr5, r0, r5\n\tjump.eq\t@.BB7_147\n\tst.1\t0, r6\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB7_160\n\tadd\t@CPI7_7[0], r0, r5\n\tadd\tr0, r0, r4\n.BB7_141:\n\tadd\tr3, r4, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r6\n\tjump.lt\t@.BB7_141\n\tjump\t@.BB7_161\n.BB7_142:\n\tsub.s!\t@CPI7_9[0], r1, r2\n\tjump.le\t@.BB7_121\n\tjump\t@.BB7_166\n.BB7_143:\n\tadd\tr0, r0, r4\n.BB7_144:\n\tadd\t63, r4, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI7_11[0], r2, r4\n\tjump.gt\t@.BB7_166\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB7_166\n\tst.1\t64, r2\n\tret\n.BB7_147:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr3, r4\n\tsub!\tr2, r0, r2\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n\tjump\t@.BB7_161\n.BB7_148:\n\tadd\tr0, r0, r4\n.BB7_149:\n\tadd\t63, r4, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI7_11[0], r2, r4\n\tjump.gt\t@.BB7_166\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB7_166\n\tst.1\t64, r2\n\tret\n.BB7_152:\n\tadd\tr0, r0, r4\n.BB7_153:\n\tadd\t63, r4, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI7_11[0], r2, r4\n\tjump.gt\t@.BB7_166\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB7_166\n\tst.1\t64, r2\n\tret\n.BB7_156:\n\tadd\tr0, r0, r4\n.BB7_157:\n\tadd\t63, r4, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI7_11[0], r2, r4\n\tjump.gt\t@.BB7_166\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB7_166\n\tst.1\t64, r2\n\tret\n.BB7_160:\n\tadd\tr0, r0, r4\n.BB7_161:\n\tadd\t63, r4, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI7_11[0], r2, r4\n\tjump.gt\t@.BB7_166\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB7_166\n\tst.1\t64, r2\n\tret\n.BB7_164:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_165:\n\tadd\t@CPI7_12[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_13[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB7_166:\n\tadd\t@CPI7_12[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_13[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\nfun_stringCompare:\n.func_begin8:\n\tnop\tstack+=[3]\n\tadd\tr2, r0, stack-[3]\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld.1.inc\tr1, r1, r4\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB8_3\n\tadd\tr0, r0, r5\n.BB8_2:\n\tadd\tr5, r3, r6\n\tadd\tr4, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB8_2\n.BB8_3:\n\tadd\tr1, r3, r4\n\tst.1\tr4, r0\n\tst.1\tr2, r1\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, stack-[2]\n\tand\tstack-[2], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI8_0[0], r1, r5\n\tjump.gt\t@.BB8_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB8_5\n\tst.1\t64, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tsub.s!\t@CPI8_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr2, r2\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r3, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI8_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\tr1, r2, r1\n\tor\t@CPI8_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_7\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[3], r0, r1\n\tld.1.inc\tr1, r1, r4\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB8_11\n\tadd\tr0, r0, r5\n.BB8_10:\n\tadd\tr5, r3, r6\n\tadd\tr4, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB8_10\n.BB8_11:\n\tadd\tr1, r3, r4\n\tst.1\tr4, r0\n\tst.1\tr2, r1\n\tadd\t63, r1, r1\n\tand\tstack-[2], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI8_0[0], r1, r5\n\tjump.gt\t@.BB8_5\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB8_5\n\tst.1\t64, r1\n\tadd\t@CPI8_1[0], r0, r1\n\tsub.s!\t@CPI8_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r3\n\tld.1\tr2, r2\n\tsub.s!\t@CPI8_1[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r3, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI8_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\tr1, r2, r1\n\tor\t@CPI8_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_7\n\tld\tr1, r1\n\tsub!\tstack-[1], r1, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tret\n.BB8_5:\n\tadd\t@CPI8_3[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI8_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB8_7:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\n__cxa_throw:\n.func_begin9:\n\trevert\n.func_end9:\n\n__sha3:\n.func_begin10:\n\tadd\t@CPI10_0[0], r0, r3\n\tsub.s!\t@CPI10_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI10_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI10_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI10_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB10_2\n\tld\tr1, r1\n\tret\n.BB10_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end10:\n\n__system_request:\n.func_begin11:\n\tadd\t@CPI11_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI11_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI11_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI11_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB11_2\n\tld\tr1, r1\n\tret\n.BB11_2:\n\trevert\n.func_end11:\n\n__farcall:\n.func_begin12:\n.tmp0:\n\tfar_call\tr1, r2, @.BB12_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB12_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end12:\n\n__staticcall:\n.func_begin13:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB13_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB13_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end13:\n\n\t.data\n\t.p2align\t5, 0x0\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI4_0:\nCPI6_1:\nCPI7_0:\nCPI8_1:\nCPI10_0:\nCPI11_1:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_2:\nCPI7_5:\nCPI8_2:\nCPI10_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_3:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_4:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_5:\nCPI4_1:\nCPI6_2:\nCPI7_8:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_6:\n\t.cell 16010106639499254026482297176348401674482686409439306412715736413446126698510\nCPI0_7:\n\t.cell 16011861003687481174205559573200313818061107293550541580395584172037135925262\nCPI0_8:\n\t.cell 15921736786924681753856030961067519132006835803707913525351034469067947769870\nCPI0_9:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_10:\n\t.cell 2376452954\nCPI0_11:\n\t.cell 2944122855\nCPI0_12:\n\t.cell 3961580631\nCPI0_13:\n\t.cell 3961580632\nCPI0_14:\n\t.cell 4076725131\nCPI0_15:\n\t.cell 2944122856\nCPI0_16:\n\t.cell 3479755134\nCPI0_17:\n\t.cell 2765696638\nCPI0_18:\n\t.cell 2765696639\nCPI0_19:\n\t.cell 2883194622\nCPI0_20:\n\t.cell 2376452955\nCPI0_21:\n\t.cell 2393882831\nCPI0_22:\n\t.cell 1172348499\nCPI0_23:\n\t.cell 1901074597\nCPI0_24:\n\t.cell 1901074598\nCPI0_25:\n\t.cell 2097411571\nCPI0_26:\n\t.cell 1172348500\nCPI0_27:\n\t.cell 1614101945\nCPI0_28:\n\t.cell 874030434\nCPI0_29:\n\t.cell 882417246\nCPI0_30:\n\t.cell 1053084008\nCPI0_31:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_32:\n\t.cell 35943731656364841964517558219894961445653631979235167635064085396828900499553\nCPI0_33:\n\t.cell 45408759099000846574684193736602357774271237157169010951590501707763511459840\nCPI0_34:\n\t.cell 10458117454244075803782624051200\nCPI0_35:\nCPI1_2:\nCPI2_1:\nCPI4_2:\nCPI7_11:\nCPI8_0:\n\t.cell 18446744073709551615\nCPI0_36:\nCPI1_0:\nCPI2_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_37:\n\t.cell 18446744073709551487\nCPI0_38:\nCPI7_2:\n\t.cell -5442482557903504250613150719145357533886713417884903185095341029921719619869\nCPI0_39:\nCPI7_6:\n\t.cell 49791959467252497455735130940088646708311117250336157395101362029847983277999\nCPI0_40:\nCPI7_7:\n\t.cell -26074275084009875412389268311263347690013120251023914000470397511746302913880\nCPI0_41:\nCPI7_1:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_42:\nCPI11_0:\n\t.cell 30212542071733633044144396051920796812958444182406851663962835650539531164625\nCPI0_43:\nCPI11_2:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_44:\n\t.cell -65281\nCPI0_45:\nCPI7_3:\n\t.cell 4294967263\nCPI0_46:\n\t.cell 904625697166532776746648320380374280103671770412124109297015193022259789824\nCPI0_47:\n\t.cell 904625697166532776746648320380374280443954122042027207507372644900045586432\nCPI0_48:\n\t.cell 4294967104\nCPI0_49:\n\t.cell -28274173850588494815876143287212242814909791396660875998652020910934784297416\nCPI0_50:\n\t.cell 38178729325717893107804163509059159520634195461988441600103300840513408598016\nCPI0_51:\n\t.cell 7922816251426433759354395033600\nCPI0_52:\n\t.cell 18446744073709551583\nCPI0_53:\n\t.cell 38650479695255036159286489555220615715582915659548891798205538172760664047616\nCPI0_54:\nCPI1_3:\nCPI2_3:\nCPI4_3:\nCPI6_3:\nCPI7_12:\nCPI8_3:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_55:\nCPI1_4:\nCPI2_4:\nCPI4_4:\nCPI6_4:\nCPI7_13:\nCPI8_4:\n\t.cell 2852213850513516153367582212096\nCPI0_56:\n\t.cell 38178759162902506947127222663726907597963550915915428568112047281163269570560\nCPI0_57:\nCPI7_4:\n\t.cell 2535301200456458802993406410752\nCPI0_58:\n\t.cell 2535301202817642044428229017600\nCPI0_59:\n\t.cell 35943731656364841964516503116990081338611484598491072354577564874054038349170\nCPI0_60:\n\t.cell 7922816253787617000789217640448\nCPI0_61:\n\t.cell 18446744073709551295\nCPI0_62:\n\t.cell 18446744073709551296\nCPI1_1:\nCPI2_2:\nCPI6_0:\n\t.cell 18446744073709551616\nCPI7_9:\n\t.cell 18446744073709551551\nCPI7_10:\n\t.cell 49951192038432629612543878142684036354619105532975285228449864888569412190208\n","bytecode":{"object":""},"methodIdentifiers":{"boards(uint256,uint256,uint256)":"a4d92e7f","changeColor(uint256,string)":"cf68d97e","colorCount(uint256,string)":"3418a562","getBoard(uint256)":"45e09e54","getWinningColor(uint256)":"af7bbfe8","isUserWin(uint256)":"abda0efe","newGame()":"7d03f5f3","owner()":"8da5cb5b","place(uint256,(uint8,uint8,string))":"ec20ec58","renounceOwnership()":"715018a6","startTime(uint256)":"3ec4c968","stringCompare(string,string)":"60353db9","transferOwnership(address)":"f2fde38b","userColor(uint256,address)":"34989e5e","userLocation(uint256,address,uint256)":"8eafc0cf"}},"irOptimized":"/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 1:\"@openzeppelin/contracts/utils/Context.sol\", 3:\"contracts/BoardGame.sol\"\nobject \"BoardGame_721\" {\n    code {\n        {\n            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            /// @src 0:2518:2524  \"_owner\"\n            let _1 := 0x00\n            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n            let _2 := sload(/** @src 0:2518:2524  \"_owner\" */ _1)\n            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n            sstore(/** @src 0:2518:2524  \"_owner\" */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ or(and(_2, not(sub(shl(160, 1), 1))), /** @src 1:734:744  \"msg.sender\" */ caller()))\n            /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src 0:2518:2524  \"_owner\" */ _1, _1, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ and(_2, sub(shl(160, 1), 1)), /** @src 1:734:744  \"msg.sender\" */ caller())\n            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n            sstore(/** @src 3:673:676  \"420\" */ 0x07, 0x01a4)\n            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n            let _3 := extract_byte_array_length(sload(/** @src 3:725:734  \"\\\"#ef4444\\\"\" */ 0x08))\n            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n            let _4 := 31\n            if gt(_3, _4)\n            {\n                mstore(/** @src 0:2518:2524  \"_owner\" */ _1, /** @src 3:725:734  \"\\\"#ef4444\\\"\" */ 0x08)\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let data := keccak256(/** @src 0:2518:2524  \"_owner\" */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ 0x20)\n                let _5 := add(data, shr(5, add(_3, _4)))\n                let start := data\n                for { } lt(start, _5) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src 0:2518:2524  \"_owner\" */ _1)\n                }\n            }\n            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n            sstore(/** @src 3:725:734  \"\\\"#ef4444\\\"\" */ 0x08, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ add(\"#ef4444\", 14))\n            let _6 := extract_byte_array_length(sload(/** @src 3:754:763  \"\\\"#fde047\\\"\" */ 0x09))\n            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n            if gt(_6, _4)\n            {\n                mstore(/** @src 0:2518:2524  \"_owner\" */ _1, /** @src 3:754:763  \"\\\"#fde047\\\"\" */ 0x09)\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let data_1 := keccak256(/** @src 0:2518:2524  \"_owner\" */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ 0x20)\n                let _7 := add(data_1, shr(5, add(_6, _4)))\n                let start_1 := data_1\n                for { } lt(start_1, _7) { start_1 := add(start_1, 1) }\n                {\n                    sstore(start_1, /** @src 0:2518:2524  \"_owner\" */ _1)\n                }\n            }\n            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n            sstore(/** @src 3:754:763  \"\\\"#fde047\\\"\" */ 0x09, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ add(\"#fde047\", 14))\n            let _8 := extract_byte_array_length(sload(/** @src 3:781:790  \"\\\"#3b82f6\\\"\" */ 0x0a))\n            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n            if gt(_8, _4)\n            {\n                mstore(/** @src 0:2518:2524  \"_owner\" */ _1, /** @src 3:781:790  \"\\\"#3b82f6\\\"\" */ 0x0a)\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let data_2 := keccak256(/** @src 0:2518:2524  \"_owner\" */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ 0x20)\n                let _9 := add(data_2, shr(5, add(_8, _4)))\n                let start_2 := data_2\n                for { } lt(start_2, _9) { start_2 := add(start_2, 1) }\n                {\n                    sstore(start_2, /** @src 0:2518:2524  \"_owner\" */ _1)\n                }\n            }\n            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n            sstore(/** @src 3:781:790  \"\\\"#3b82f6\\\"\" */ 0x0a, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ add(\"#3b82f6\", 14))\n            let _10 := mload(64)\n            let _11 := datasize(\"BoardGame_721_deployed\")\n            codecopy(_10, dataoffset(\"BoardGame_721_deployed\"), _11)\n            return(_10, _11)\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 1:\"@openzeppelin/contracts/utils/Context.sol\", 2:\"@openzeppelin/contracts/utils/Counters.sol\", 3:\"contracts/BoardGame.sol\"\n    object \"BoardGame_721_deployed\" {\n        code {\n            {\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x3418a562 {\n                        if callvalue() { revert(_3, _3) }\n                        let param, param_1 := abi_decode_uint256t_string(calldatasize())\n                        mstore(_3, param)\n                        mstore(0x20, /** @src 3:583:647  \"mapping(uint256 => mapping(string => uint256)) public colorCount\" */ 6)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataSlot := keccak256(_3, _1)\n                        let pos := mload(_1)\n                        let length := mload(param_1)\n                        copy_memory_to_memory_with_cleanup(add(param_1, 0x20), pos, length)\n                        let end := add(pos, length)\n                        mstore(end, dataSlot)\n                        let _4 := sload(keccak256(pos, add(sub(end, pos), 0x20)))\n                        let memPos := mload(_1)\n                        mstore(memPos, _4)\n                        return(memPos, 0x20)\n                    }\n                    case 0x34989e5e {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value1 := abi_decode_address()\n                        mstore(_3, calldataload(_2))\n                        mstore(32, /** @src 3:514:577  \"mapping(uint256 => mapping(address => string)) public userColor\" */ 5)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let _5 := keccak256(_3, _1)\n                        mstore(_3, and(value1, sub(shl(160, 1), 1)))\n                        mstore(32, _5)\n                        let value := copy_array_from_storage_to_memory_string(keccak256(_3, _1))\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, 32)\n                        return(memPos_1, sub(abi_encode_string(value, add(memPos_1, 32)), memPos_1))\n                    }\n                    case 0x3ec4c968 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        mstore(_3, calldataload(_2))\n                        mstore(32, _2)\n                        let _6 := sload(keccak256(_3, _1))\n                        let memPos_2 := mload(_1)\n                        mstore(memPos_2, _6)\n                        return(memPos_2, 32)\n                    }\n                    case 0x45e09e54 {\n                        if callvalue() { revert(_3, _3) }\n                        let _7 := 32\n                        if slt(add(calldatasize(), not(3)), _7) { revert(_3, _3) }\n                        let memPtr := mload(_1)\n                        finalize_allocation_13406(memPtr)\n                        let i := _3\n                        for { } true { i := add(i, _7) }\n                        {\n                            let _8 := 320\n                            if iszero(lt(i, _8)) { break }\n                            let memPtr_1 := mload(_1)\n                            finalize_allocation_13406(memPtr_1)\n                            let i_1 := _3\n                            for { } lt(i_1, _8) { i_1 := add(i_1, _7) }\n                            {\n                                mstore(add(memPtr_1, i_1), 96)\n                            }\n                            mstore(add(memPtr, i), memPtr_1)\n                        }\n                        mstore(_3, calldataload(_2))\n                        mstore(_7, /** @src 3:4099:4105  \"boards\" */ 0x02)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataSlot_1 := keccak256(_3, _1)\n                        let memPtr_2 := mload(_1)\n                        finalize_allocation_13406(memPtr_2)\n                        let mpos := memPtr_2\n                        let spos := dataSlot_1\n                        let i_2 := _3\n                        for { } true { i_2 := add(i_2, 1) }\n                        {\n                            let _9 := 10\n                            if iszero(lt(i_2, _9)) { break }\n                            let memPtr_3 := mload(_1)\n                            finalize_allocation_13406(memPtr_3)\n                            let mpos_1 := memPtr_3\n                            let spos_1 := spos\n                            let i_3 := _3\n                            for { } lt(i_3, _9) { i_3 := add(i_3, 1) }\n                            {\n                                mstore(mpos_1, copy_array_from_storage_to_memory_string(spos_1))\n                                mpos_1 := add(mpos_1, _7)\n                                spos_1 := add(spos_1, 1)\n                            }\n                            mstore(mpos, memPtr_3)\n                            mpos := add(mpos, _7)\n                            spos := add(spos, _9)\n                        }\n                        let memPos_3 := mload(_1)\n                        let tail := add(memPos_3, _7)\n                        mstore(memPos_3, _7)\n                        let pos_1 := tail\n                        pos_1 := tail\n                        let tail_1 := add(memPos_3, 352)\n                        let srcPtr := memPtr_2\n                        let i_4 := _3\n                        for { } true { i_4 := add(i_4, 1) }\n                        {\n                            let _10 := 10\n                            if iszero(lt(i_4, _10)) { break }\n                            mstore(pos_1, add(sub(tail_1, memPos_3), not(31)))\n                            let _11 := mload(srcPtr)\n                            let pos_2 := tail_1\n                            pos_2 := tail_1\n                            let tail_2 := add(tail_1, 320)\n                            let srcPtr_1 := _11\n                            let i_5 := _3\n                            for { } lt(i_5, _10) { i_5 := add(i_5, 1) }\n                            {\n                                mstore(pos_2, sub(tail_2, tail_1))\n                                tail_2 := abi_encode_string(mload(srcPtr_1), tail_2)\n                                srcPtr_1 := add(srcPtr_1, _7)\n                                pos_2 := add(pos_2, _7)\n                            }\n                            tail_1 := tail_2\n                            srcPtr := add(srcPtr, _7)\n                            pos_1 := add(pos_1, _7)\n                        }\n                        return(memPos_3, sub(tail_1, memPos_3))\n                    }\n                    case 0x60353db9 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let offset := calldataload(_2)\n                        let _12 := 0xffffffffffffffff\n                        if gt(offset, _12) { revert(_3, _3) }\n                        let value0 := abi_decode_string(add(_2, offset), calldatasize())\n                        let offset_1 := calldataload(36)\n                        if gt(offset_1, _12) { revert(_3, _3) }\n                        let ret := fun_stringCompare(value0, abi_decode_string(add(_2, offset_1), calldatasize()))\n                        let memPos_4 := mload(_1)\n                        mstore(memPos_4, iszero(iszero(ret)))\n                        return(memPos_4, 32)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let _13 := sload(_3)\n                        sstore(_3, and(_13, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _3, _3, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ and(_13, sub(shl(160, 1), 1)), _3)\n                        return(_3, _3)\n                    }\n                    case 0x7d03f5f3 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        mstore(_3, sload(/** @src 3:3928:3934  \"gameId\" */ 0x01))\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(0x20, _2)\n                        sstore(keccak256(_3, _1), /** @src 3:3948:3960  \"block.number\" */ number())\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        sstore(/** @src 3:3928:3934  \"gameId\" */ 0x01, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ add(sload(/** @src 3:3928:3934  \"gameId\" */ 0x01), 0x01))\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        return(_3, _3)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_1 := and(sload(_3), sub(shl(160, 1), 1))\n                        let memPos_5 := mload(_1)\n                        mstore(memPos_5, value_1)\n                        return(memPos_5, 32)\n                    }\n                    case 0x8eafc0cf {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_3, _3) }\n                        let value1_1 := abi_decode_address()\n                        let value_2 := calldataload(68)\n                        mstore(_3, calldataload(_2))\n                        mstore(32, /** @src 3:390:458  \"mapping(uint256 => mapping(address => uint8[2])) public userLocation\" */ 3)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let _14 := keccak256(_3, _1)\n                        mstore(_3, and(value1_1, sub(shl(160, 1), 1)))\n                        mstore(32, _14)\n                        let dataSlot_2 := keccak256(_3, _1)\n                        /// @src 3:390:458  \"mapping(uint256 => mapping(address => uint8[2])) public userLocation\"\n                        if iszero(lt(value_2, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ 0x02))\n                        /// @src 3:390:458  \"mapping(uint256 => mapping(address => uint8[2])) public userLocation\"\n                        {\n                            revert(/** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _3, _3)\n                        }\n                        let _15 := sload(add(dataSlot_2, shr(5, value_2)))\n                        let memPos_6 := mload(_1)\n                        mstore(memPos_6, and(shr(and(shl(/** @src 3:390:458  \"mapping(uint256 => mapping(address => uint8[2])) public userLocation\" */ 3, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ value_2), 248), _15), 0xff))\n                        return(memPos_6, 32)\n                    }\n                    case 0xa4d92e7f {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_3, _3) }\n                        let value_3 := calldataload(36)\n                        let value_4 := calldataload(68)\n                        mstore(_3, calldataload(_2))\n                        mstore(32, /** @src 3:336:384  \"mapping(uint256 => string[10][10]) public boards\" */ 2)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataSlot_3 := keccak256(_3, _1)\n                        /// @src 3:336:384  \"mapping(uint256 => string[10][10]) public boards\"\n                        if iszero(lt(value_3, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ 0x0a))\n                        /// @src 3:336:384  \"mapping(uint256 => string[10][10]) public boards\"\n                        {\n                            revert(/** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _3, _3)\n                        }\n                        /// @src 3:336:384  \"mapping(uint256 => string[10][10]) public boards\"\n                        let slot, offset_2 := storage_array_index_access_string_(dataSlot_3, value_3)\n                        if iszero(lt(value_4, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ 0x0a))\n                        /// @src 3:336:384  \"mapping(uint256 => string[10][10]) public boards\"\n                        {\n                            revert(/** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _3, _3)\n                        }\n                        /// @src 3:336:384  \"mapping(uint256 => string[10][10]) public boards\"\n                        let slot_1, offset_3 := storage_array_index_access_string(slot, value_4)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        if iszero(iszero(offset_3))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, _3)\n                            revert(_3, 36)\n                        }\n                        let value_5 := copy_array_from_storage_to_memory_string(slot_1)\n                        let memPos_7 := mload(_1)\n                        mstore(memPos_7, 32)\n                        return(memPos_7, sub(abi_encode_string(value_5, add(memPos_7, 32)), memPos_7))\n                    }\n                    case 0xabda0efe {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let ret_1 := fun_isUserWin(calldataload(_2))\n                        let memPos_8 := mload(_1)\n                        mstore(memPos_8, iszero(iszero(ret_1)))\n                        return(memPos_8, 32)\n                    }\n                    case 0xaf7bbfe8 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let ret_2 := fun_getWinningColor(calldataload(_2))\n                        let memPos_9 := mload(_1)\n                        mstore(memPos_9, 32)\n                        return(memPos_9, sub(abi_encode_string(ret_2, add(memPos_9, 32)), memPos_9))\n                    }\n                    case 0xcf68d97e {\n                        if callvalue() { revert(_3, _3) }\n                        let param_2, param_3 := abi_decode_uint256t_string(calldatasize())\n                        /// @src 3:1641:1700  \"stringCompare(_color, RED) || stringCompare(_color, YELLOW)\"\n                        let expr := /** @src 3:1641:1667  \"stringCompare(_color, RED)\" */ fun_stringCompare(param_3, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ copy_array_from_storage_to_memory_string_13411())\n                        /// @src 3:1641:1700  \"stringCompare(_color, RED) || stringCompare(_color, YELLOW)\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 3:1671:1700  \"stringCompare(_color, YELLOW)\" */ fun_stringCompare(param_3, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ copy_array_from_storage_to_memory_string_13412())\n                        }\n                        /// @src 3:1641:1731  \"stringCompare(_color, RED) || stringCompare(_color, YELLOW) || stringCompare(_color, BLUE)\"\n                        let expr_1 := expr\n                        if iszero(expr)\n                        {\n                            expr_1 := /** @src 3:1704:1731  \"stringCompare(_color, BLUE)\" */ fun_stringCompare(param_3, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ copy_array_from_storage_to_memory_string_13413())\n                        }\n                        /// @src 3:1633:1761  \"require(stringCompare(_color, RED) || stringCompare(_color, YELLOW) || stringCompare(_color, BLUE), \\\"This color is not allowed\\\")\"\n                        require_helper_stringliteral_57dd(expr_1)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(_3, param_2)\n                        let _16 := 0x20\n                        mstore(_16, _2)\n                        let _17 := sload(keccak256(_3, _1))\n                        /// @src 3:1779:1808  \"startTime[_gameId] + PLAYTIME\"\n                        let expr_2 := checked_add_uint256(_17, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ sload(/** @src 3:1800:1808  \"PLAYTIME\" */ 0x07))\n                        /// @src 3:1771:1857  \"require(startTime[_gameId] + PLAYTIME > block.number, \\\"The game is not ready to play\\\")\"\n                        require_helper_stringliteral_d503(/** @src 3:1779:1823  \"startTime[_gameId] + PLAYTIME > block.number\" */ gt(expr_2, /** @src 3:1811:1823  \"block.number\" */ number()))\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(_3, param_2)\n                        mstore(_16, /** @src 3:1890:1899  \"userColor\" */ 0x05)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataSlot_4 := keccak256(_3, _1)\n                        mstore(_3, /** @src 3:1909:1919  \"msg.sender\" */ caller())\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(_16, dataSlot_4)\n                        let converted := copy_array_from_storage_to_memory_string(keccak256(_3, _1))\n                        let memPtr_4 := mload(_1)\n                        let newFreePtr := add(memPtr_4, _16)\n                        let _18 := 0xffffffffffffffff\n                        if or(gt(newFreePtr, _18), lt(newFreePtr, memPtr_4))\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, 0x24)\n                        }\n                        mstore(_1, newFreePtr)\n                        mstore(memPtr_4, _3)\n                        if iszero(/** @src 3:1875:1925  \"!stringCompare(userColor[_gameId][msg.sender], \\\"\\\")\" */ iszero(/** @src 3:1876:1925  \"stringCompare(userColor[_gameId][msg.sender], \\\"\\\")\" */ fun_stringCompare(converted, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ memPtr_4)))\n                        {\n                            let memPtr_5 := mload(_1)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, _2), _16)\n                            mstore(add(memPtr_5, 36), 21)\n                            mstore(add(memPtr_5, 68), \"User has no color yet\")\n                            revert(memPtr_5, 100)\n                        }\n                        mstore(_3, param_2)\n                        mstore(_16, /** @src 3:1961:1967  \"boards\" */ 0x02)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataSlot_5 := keccak256(_3, _1)\n                        mstore(_16, /** @src 3:1977:1989  \"userLocation\" */ 0x03)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let _19 := keccak256(_3, _1)\n                        mstore(_3, /** @src 3:1909:1919  \"msg.sender\" */ caller())\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(_16, _19)\n                        /// @src 3:1961:2014  \"boards[_gameId][userLocation[_gameId][msg.sender][0]]\"\n                        let _20, _21 := storage_array_index_access_string_(dataSlot_5, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ and(sload(keccak256(_3, _1)), 0xff))\n                        mstore(_3, param_2)\n                        mstore(_16, /** @src 3:1977:1989  \"userLocation\" */ 0x03)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let _22 := keccak256(_3, _1)\n                        mstore(_3, /** @src 3:1909:1919  \"msg.sender\" */ caller())\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(_16, _22)\n                        /// @src 3:1961:2052  \"boards[_gameId][userLocation[_gameId][msg.sender][0]][userLocation[_gameId][msg.sender][1]]\"\n                        let _23, _24 := storage_array_index_access_string(_20, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ and(shr(8, sload(keccak256(_3, _1))), 0xff))\n                        if _24\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, _3)\n                            revert(_3, 0x24)\n                        }\n                        let newLen := mload(param_3)\n                        if gt(newLen, _18)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, 0x24)\n                        }\n                        clean_up_bytearray_end_slots_string_storage(_23, extract_byte_array_length(sload(_23)), newLen)\n                        let srcOffset := _3\n                        srcOffset := _16\n                        switch gt(newLen, 31)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(_3, _23)\n                            let dstPtr := keccak256(_3, _16)\n                            let i_6 := _3\n                            for { } lt(i_6, loopEnd) { i_6 := add(i_6, _16) }\n                            {\n                                sstore(dstPtr, mload(add(param_3, srcOffset)))\n                                dstPtr := add(dstPtr, /** @src 3:2049:2050  \"1\" */ 0x01)\n                                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                                srcOffset := add(srcOffset, _16)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(param_3, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 3:1977:1989  \"userLocation\" */ 0x03, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ newLen), 248), not(0)))))\n                            }\n                            sstore(_23, add(shl(/** @src 3:2049:2050  \"1\" */ 0x01, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ newLen), /** @src 3:2049:2050  \"1\" */ 0x01))\n                        }\n                        default /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        {\n                            let value_6 := _3\n                            if newLen\n                            {\n                                value_6 := mload(add(param_3, srcOffset))\n                            }\n                            sstore(_23, extract_used_part_and_set_length_of_short_byte_array(value_6, newLen))\n                        }\n                        mstore(_3, param_2)\n                        mstore(_16, /** @src 3:2071:2081  \"colorCount\" */ 0x06)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataSlot_6 := keccak256(_3, _1)\n                        let pos_3 := mload(_1)\n                        let length_1 := mload(param_3)\n                        copy_memory_to_memory_with_cleanup(add(param_3, _16), pos_3, length_1)\n                        let end_1 := add(pos_3, length_1)\n                        mstore(end_1, dataSlot_6)\n                        let hash := keccak256(pos_3, add(sub(end_1, pos_3), _16))\n                        let _25 := sload(/** @src 3:2071:2103  \"colorCount[_gameId][_color] += 1\" */ hash)\n                        /// @src 3:2049:2050  \"1\"\n                        let _26 := 0x01\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let sum := add(_25, /** @src 3:2049:2050  \"1\" */ _26)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        if gt(_25, sum)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x11)\n                            revert(_3, 0x24)\n                        }\n                        sstore(hash, sum)\n                        mstore(_3, param_2)\n                        mstore(_16, /** @src 3:2071:2081  \"colorCount\" */ 0x06)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataSlot_7 := keccak256(_3, _1)\n                        mstore(_16, /** @src 3:1890:1899  \"userColor\" */ 0x05)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let _27 := keccak256(_3, _1)\n                        mstore(_3, /** @src 3:1909:1919  \"msg.sender\" */ caller())\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(_16, _27)\n                        let dataSlot_8 := keccak256(_3, _1)\n                        let pos_4 := mload(_1)\n                        let ret_3 := _3\n                        let slotValue := sload(dataSlot_8)\n                        let length_2 := extract_byte_array_length(slotValue)\n                        switch and(slotValue, /** @src 3:2049:2050  \"1\" */ _26)\n                        case /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ 0 {\n                            mstore(pos_4, and(slotValue, not(255)))\n                            ret_3 := add(pos_4, mul(length_2, iszero(iszero(length_2))))\n                        }\n                        case 1 {\n                            mstore(_3, dataSlot_8)\n                            let dataPos := keccak256(_3, _16)\n                            let i_7 := _3\n                            for { } lt(i_7, length_2) { i_7 := add(i_7, _16) }\n                            {\n                                mstore(add(pos_4, i_7), sload(dataPos))\n                                dataPos := add(dataPos, /** @src 3:2049:2050  \"1\" */ _26)\n                            }\n                            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                            ret_3 := add(pos_4, length_2)\n                        }\n                        mstore(ret_3, dataSlot_7)\n                        let hash_1 := keccak256(pos_4, add(sub(ret_3, pos_4), _16))\n                        let _28 := sload(/** @src 3:2113:2169  \"colorCount[_gameId][userColor[_gameId][msg.sender]] -= 1\" */ hash_1)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let diff := add(_28, not(0))\n                        if gt(diff, _28)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x11)\n                            revert(_3, 0x24)\n                        }\n                        sstore(hash_1, diff)\n                        mstore(_3, param_2)\n                        mstore(_16, /** @src 3:1977:1989  \"userLocation\" */ 0x03)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let _29 := keccak256(_3, _1)\n                        mstore(_3, /** @src 3:1909:1919  \"msg.sender\" */ caller())\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(_16, _29)\n                        let value_7 := and(sload(keccak256(_3, _1)), 0xff)\n                        mstore(_3, param_2)\n                        mstore(_16, /** @src 3:1977:1989  \"userLocation\" */ 0x03)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let _30 := keccak256(_3, _1)\n                        mstore(_3, /** @src 3:1909:1919  \"msg.sender\" */ caller())\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(_16, _30)\n                        let value_8 := and(shr(8, sload(keccak256(_3, _1))), 0xff)\n                        /// @src 3:2184:2295  \"Placed(_gameId, msg.sender, userLocation[_gameId][msg.sender][0], userLocation[_gameId][msg.sender][1], _color)\"\n                        let _31 := /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ mload(_1)\n                        mstore(_31, param_2)\n                        mstore(add(_31, _16), /** @src 3:1909:1919  \"msg.sender\" */ caller())\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(add(_31, _1), value_7)\n                        mstore(add(_31, 96), value_8)\n                        mstore(add(_31, 128), 160)\n                        /// @src 3:2184:2295  \"Placed(_gameId, msg.sender, userLocation[_gameId][msg.sender][0], userLocation[_gameId][msg.sender][1], _color)\"\n                        log1(_31, sub(/** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ abi_encode_string(param_3, add(_31, 160)), /** @src 3:2184:2295  \"Placed(_gameId, msg.sender, userLocation[_gameId][msg.sender][0], userLocation[_gameId][msg.sender][1], _color)\" */ _31), 0xc17d627c7a58c5192775c63a0af7b8372b5f072181120e20a79db460f6d2b638)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        return(_3, _3)\n                    }\n                    case 0xec20ec58 {\n                        if callvalue() { revert(_3, _3) }\n                        let _32 := not(3)\n                        if slt(add(calldatasize(), _32), _1) { revert(_3, _3) }\n                        let value_9 := calldataload(_2)\n                        let offset_4 := calldataload(36)\n                        if gt(offset_4, 0xffffffffffffffff) { revert(_3, _3) }\n                        let _33 := add(_2, offset_4)\n                        if slt(add(sub(calldatasize(), offset_4), _32), 96) { revert(_3, _3) }\n                        /// @src 3:983:994  \"input.color\"\n                        let _34 := add(/** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ offset_4, /** @src 3:983:994  \"input.color\" */ 68)\n                        let expr_offset, expr_length := access_calldata_tail_string_calldata(_33, _34)\n                        /// @src 3:969:1000  \"stringCompare(input.color, RED)\"\n                        let _mpos := /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ abi_decode_available_length_string(/** @src 3:969:1000  \"stringCompare(input.color, RED)\" */ expr_offset, expr_length, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ calldatasize())\n                        /// @src 3:969:1038  \"stringCompare(input.color, RED) || stringCompare(input.color, YELLOW)\"\n                        let expr_3 := /** @src 3:969:1000  \"stringCompare(input.color, RED)\" */ fun_stringCompare(_mpos, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ copy_array_from_storage_to_memory_string_13411())\n                        /// @src 3:969:1038  \"stringCompare(input.color, RED) || stringCompare(input.color, YELLOW)\"\n                        if iszero(expr_3)\n                        {\n                            /// @src 3:1018:1029  \"input.color\"\n                            let expr_offset_1, expr_length_1 := access_calldata_tail_string_calldata(_33, _34)\n                            /// @src 3:1004:1038  \"stringCompare(input.color, YELLOW)\"\n                            let _mpos_1 := /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ abi_decode_available_length_string(/** @src 3:1004:1038  \"stringCompare(input.color, YELLOW)\" */ expr_offset_1, expr_length_1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ calldatasize())\n                            /// @src 3:969:1038  \"stringCompare(input.color, RED) || stringCompare(input.color, YELLOW)\"\n                            expr_3 := /** @src 3:1004:1038  \"stringCompare(input.color, YELLOW)\" */ fun_stringCompare(_mpos_1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ copy_array_from_storage_to_memory_string_13412())\n                        }\n                        /// @src 3:969:1074  \"stringCompare(input.color, RED) || stringCompare(input.color, YELLOW) || stringCompare(input.color, BLUE)\"\n                        let expr_4 := expr_3\n                        if iszero(expr_3)\n                        {\n                            /// @src 3:1056:1067  \"input.color\"\n                            let expr_offset_2, expr_length_2 := access_calldata_tail_string_calldata(_33, _34)\n                            /// @src 3:1042:1074  \"stringCompare(input.color, BLUE)\"\n                            let _mpos_2 := /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ abi_decode_available_length_string(/** @src 3:1042:1074  \"stringCompare(input.color, BLUE)\" */ expr_offset_2, expr_length_2, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ calldatasize())\n                            /// @src 3:969:1074  \"stringCompare(input.color, RED) || stringCompare(input.color, YELLOW) || stringCompare(input.color, BLUE)\"\n                            expr_4 := /** @src 3:1042:1074  \"stringCompare(input.color, BLUE)\" */ fun_stringCompare(_mpos_2, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ copy_array_from_storage_to_memory_string_13413())\n                        }\n                        /// @src 3:961:1104  \"require(stringCompare(input.color, RED) || stringCompare(input.color, YELLOW) || stringCompare(input.color, BLUE), \\\"This color is not allowed\\\")\"\n                        require_helper_stringliteral_57dd(expr_4)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(_3, value_9)\n                        let _35 := 32\n                        mstore(_35, _2)\n                        let _36 := sload(keccak256(_3, _1))\n                        /// @src 3:1122:1151  \"startTime[_gameId] + PLAYTIME\"\n                        let expr_5 := checked_add_uint256(_36, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ sload(/** @src 3:1143:1151  \"PLAYTIME\" */ 0x07))\n                        /// @src 3:1114:1200  \"require(startTime[_gameId] + PLAYTIME > block.number, \\\"The game is not ready to play\\\")\"\n                        require_helper_stringliteral_d503(/** @src 3:1122:1166  \"startTime[_gameId] + PLAYTIME > block.number\" */ gt(expr_5, /** @src 3:1154:1166  \"block.number\" */ number()))\n                        /// @src 3:1246:1257  \"input.color\"\n                        let expr_offset_3, expr_length_3 := access_calldata_tail_string_calldata(_33, _34)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(_3, value_9)\n                        mstore(_35, /** @src 3:1210:1216  \"boards\" */ 0x02)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataSlot_9 := keccak256(_3, _1)\n                        /// @src 3:1210:1234  \"boards[_gameId][input.x]\"\n                        let _37, _38 := storage_array_index_access_string_(dataSlot_9, /** @src 3:1226:1233  \"input.x\" */ read_from_calldatat_uint8(_33))\n                        /// @src 3:1235:1242  \"input.y\"\n                        let _39 := add(/** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ offset_4, 36)\n                        /// @src 3:1210:1243  \"boards[_gameId][input.x][input.y]\"\n                        let _40, _41 := storage_array_index_access_string(_37, /** @src 3:1235:1242  \"input.y\" */ read_from_calldatat_uint8(_39))\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        if _41\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, _3)\n                            revert(_3, 36)\n                        }\n                        copy_byte_array_to_storage_from_string_calldata_to_string(_40, expr_offset_3, expr_length_3)\n                        /// @src 3:1305:1312  \"input.x\"\n                        let expr_6 := read_from_calldatat_uint8(_33)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(_3, value_9)\n                        mstore(_35, /** @src 3:1267:1279  \"userLocation\" */ 0x03)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataSlot_10 := keccak256(_3, _1)\n                        mstore(_3, /** @src 3:1289:1299  \"msg.sender\" */ caller())\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(_35, dataSlot_10)\n                        let _42 := keccak256(_3, _1)\n                        sstore(_42, or(and(sload(_42), not(255)), and(expr_6, 0xff)))\n                        /// @src 3:1360:1367  \"input.y\"\n                        let expr_7 := read_from_calldatat_uint8(_39)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(_3, value_9)\n                        mstore(_35, /** @src 3:1267:1279  \"userLocation\" */ 0x03)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let _43 := keccak256(_3, _1)\n                        mstore(_3, /** @src 3:1289:1299  \"msg.sender\" */ caller())\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(_35, _43)\n                        let _44 := keccak256(_3, _1)\n                        let _45 := sload(_44)\n                        sstore(_44, or(and(_45, not(65280)), and(shl(8, expr_7), 65280)))\n                        /// @src 3:1410:1421  \"input.color\"\n                        let expr_offset_4, expr_length_4 := access_calldata_tail_string_calldata(_33, _34)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(_3, value_9)\n                        mstore(_35, /** @src 3:1377:1386  \"userColor\" */ 0x05)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let _46 := keccak256(_3, _1)\n                        mstore(_3, /** @src 3:1289:1299  \"msg.sender\" */ caller())\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(_35, _46)\n                        copy_byte_array_to_storage_from_string_calldata_to_string(keccak256(_3, _1), expr_offset_4, expr_length_4)\n                        mstore(_3, value_9)\n                        mstore(_35, /** @src 3:1431:1441  \"colorCount\" */ 0x06)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataSlot_11 := keccak256(_3, _1)\n                        /// @src 3:1451:1462  \"input.color\"\n                        let expr_offset_5, expr_length_5 := access_calldata_tail_string_calldata(_33, _34)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let pos_5 := mload(_1)\n                        calldatacopy(pos_5, expr_offset_5, expr_length_5)\n                        let _47 := add(pos_5, expr_length_5)\n                        mstore(_47, dataSlot_11)\n                        let hash_2 := keccak256(pos_5, add(sub(_47, pos_5), _35))\n                        let _48 := sload(/** @src 3:1431:1468  \"colorCount[_gameId][input.color] += 1\" */ hash_2)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let sum_1 := add(_48, /** @src 3:2049:2050  \"1\" */ 0x01)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        if gt(_48, sum_1)\n                        {\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x11)\n                            revert(_3, 36)\n                        }\n                        sstore(hash_2, sum_1)\n                        /// @src 3:1511:1518  \"input.x\"\n                        let expr_8 := read_from_calldatat_uint8(_33)\n                        /// @src 3:1520:1527  \"input.y\"\n                        let expr_9 := read_from_calldatat_uint8(_39)\n                        /// @src 3:1529:1540  \"input.color\"\n                        let expr_offset_6, expr_length_6 := access_calldata_tail_string_calldata(_33, _34)\n                        /// @src 3:1483:1541  \"Placed(_gameId, msg.sender, input.x, input.y, input.color)\"\n                        let _49 := /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ mload(_1)\n                        mstore(_49, value_9)\n                        mstore(add(_49, _35), /** @src 3:1289:1299  \"msg.sender\" */ caller())\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(add(_49, _1), and(expr_8, 0xff))\n                        mstore(add(_49, 96), and(expr_9, 0xff))\n                        mstore(add(_49, 128), 160)\n                        mstore(add(_49, 160), expr_length_6)\n                        calldatacopy(add(_49, 192), expr_offset_6, expr_length_6)\n                        mstore(add(add(_49, expr_length_6), 192), _3)\n                        /// @src 3:1483:1541  \"Placed(_gameId, msg.sender, input.x, input.y, input.color)\"\n                        log1(_49, add(sub(/** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ add(_49, and(add(expr_length_6, 31), not(31))), /** @src 3:1483:1541  \"Placed(_gameId, msg.sender, input.x, input.y, input.color)\" */ _49), /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ 192), /** @src 3:1483:1541  \"Placed(_gameId, msg.sender, input.x, input.y, input.color)\" */ 0xc17d627c7a58c5192775c63a0af7b8372b5f072181120e20a79db460f6d2b638)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        return(_3, _3)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_10 := calldataload(_2)\n                        let _50 := sub(shl(160, 1), 1)\n                        let _51 := and(value_10, _50)\n                        if iszero(eq(value_10, _51)) { revert(_3, _3) }\n                        /// @src 0:1063:1125  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        if /** @src 0:2162:2184  \"newOwner != address(0)\" */ iszero(/** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _51)\n                        {\n                            let memPtr_6 := mload(_1)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, _2), 32)\n                            mstore(add(memPtr_6, 36), 38)\n                            mstore(add(memPtr_6, 68), \"Ownable: new owner is the zero a\")\n                            mstore(add(memPtr_6, 100), \"ddress\")\n                            revert(memPtr_6, 132)\n                        }\n                        let _52 := sload(_3)\n                        sstore(_3, or(and(_52, shl(160, 0xffffffffffffffffffffffff)), _51))\n                        /// @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _3, _3, /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ and(_52, _50), /** @src 0:2566:2606  \"OwnershipTransferred(oldOwner, newOwner)\" */ _51)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        return(_3, _3)\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation_13406(memPtr)\n            {\n                let newFreePtr := add(memPtr, 320)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_available_length_string(src, length, end) -> array\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ 0x24)\n                }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(length, 31), not(31)), 0x20))\n                array := memPtr\n                mstore(memPtr, length)\n                if gt(add(src, length), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                calldatacopy(add(memPtr, 0x20), src, length)\n                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n            }\n            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n            function abi_decode_string(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n            }\n            function abi_decode_uint256t_string(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                let offset := calldataload(36)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                value1 := abi_decode_string(add(4, offset), dataEnd)\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function copy_array_from_storage_to_memory_string_13411() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let slotValue := sload(/** @src 3:1663:1666  \"RED\" */ 0x08)\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, _2)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1663:1666  \"RED\" */ 0x08)\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    let dataPos := 110349606679412691172957834289542550319383271247755660854362242977991410020067\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string_13412() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let slotValue := sload(/** @src 3:1693:1699  \"YELLOW\" */ 0x09)\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, _2)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1693:1699  \"YELLOW\" */ 0x09)\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    let dataPos := 49791959467252497455735130940088646708311117250336157395101362029847983277999\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string_13413() -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let slotValue := sload(/** @src 3:1726:1730  \"BLUE\" */ 0x0a)\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, _2)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 3:1726:1730  \"BLUE\" */ 0x0a)\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    let dataPos := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let slotValue := sload(slot)\n                let length := extract_byte_array_length(slotValue)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, _2)\n                case 0 {\n                    mstore(add(memPtr, _1), and(slotValue, not(255)))\n                    ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _1)\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ slot)\n                    let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _1)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(memPtr, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(memPtr, i), _1)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function storage_array_index_access_string_(array, index) -> slot, offset\n            {\n                if iszero(lt(index, 0x0a))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                slot := add(array, mul(index, 0x0a))\n                offset := 0\n            }\n            function storage_array_index_access_string(array, index) -> slot, offset\n            {\n                if iszero(lt(index, 0x0a))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                slot := add(array, index)\n                offset := 0\n            }\n            /// @ast-id 54 @src 0:1359:1489  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let value := and(sload(/** @src 0:1273:1279  \"_owner\" */ 0x00), /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ sub(shl(160, 1), 1))\n                if iszero(/** @src 0:1422:1445  \"owner() == _msgSender()\" */ eq(/** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ value, /** @src 1:734:744  \"msg.sender\" */ caller()))\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Ownable: caller is not the owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            function access_calldata_tail_string_calldata(base_ref, ptr_to_tail) -> addr, length\n            {\n                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                let addr_1 := add(base_ref, rel_offset_of_tail)\n                length := calldataload(addr_1)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                addr := add(addr_1, 0x20)\n                if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n            }\n            function require_helper_stringliteral_57dd(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 25)\n                    mstore(add(memPtr, 68), \"This color is not allowed\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function require_helper_stringliteral_d503(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 29)\n                    mstore(add(memPtr, 68), \"The game is not ready to play\")\n                    revert(memPtr, 100)\n                }\n            }\n            function read_from_calldatat_uint8(ptr) -> returnValue\n            {\n                let value := calldataload(ptr)\n                if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n                returnValue := value\n            }\n            function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n            {\n                if gt(len, 31)\n                {\n                    /// @src -1:-1:-1\n                    let _1 := 0\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ array)\n                    let data := keccak256(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ 0x20)\n                    let deleteStart := add(data, shr(5, add(startIndex, 31)))\n                    if lt(startIndex, 0x20) { deleteStart := data }\n                    let _2 := add(data, shr(5, add(len, 31)))\n                    let start := deleteStart\n                    for { } lt(start, _2) { start := add(start, 1) }\n                    {\n                        sstore(start, /** @src -1:-1:-1 */ _1)\n                    }\n                }\n            }\n            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n            function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n            {\n                used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n            }\n            function copy_byte_array_to_storage_from_string_calldata_to_string(slot, src, len)\n            {\n                if gt(len, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), len)\n                let srcOffset := 0\n                switch gt(len, 31)\n                case 1 {\n                    let loopEnd := and(len, not(31))\n                    mstore(srcOffset, slot)\n                    let _1 := 0x20\n                    let dstPtr := keccak256(srcOffset, _1)\n                    let i := srcOffset\n                    for { } lt(i, loopEnd) { i := add(i, _1) }\n                    {\n                        sstore(dstPtr, calldataload(add(src, srcOffset)))\n                        dstPtr := add(dstPtr, 1)\n                        srcOffset := add(srcOffset, _1)\n                    }\n                    if lt(loopEnd, len)\n                    {\n                        sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), not(0)))))\n                    }\n                    sstore(slot, add(shl(1, len), 1))\n                }\n                default {\n                    let value := 0\n                    if len\n                    {\n                        value := calldataload(add(src, srcOffset))\n                    }\n                    sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n                }\n            }\n            function copy_literal_to_memory_33b419bd74698af67fe2a20b92da1b0a9a931bccd6338763a62e4b5bdfd6a4a4() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                let newFreePtr := add(memPtr_1, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n                mstore(memPtr_1, 6)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), \"no_one\")\n            }\n            /// @ast-id 636 @src 3:2308:3429  \"function getWinningColor(uint256 _gameId) public view returns (string memory) {...\"\n            function fun_getWinningColor(var_gameId) -> var_mpos\n            {\n                /// @src -1:-1:-1\n                let _1 := 0\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ var_gameId)\n                /// @src 3:2399:2409  \"colorCount\"\n                let _2 := 0x06\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let _3 := 0x20\n                mstore(_3, /** @src 3:2399:2409  \"colorCount\" */ _2)\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let _4 := 0x40\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _4)\n                let pos := mload(_4)\n                let ret := /** @src -1:-1:-1 */ _1\n                /// @src 3:2419:2422  \"RED\"\n                let _5 := 0x08\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let slotValue := sload(/** @src 3:2419:2422  \"RED\" */ _5)\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let length := extract_byte_array_length(slotValue)\n                let _6 := 1\n                let _7 := and(slotValue, _6)\n                switch _7\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, mul(length, iszero(iszero(length))))\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2419:2422  \"RED\" */ _5)\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    let dataPos := 110349606679412691172957834289542550319383271247755660854362242977991410020067\n                    let i := /** @src -1:-1:-1 */ _1\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    for { } lt(i, length) { i := add(i, _3) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _6)\n                    }\n                    ret := add(pos, length)\n                }\n                mstore(ret, dataSlot)\n                let _8 := sload(keccak256(pos, add(sub(ret, pos), _3)))\n                mstore(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ var_gameId)\n                mstore(_3, /** @src 3:2399:2409  \"colorCount\" */ _2)\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _4)\n                let pos_1 := mload(_4)\n                let ret_1 := /** @src -1:-1:-1 */ _1\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let slotValue_1 := sload(/** @src 3:2446:2452  \"YELLOW\" */ 0x09)\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let length_1 := extract_byte_array_length(slotValue_1)\n                let _9 := and(slotValue_1, _6)\n                switch _9\n                case 0 {\n                    mstore(pos_1, and(slotValue_1, not(255)))\n                    ret_1 := add(pos_1, mul(length_1, iszero(iszero(length_1))))\n                }\n                case 1 {\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2446:2452  \"YELLOW\" */ 0x09)\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    let dataPos_1 := 49791959467252497455735130940088646708311117250336157395101362029847983277999\n                    let i_1 := /** @src -1:-1:-1 */ _1\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    for { } lt(i_1, length_1) { i_1 := add(i_1, _3) }\n                    {\n                        mstore(add(pos_1, i_1), sload(dataPos_1))\n                        dataPos_1 := add(dataPos_1, _6)\n                    }\n                    ret_1 := add(pos_1, length_1)\n                }\n                mstore(ret_1, dataSlot_1)\n                /// @src 3:2396:3423  \"if(colorCount[_gameId][RED] < colorCount[_gameId][YELLOW]) { // Red < Yellow...\"\n                switch /** @src 3:2399:2453  \"colorCount[_gameId][RED] < colorCount[_gameId][YELLOW]\" */ lt(_8, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ sload(keccak256(pos_1, add(sub(ret_1, pos_1), _3))))\n                case /** @src 3:2396:3423  \"if(colorCount[_gameId][RED] < colorCount[_gameId][YELLOW]) { // Red < Yellow...\" */ 0 {\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ var_gameId)\n                    mstore(_3, /** @src 3:2399:2409  \"colorCount\" */ _2)\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    let dataSlot_2 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _4)\n                    let pos_2 := mload(_4)\n                    let ret_2 := /** @src -1:-1:-1 */ _1\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    let length_2 := extract_byte_array_length(slotValue)\n                    switch _7\n                    case 0 {\n                        mstore(pos_2, and(slotValue, not(255)))\n                        ret_2 := add(pos_2, mul(length_2, iszero(iszero(length_2))))\n                    }\n                    case 1 {\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2419:2422  \"RED\" */ _5)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataPos_2 := 110349606679412691172957834289542550319383271247755660854362242977991410020067\n                        let i_2 := /** @src -1:-1:-1 */ _1\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        for { } lt(i_2, length_2) { i_2 := add(i_2, _3) }\n                        {\n                            mstore(add(pos_2, i_2), sload(dataPos_2))\n                            dataPos_2 := add(dataPos_2, _6)\n                        }\n                        ret_2 := add(pos_2, length_2)\n                    }\n                    mstore(ret_2, dataSlot_2)\n                    let _10 := sload(keccak256(pos_2, add(sub(ret_2, pos_2), _3)))\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ var_gameId)\n                    mstore(_3, /** @src 3:2399:2409  \"colorCount\" */ _2)\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    let dataSlot_3 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _4)\n                    let pos_3 := mload(_4)\n                    let ret_3 := /** @src -1:-1:-1 */ _1\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    let length_3 := extract_byte_array_length(slotValue_1)\n                    switch _9\n                    case 0 {\n                        mstore(pos_3, and(slotValue_1, not(255)))\n                        ret_3 := add(pos_3, mul(length_3, iszero(iszero(length_3))))\n                    }\n                    case 1 {\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2446:2452  \"YELLOW\" */ 0x09)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataPos_3 := 49791959467252497455735130940088646708311117250336157395101362029847983277999\n                        let i_3 := /** @src -1:-1:-1 */ _1\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        for { } lt(i_3, length_3) { i_3 := add(i_3, _3) }\n                        {\n                            mstore(add(pos_3, i_3), sload(dataPos_3))\n                            dataPos_3 := add(dataPos_3, _6)\n                        }\n                        ret_3 := add(pos_3, length_3)\n                    }\n                    mstore(ret_3, dataSlot_3)\n                    /// @src 3:2789:3423  \"if(colorCount[_gameId][RED] > colorCount[_gameId][YELLOW]) { // Red > Yellow...\"\n                    switch /** @src 3:2792:2846  \"colorCount[_gameId][RED] > colorCount[_gameId][YELLOW]\" */ gt(_10, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ sload(keccak256(pos_3, add(sub(ret_3, pos_3), _3))))\n                    case /** @src 3:2789:3423  \"if(colorCount[_gameId][RED] > colorCount[_gameId][YELLOW]) { // Red > Yellow...\" */ 0 {\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ var_gameId)\n                        mstore(_3, /** @src 3:2399:2409  \"colorCount\" */ _2)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataSlot_4 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _4)\n                        let pos_4 := mload(_4)\n                        let ret_4 := /** @src -1:-1:-1 */ _1\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let length_4 := extract_byte_array_length(slotValue)\n                        switch _7\n                        case 0 {\n                            mstore(pos_4, and(slotValue, not(255)))\n                            ret_4 := add(pos_4, mul(length_4, iszero(iszero(length_4))))\n                        }\n                        case 1 {\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2419:2422  \"RED\" */ _5)\n                            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                            let dataPos_4 := 110349606679412691172957834289542550319383271247755660854362242977991410020067\n                            let i_4 := /** @src -1:-1:-1 */ _1\n                            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                            for { } lt(i_4, length_4) { i_4 := add(i_4, _3) }\n                            {\n                                mstore(add(pos_4, i_4), sload(dataPos_4))\n                                dataPos_4 := add(dataPos_4, _6)\n                            }\n                            ret_4 := add(pos_4, length_4)\n                        }\n                        mstore(ret_4, dataSlot_4)\n                        let _11 := sload(keccak256(pos_4, add(sub(ret_4, pos_4), _3)))\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ var_gameId)\n                        mstore(_3, /** @src 3:2399:2409  \"colorCount\" */ _2)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataSlot_5 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _4)\n                        let pos_5 := mload(_4)\n                        let ret_5 := /** @src -1:-1:-1 */ _1\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let slotValue_2 := sload(/** @src 3:3279:3283  \"BLUE\" */ 0x0a)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let length_5 := extract_byte_array_length(slotValue_2)\n                        switch and(slotValue_2, _6)\n                        case 0 {\n                            mstore(pos_5, and(slotValue_2, not(255)))\n                            ret_5 := add(pos_5, mul(length_5, iszero(iszero(length_5))))\n                        }\n                        case 1 {\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 3:3279:3283  \"BLUE\" */ 0x0a)\n                            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                            let dataPos_5 := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                            let i_5 := /** @src -1:-1:-1 */ _1\n                            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                            for { } lt(i_5, length_5) { i_5 := add(i_5, _3) }\n                            {\n                                mstore(add(pos_5, i_5), sload(dataPos_5))\n                                dataPos_5 := add(dataPos_5, _6)\n                            }\n                            ret_5 := add(pos_5, length_5)\n                        }\n                        mstore(ret_5, dataSlot_5)\n                        /// @src 3:3228:3413  \"if(colorCount[_gameId][RED] <= colorCount[_gameId][BLUE]) { // Red < BLUE or Red == BLUE...\"\n                        switch /** @src 3:3231:3284  \"colorCount[_gameId][RED] <= colorCount[_gameId][BLUE]\" */ iszero(gt(_11, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ sload(keccak256(pos_5, add(sub(ret_5, pos_5), _3)))))\n                        case /** @src 3:3228:3413  \"if(colorCount[_gameId][RED] <= colorCount[_gameId][BLUE]) { // Red < BLUE or Red == BLUE...\" */ 0 {\n                            /// @src 3:3387:3398  \"return BLUE\"\n                            var_mpos := /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ copy_array_from_storage_to_memory_string_13413()\n                            /// @src 3:3387:3398  \"return BLUE\"\n                            leave\n                        }\n                        default /// @src 3:3228:3413  \"if(colorCount[_gameId][RED] <= colorCount[_gameId][BLUE]) { // Red < BLUE or Red == BLUE...\"\n                        {\n                            /// @src 3:3333:3348  \"return \\\"no_one\\\"\"\n                            var_mpos := /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ copy_literal_to_memory_33b419bd74698af67fe2a20b92da1b0a9a931bccd6338763a62e4b5bdfd6a4a4()\n                            /// @src 3:3333:3348  \"return \\\"no_one\\\"\"\n                            leave\n                        }\n                    }\n                    default /// @src 3:2789:3423  \"if(colorCount[_gameId][RED] > colorCount[_gameId][YELLOW]) { // Red > Yellow...\"\n                    {\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ var_gameId)\n                        mstore(_3, /** @src 3:2399:2409  \"colorCount\" */ _2)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataSlot_6 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _4)\n                        let pos_6 := mload(_4)\n                        let ret_6 := /** @src -1:-1:-1 */ _1\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let length_6 := extract_byte_array_length(slotValue_1)\n                        switch _9\n                        case 0 {\n                            mstore(pos_6, and(slotValue_1, not(255)))\n                            ret_6 := add(pos_6, mul(length_6, iszero(iszero(length_6))))\n                        }\n                        case 1 {\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2446:2452  \"YELLOW\" */ 0x09)\n                            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                            let dataPos_6 := 49791959467252497455735130940088646708311117250336157395101362029847983277999\n                            let i_6 := /** @src -1:-1:-1 */ _1\n                            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                            for { } lt(i_6, length_6) { i_6 := add(i_6, _3) }\n                            {\n                                mstore(add(pos_6, i_6), sload(dataPos_6))\n                                dataPos_6 := add(dataPos_6, _6)\n                            }\n                            ret_6 := add(pos_6, length_6)\n                        }\n                        mstore(ret_6, dataSlot_6)\n                        let _12 := sload(keccak256(pos_6, add(sub(ret_6, pos_6), _3)))\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ var_gameId)\n                        mstore(_3, /** @src 3:2399:2409  \"colorCount\" */ _2)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataSlot_7 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _4)\n                        let pos_7 := mload(_4)\n                        let ret_7 := /** @src -1:-1:-1 */ _1\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let slotValue_3 := sload(/** @src 3:2931:2935  \"BLUE\" */ 0x0a)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let length_7 := extract_byte_array_length(slotValue_3)\n                        let _13 := and(slotValue_3, _6)\n                        switch _13\n                        case 0 {\n                            mstore(pos_7, and(slotValue_3, not(255)))\n                            ret_7 := add(pos_7, mul(length_7, iszero(iszero(length_7))))\n                        }\n                        case 1 {\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2931:2935  \"BLUE\" */ 0x0a)\n                            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                            let dataPos_7 := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                            let i_7 := /** @src -1:-1:-1 */ _1\n                            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                            for { } lt(i_7, length_7) { i_7 := add(i_7, _3) }\n                            {\n                                mstore(add(pos_7, i_7), sload(dataPos_7))\n                                dataPos_7 := add(dataPos_7, _6)\n                            }\n                            ret_7 := add(pos_7, length_7)\n                        }\n                        mstore(ret_7, dataSlot_7)\n                        /// @src 3:2878:3181  \"if(colorCount[_gameId][YELLOW] < colorCount[_gameId][BLUE]) { // Yellow < Blue...\"\n                        switch /** @src 3:2881:2936  \"colorCount[_gameId][YELLOW] < colorCount[_gameId][BLUE]\" */ lt(_12, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ sload(keccak256(pos_7, add(sub(ret_7, pos_7), _3))))\n                        case /** @src 3:2878:3181  \"if(colorCount[_gameId][YELLOW] < colorCount[_gameId][BLUE]) { // Yellow < Blue...\" */ 0 {\n                            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ var_gameId)\n                            mstore(_3, /** @src 3:2399:2409  \"colorCount\" */ _2)\n                            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                            let dataSlot_8 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _4)\n                            let pos_8 := mload(_4)\n                            let ret_8 := /** @src -1:-1:-1 */ _1\n                            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                            let length_8 := extract_byte_array_length(slotValue_1)\n                            switch _9\n                            case 0 {\n                                mstore(pos_8, and(slotValue_1, not(255)))\n                                ret_8 := add(pos_8, mul(length_8, iszero(iszero(length_8))))\n                            }\n                            case 1 {\n                                mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2446:2452  \"YELLOW\" */ 0x09)\n                                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                                let dataPos_8 := 49791959467252497455735130940088646708311117250336157395101362029847983277999\n                                let i_8 := /** @src -1:-1:-1 */ _1\n                                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                                for { } lt(i_8, length_8) { i_8 := add(i_8, _3) }\n                                {\n                                    mstore(add(pos_8, i_8), sload(dataPos_8))\n                                    dataPos_8 := add(dataPos_8, _6)\n                                }\n                                ret_8 := add(pos_8, length_8)\n                            }\n                            mstore(ret_8, dataSlot_8)\n                            let _14 := sload(keccak256(pos_8, add(sub(ret_8, pos_8), _3)))\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ var_gameId)\n                            mstore(_3, /** @src 3:2399:2409  \"colorCount\" */ _2)\n                            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                            let dataSlot_9 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _4)\n                            let pos_9 := mload(_4)\n                            let ret_9 := /** @src -1:-1:-1 */ _1\n                            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                            let length_9 := extract_byte_array_length(slotValue_3)\n                            switch _13\n                            case 0 {\n                                mstore(pos_9, and(slotValue_3, not(255)))\n                                ret_9 := add(pos_9, mul(length_9, iszero(iszero(length_9))))\n                            }\n                            case 1 {\n                                mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2931:2935  \"BLUE\" */ 0x0a)\n                                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                                let dataPos_9 := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                                let i_9 := /** @src -1:-1:-1 */ _1\n                                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                                for { } lt(i_9, length_9) { i_9 := add(i_9, _3) }\n                                {\n                                    mstore(add(pos_9, i_9), sload(dataPos_9))\n                                    dataPos_9 := add(dataPos_9, _6)\n                                }\n                                ret_9 := add(pos_9, length_9)\n                            }\n                            mstore(ret_9, dataSlot_9)\n                            /// @src 3:3007:3181  \"if(colorCount[_gameId][YELLOW] > colorCount[_gameId][BLUE]){ // Yellow > Blue...\"\n                            switch /** @src 3:3010:3065  \"colorCount[_gameId][YELLOW] > colorCount[_gameId][BLUE]\" */ gt(_14, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ sload(keccak256(pos_9, add(sub(ret_9, pos_9), _3))))\n                            case /** @src 3:3007:3181  \"if(colorCount[_gameId][YELLOW] > colorCount[_gameId][BLUE]){ // Yellow > Blue...\" */ 0 {\n                                /// @src 3:3151:3166  \"return \\\"no_one\\\"\"\n                                var_mpos := /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ copy_literal_to_memory_33b419bd74698af67fe2a20b92da1b0a9a931bccd6338763a62e4b5bdfd6a4a4()\n                                /// @src 3:3151:3166  \"return \\\"no_one\\\"\"\n                                leave\n                            }\n                            default /// @src 3:3007:3181  \"if(colorCount[_gameId][YELLOW] > colorCount[_gameId][BLUE]){ // Yellow > Blue...\"\n                            {\n                                /// @src 3:3101:3112  \"return BLUE\"\n                                var_mpos := /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ copy_array_from_storage_to_memory_string_13413()\n                                /// @src 3:3101:3112  \"return BLUE\"\n                                leave\n                            }\n                        }\n                        default /// @src 3:2878:3181  \"if(colorCount[_gameId][YELLOW] < colorCount[_gameId][BLUE]) { // Yellow < Blue...\"\n                        {\n                            /// @src 3:2973:2986  \"return YELLOW\"\n                            var_mpos := /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ copy_array_from_storage_to_memory_string_13412()\n                            /// @src 3:2973:2986  \"return YELLOW\"\n                            leave\n                        }\n                    }\n                }\n                default /// @src 3:2396:3423  \"if(colorCount[_gameId][RED] < colorCount[_gameId][YELLOW]) { // Red < Yellow...\"\n                {\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ var_gameId)\n                    mstore(_3, /** @src 3:2399:2409  \"colorCount\" */ _2)\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    let dataSlot_10 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _4)\n                    let pos_10 := mload(_4)\n                    let ret_10 := /** @src -1:-1:-1 */ _1\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    let length_10 := extract_byte_array_length(slotValue)\n                    switch _7\n                    case 0 {\n                        mstore(pos_10, and(slotValue, not(255)))\n                        ret_10 := add(pos_10, mul(length_10, iszero(iszero(length_10))))\n                    }\n                    case 1 {\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2419:2422  \"RED\" */ _5)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataPos_10 := 110349606679412691172957834289542550319383271247755660854362242977991410020067\n                        let i_10 := /** @src -1:-1:-1 */ _1\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        for { } lt(i_10, length_10) { i_10 := add(i_10, _3) }\n                        {\n                            mstore(add(pos_10, i_10), sload(dataPos_10))\n                            dataPos_10 := add(dataPos_10, _6)\n                        }\n                        ret_10 := add(pos_10, length_10)\n                    }\n                    mstore(ret_10, dataSlot_10)\n                    let _15 := sload(keccak256(pos_10, add(sub(ret_10, pos_10), _3)))\n                    mstore(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ var_gameId)\n                    mstore(_3, /** @src 3:2399:2409  \"colorCount\" */ _2)\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    let dataSlot_11 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _4)\n                    let pos_11 := mload(_4)\n                    let ret_11 := /** @src -1:-1:-1 */ _1\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    let slotValue_4 := sload(/** @src 3:2535:2539  \"BLUE\" */ 0x0a)\n                    /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                    let length_11 := extract_byte_array_length(slotValue_4)\n                    let _16 := and(slotValue_4, _6)\n                    switch _16\n                    case 0 {\n                        mstore(pos_11, and(slotValue_4, not(255)))\n                        ret_11 := add(pos_11, mul(length_11, iszero(iszero(length_11))))\n                    }\n                    case 1 {\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2535:2539  \"BLUE\" */ 0x0a)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataPos_11 := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                        let i_11 := /** @src -1:-1:-1 */ _1\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        for { } lt(i_11, length_11) { i_11 := add(i_11, _3) }\n                        {\n                            mstore(add(pos_11, i_11), sload(dataPos_11))\n                            dataPos_11 := add(dataPos_11, _6)\n                        }\n                        ret_11 := add(pos_11, length_11)\n                    }\n                    mstore(ret_11, dataSlot_11)\n                    /// @src 3:2485:2773  \"if(colorCount[_gameId][RED] < colorCount[_gameId][BLUE]) { // Red < Blue...\"\n                    switch /** @src 3:2488:2540  \"colorCount[_gameId][RED] < colorCount[_gameId][BLUE]\" */ lt(_15, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ sload(keccak256(pos_11, add(sub(ret_11, pos_11), _3))))\n                    case /** @src 3:2485:2773  \"if(colorCount[_gameId][RED] < colorCount[_gameId][BLUE]) { // Red < Blue...\" */ 0 {\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ var_gameId)\n                        mstore(_3, /** @src 3:2399:2409  \"colorCount\" */ _2)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataSlot_12 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _4)\n                        let pos_12 := mload(_4)\n                        let ret_12 := /** @src -1:-1:-1 */ _1\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let length_12 := extract_byte_array_length(slotValue)\n                        switch _7\n                        case 0 {\n                            mstore(pos_12, and(slotValue, not(255)))\n                            ret_12 := add(pos_12, mul(length_12, iszero(iszero(length_12))))\n                        }\n                        case 1 {\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2419:2422  \"RED\" */ _5)\n                            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                            let dataPos_12 := 110349606679412691172957834289542550319383271247755660854362242977991410020067\n                            let i_12 := /** @src -1:-1:-1 */ _1\n                            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                            for { } lt(i_12, length_12) { i_12 := add(i_12, _3) }\n                            {\n                                mstore(add(pos_12, i_12), sload(dataPos_12))\n                                dataPos_12 := add(dataPos_12, _6)\n                            }\n                            ret_12 := add(pos_12, length_12)\n                        }\n                        mstore(ret_12, dataSlot_12)\n                        let _17 := sload(keccak256(pos_12, add(sub(ret_12, pos_12), _3)))\n                        mstore(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ var_gameId)\n                        mstore(_3, /** @src 3:2399:2409  \"colorCount\" */ _2)\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let dataSlot_13 := keccak256(/** @src -1:-1:-1 */ _1, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _4)\n                        let pos_13 := mload(_4)\n                        let ret_13 := /** @src -1:-1:-1 */ _1\n                        /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                        let length_13 := extract_byte_array_length(slotValue_4)\n                        switch _16\n                        case 0 {\n                            mstore(pos_13, and(slotValue_4, not(255)))\n                            ret_13 := add(pos_13, mul(length_13, iszero(iszero(length_13))))\n                        }\n                        case 1 {\n                            mstore(/** @src -1:-1:-1 */ _1, /** @src 3:2535:2539  \"BLUE\" */ 0x0a)\n                            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                            let dataPos_13 := 89717814153306320011181716697424560163256864414616650038987186496166826726056\n                            let i_13 := /** @src -1:-1:-1 */ _1\n                            /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                            for { } lt(i_13, length_13) { i_13 := add(i_13, _3) }\n                            {\n                                mstore(add(pos_13, i_13), sload(dataPos_13))\n                                dataPos_13 := add(dataPos_13, _6)\n                            }\n                            ret_13 := add(pos_13, length_13)\n                        }\n                        mstore(ret_13, dataSlot_13)\n                        /// @src 3:2605:2773  \"if(colorCount[_gameId][RED] > colorCount[_gameId][BLUE]){ // Red > Blue...\"\n                        switch /** @src 3:2608:2660  \"colorCount[_gameId][RED] > colorCount[_gameId][BLUE]\" */ gt(_17, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ sload(keccak256(pos_13, add(sub(ret_13, pos_13), _3))))\n                        case /** @src 3:2605:2773  \"if(colorCount[_gameId][RED] > colorCount[_gameId][BLUE]){ // Red > Blue...\" */ 0 {\n                            /// @src 3:2743:2758  \"return \\\"no_one\\\"\"\n                            var_mpos := /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ copy_literal_to_memory_33b419bd74698af67fe2a20b92da1b0a9a931bccd6338763a62e4b5bdfd6a4a4()\n                            /// @src 3:2743:2758  \"return \\\"no_one\\\"\"\n                            leave\n                        }\n                        default /// @src 3:2605:2773  \"if(colorCount[_gameId][RED] > colorCount[_gameId][BLUE]){ // Red > Blue...\"\n                        {\n                            /// @src 3:2693:2704  \"return BLUE\"\n                            var_mpos := /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ copy_array_from_storage_to_memory_string_13413()\n                            /// @src 3:2693:2704  \"return BLUE\"\n                            leave\n                        }\n                    }\n                    default /// @src 3:2485:2773  \"if(colorCount[_gameId][RED] < colorCount[_gameId][BLUE]) { // Red < Blue...\"\n                    {\n                        /// @src 3:2574:2584  \"return RED\"\n                        var_mpos := /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ copy_array_from_storage_to_memory_string_13411()\n                        /// @src 3:2574:2584  \"return RED\"\n                        leave\n                    }\n                }\n            }\n            /// @ast-id 662 @src 3:3435:3669  \"function isUserWin(uint256 _gameId) external view returns(bool) {...\"\n            function fun_isUserWin(var_gameId) -> var\n            {\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ var_gameId)\n                mstore(0x20, /** @src 3:3526:3535  \"userColor\" */ 0x05)\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ 0x40)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:3545:3555  \"msg.sender\" */ caller())\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                mstore(0x20, dataSlot)\n                let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ 0x40)\n                /// @src 3:3509:3663  \"if(stringCompare(userColor[_gameId][msg.sender], getWinningColor(_gameId))){...\"\n                switch /** @src 3:3512:3583  \"stringCompare(userColor[_gameId][msg.sender], getWinningColor(_gameId))\" */ fun_stringCompare(/** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ copy_array_from_storage_to_memory_string(/** @src 3:3512:3583  \"stringCompare(userColor[_gameId][msg.sender], getWinningColor(_gameId))\" */ dataSlot_1), /** @src 3:3558:3582  \"getWinningColor(_gameId)\" */ fun_getWinningColor(var_gameId))\n                case /** @src 3:3509:3663  \"if(stringCompare(userColor[_gameId][msg.sender], getWinningColor(_gameId))){...\" */ 0 {\n                    /// @src 3:3640:3652  \"return false\"\n                    var := /** @src -1:-1:-1 */ 0\n                    /// @src 3:3640:3652  \"return false\"\n                    leave\n                }\n                default /// @src 3:3509:3663  \"if(stringCompare(userColor[_gameId][msg.sender], getWinningColor(_gameId))){...\"\n                {\n                    /// @src 3:3598:3609  \"return true\"\n                    var := /** @src 3:3605:3609  \"true\" */ 0x01\n                    /// @src 3:3598:3609  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 686 @src 3:3675:3874  \"function stringCompare(string memory _string1, string memory _string2) public pure returns(bool) {...\"\n            function fun_stringCompare(var_string1_mpos, var_string2_mpos) -> var\n            {\n                /// @src 3:3799:3825  \"abi.encodePacked(_string1)\"\n                let expr_mpos := /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ mload(64)\n                /// @src 3:3799:3825  \"abi.encodePacked(_string1)\"\n                let _1 := 0x20\n                let _2 := add(expr_mpos, _1)\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let length := mload(var_string1_mpos)\n                copy_memory_to_memory_with_cleanup(add(var_string1_mpos, /** @src 3:3799:3825  \"abi.encodePacked(_string1)\" */ _1), /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _2, length)\n                /// @src 3:3799:3825  \"abi.encodePacked(_string1)\"\n                let _3 := sub(/** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ add(/** @src 3:3799:3825  \"abi.encodePacked(_string1)\" */ expr_mpos, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ length), /** @src 3:3799:3825  \"abi.encodePacked(_string1)\" */ expr_mpos)\n                mstore(expr_mpos, _3)\n                finalize_allocation(expr_mpos, add(_3, _1))\n                /// @src 3:3789:3826  \"keccak256(abi.encodePacked(_string1))\"\n                let expr := keccak256(/** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _2, mload(/** @src 3:3789:3826  \"keccak256(abi.encodePacked(_string1))\" */ expr_mpos))\n                /// @src 3:3840:3866  \"abi.encodePacked(_string2)\"\n                let expr_681_mpos := /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ mload(64)\n                /// @src 3:3840:3866  \"abi.encodePacked(_string2)\"\n                let _4 := add(expr_681_mpos, /** @src 3:3799:3825  \"abi.encodePacked(_string1)\" */ _1)\n                /// @src 3:222:4123  \"contract BoardGame is Ownable {...\"\n                let length_1 := mload(var_string2_mpos)\n                copy_memory_to_memory_with_cleanup(add(var_string2_mpos, /** @src 3:3799:3825  \"abi.encodePacked(_string1)\" */ _1), /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _4, length_1)\n                /// @src 3:3840:3866  \"abi.encodePacked(_string2)\"\n                let _5 := sub(/** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ add(/** @src 3:3840:3866  \"abi.encodePacked(_string2)\" */ expr_681_mpos, /** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ length_1), /** @src 3:3840:3866  \"abi.encodePacked(_string2)\" */ expr_681_mpos)\n                mstore(expr_681_mpos, _5)\n                finalize_allocation(expr_681_mpos, add(_5, /** @src 3:3799:3825  \"abi.encodePacked(_string1)\" */ _1))\n                /// @src 3:3782:3867  \"return keccak256(abi.encodePacked(_string1)) == keccak256(abi.encodePacked(_string2))\"\n                var := /** @src 3:3789:3867  \"keccak256(abi.encodePacked(_string1)) == keccak256(abi.encodePacked(_string2))\" */ eq(expr, /** @src 3:3830:3867  \"keccak256(abi.encodePacked(_string2))\" */ keccak256(/** @src 3:222:4123  \"contract BoardGame is Ownable {...\" */ _4, mload(/** @src 3:3830:3867  \"keccak256(abi.encodePacked(_string2))\" */ expr_681_mpos)))\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122054d7a510223257f0cd76555fd40296f84adf140dad13c9c4ea4a2d9c4b8bef4764736f6c63430008110033\"\n    }\n}\n","hash":"010004b96407ed820aeb5b256523b9118872fee739f941b59dd97b360531df29","factoryDependencies":{}}}}}}